// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: test.capnp

package org.capnproto.compilertest;

public final class Test {
    public enum TestEnum {
        FOO,
        BAR,
        BAZ,
        QUX,
        QUUX,
        CORGE,
        GRAULT,
        GARPLY,
        _NOT_IN_SCHEMA,
    }

    public static class TestAllTypes {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)6,(short)19);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }
            public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
                return TestAllTypes.STRUCT_SIZE;
            }
            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                super(segment, data, pointers, dataSize, pointerCount);
            }
            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
            public final org.capnproto.Void getVoidField() {
                return org.capnproto.Void.VOID;
            }
            public final void setVoidField(org.capnproto.Void value) {
            }

            public final boolean getBoolField() {
                return _getBooleanField(0);
            }
            public final void setBoolField(boolean value) {
                _setBooleanField(0, value);
            }

            public final byte getInt8Field() {
                return _getByteField(1);
            }
            public final void setInt8Field(byte value) {
                _setByteField(1, value);
            }

            public final short getInt16Field() {
                return _getShortField(1);
            }
            public final void setInt16Field(short value) {
                _setShortField(1, value);
            }

            public final int getInt32Field() {
                return _getIntField(1);
            }
            public final void setInt32Field(int value) {
                _setIntField(1, value);
            }

            public final long getInt64Field() {
                return _getLongField(1);
            }
            public final void setInt64Field(long value) {
                _setLongField(1, value);
            }

            public final byte getUInt8Field() {
                return _getByteField(16);
            }
            public final void setUInt8Field(byte value) {
                _setByteField(16, value);
            }

            public final short getUInt16Field() {
                return _getShortField(9);
            }
            public final void setUInt16Field(short value) {
                _setShortField(9, value);
            }

            public final int getUInt32Field() {
                return _getIntField(5);
            }
            public final void setUInt32Field(int value) {
                _setIntField(5, value);
            }

            public final long getUInt64Field() {
                return _getLongField(3);
            }
            public final void setUInt64Field(long value) {
                _setLongField(3, value);
            }

            public final float getFloat32Field() {
                return _getFloatField(8);
            }
            public final void setFloat32Field(float value) {
                _setFloatField(8, value);
            }

            public final double getFloat64Field() {
                return _getDoubleField(5);
            }
            public final void setFloat64Field(double value) {
                _setDoubleField(5, value);
            }

            public final boolean hasTextField() {
                return !_pointerFieldIsNull(0);
            }
            public final org.capnproto.Text.Builder getTextField() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }
            public final void setTextField(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 0, value);
            }
            public final void setTextField(String value) {
                _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
            }
            public final org.capnproto.Text.Builder initTextField(int size) {
                return _initPointerField(org.capnproto.Text.factory, 0, size);
            }
            public final boolean hasDataField() {
                return !_pointerFieldIsNull(1);
            }
            public final org.capnproto.Data.Builder getDataField() {
                return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
            }
            public final void setDataField(org.capnproto.Data.Reader value) {
                _setPointerField(org.capnproto.Data.factory, 1, value);
            }
            public final void setDataField(byte [] value) {
                _setPointerField(org.capnproto.Data.factory, 1, new org.capnproto.Data.Reader(value));
            }
            public final org.capnproto.Data.Builder initDataField(int size) {
                return _initPointerField(org.capnproto.Data.factory, 1, size);
            }
            public final Test.TestAllTypes.Builder getStructField() {
                return _getPointerField(Test.TestAllTypes.factory, 2, null, 0);
            }
            public final void setStructField(Test.TestAllTypes.Reader value) {
                _setPointerField(Test.TestAllTypes.factory,2, value);
            }
            public final Test.TestAllTypes.Builder initStructField() {
                return _initPointerField(Test.TestAllTypes.factory,2, 0);
            }
            public final Test.TestEnum getEnumField() {
                switch(_getShortField(18)) {
                    case 0 : return Test.TestEnum.FOO;
                    case 1 : return Test.TestEnum.BAR;
                    case 2 : return Test.TestEnum.BAZ;
                    case 3 : return Test.TestEnum.QUX;
                    case 4 : return Test.TestEnum.QUUX;
                    case 5 : return Test.TestEnum.CORGE;
                    case 6 : return Test.TestEnum.GRAULT;
                    case 7 : return Test.TestEnum.GARPLY;
                    default: return Test.TestEnum._NOT_IN_SCHEMA;
                }
            }
            public final void setEnumField(Test.TestEnum value) {
                _setShortField(18, (short)value.ordinal());
            }

            public final org.capnproto.Void getInterfaceField() {
                return org.capnproto.Void.VOID;
            }
            public final void setInterfaceField(org.capnproto.Void value) {
            }

            public final boolean hasVoidList() {
                return !_pointerFieldIsNull(3);
            }
            public final org.capnproto.PrimitiveList.Void.Builder getVoidList() {
                return _getPointerField(org.capnproto.PrimitiveList.Void.factory, 3, null, 0);
            }
            public final void setVoidList(org.capnproto.PrimitiveList.Void.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Void.factory, 3, value);
            }
            public final org.capnproto.PrimitiveList.Void.Builder initVoidList(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Void.factory, 3, size);
            }
            public final boolean hasBoolList() {
                return !_pointerFieldIsNull(4);
            }
            public final org.capnproto.PrimitiveList.Boolean.Builder getBoolList() {
                return _getPointerField(org.capnproto.PrimitiveList.Boolean.factory, 4, null, 0);
            }
            public final void setBoolList(org.capnproto.PrimitiveList.Boolean.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Boolean.factory, 4, value);
            }
            public final org.capnproto.PrimitiveList.Boolean.Builder initBoolList(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Boolean.factory, 4, size);
            }
            public final boolean hasInt8List() {
                return !_pointerFieldIsNull(5);
            }
            public final org.capnproto.PrimitiveList.Byte.Builder getInt8List() {
                return _getPointerField(org.capnproto.PrimitiveList.Byte.factory, 5, null, 0);
            }
            public final void setInt8List(org.capnproto.PrimitiveList.Byte.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Byte.factory, 5, value);
            }
            public final org.capnproto.PrimitiveList.Byte.Builder initInt8List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Byte.factory, 5, size);
            }
            public final boolean hasInt16List() {
                return !_pointerFieldIsNull(6);
            }
            public final org.capnproto.PrimitiveList.Short.Builder getInt16List() {
                return _getPointerField(org.capnproto.PrimitiveList.Short.factory, 6, null, 0);
            }
            public final void setInt16List(org.capnproto.PrimitiveList.Short.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Short.factory, 6, value);
            }
            public final org.capnproto.PrimitiveList.Short.Builder initInt16List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Short.factory, 6, size);
            }
            public final boolean hasInt32List() {
                return !_pointerFieldIsNull(7);
            }
            public final org.capnproto.PrimitiveList.Int.Builder getInt32List() {
                return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 7, null, 0);
            }
            public final void setInt32List(org.capnproto.PrimitiveList.Int.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Int.factory, 7, value);
            }
            public final org.capnproto.PrimitiveList.Int.Builder initInt32List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 7, size);
            }
            public final boolean hasInt64List() {
                return !_pointerFieldIsNull(8);
            }
            public final org.capnproto.PrimitiveList.Long.Builder getInt64List() {
                return _getPointerField(org.capnproto.PrimitiveList.Long.factory, 8, null, 0);
            }
            public final void setInt64List(org.capnproto.PrimitiveList.Long.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Long.factory, 8, value);
            }
            public final org.capnproto.PrimitiveList.Long.Builder initInt64List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Long.factory, 8, size);
            }
            public final boolean hasUInt8List() {
                return !_pointerFieldIsNull(9);
            }
            public final org.capnproto.PrimitiveList.Byte.Builder getUInt8List() {
                return _getPointerField(org.capnproto.PrimitiveList.Byte.factory, 9, null, 0);
            }
            public final void setUInt8List(org.capnproto.PrimitiveList.Byte.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Byte.factory, 9, value);
            }
            public final org.capnproto.PrimitiveList.Byte.Builder initUInt8List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Byte.factory, 9, size);
            }
            public final boolean hasUInt16List() {
                return !_pointerFieldIsNull(10);
            }
            public final org.capnproto.PrimitiveList.Short.Builder getUInt16List() {
                return _getPointerField(org.capnproto.PrimitiveList.Short.factory, 10, null, 0);
            }
            public final void setUInt16List(org.capnproto.PrimitiveList.Short.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Short.factory, 10, value);
            }
            public final org.capnproto.PrimitiveList.Short.Builder initUInt16List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Short.factory, 10, size);
            }
            public final boolean hasUInt32List() {
                return !_pointerFieldIsNull(11);
            }
            public final org.capnproto.PrimitiveList.Int.Builder getUInt32List() {
                return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 11, null, 0);
            }
            public final void setUInt32List(org.capnproto.PrimitiveList.Int.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Int.factory, 11, value);
            }
            public final org.capnproto.PrimitiveList.Int.Builder initUInt32List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 11, size);
            }
            public final boolean hasUInt64List() {
                return !_pointerFieldIsNull(12);
            }
            public final org.capnproto.PrimitiveList.Long.Builder getUInt64List() {
                return _getPointerField(org.capnproto.PrimitiveList.Long.factory, 12, null, 0);
            }
            public final void setUInt64List(org.capnproto.PrimitiveList.Long.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Long.factory, 12, value);
            }
            public final org.capnproto.PrimitiveList.Long.Builder initUInt64List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Long.factory, 12, size);
            }
            public final boolean hasFloat32List() {
                return !_pointerFieldIsNull(13);
            }
            public final org.capnproto.PrimitiveList.Float.Builder getFloat32List() {
                return _getPointerField(org.capnproto.PrimitiveList.Float.factory, 13, null, 0);
            }
            public final void setFloat32List(org.capnproto.PrimitiveList.Float.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Float.factory, 13, value);
            }
            public final org.capnproto.PrimitiveList.Float.Builder initFloat32List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Float.factory, 13, size);
            }
            public final boolean hasFloat64List() {
                return !_pointerFieldIsNull(14);
            }
            public final org.capnproto.PrimitiveList.Double.Builder getFloat64List() {
                return _getPointerField(org.capnproto.PrimitiveList.Double.factory, 14, null, 0);
            }
            public final void setFloat64List(org.capnproto.PrimitiveList.Double.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Double.factory, 14, value);
            }
            public final org.capnproto.PrimitiveList.Double.Builder initFloat64List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Double.factory, 14, size);
            }
            public final boolean hasTextList() {
                return !_pointerFieldIsNull(15);
            }
            public final org.capnproto.TextList.Builder getTextList() {
                return _getPointerField(org.capnproto.TextList.factory, 15, null, 0);
            }
            public final void setTextList(org.capnproto.TextList.Reader value) {
                _setPointerField(org.capnproto.TextList.factory, 15, value);
            }
            public final org.capnproto.TextList.Builder initTextList(int size) {
                return _initPointerField(org.capnproto.TextList.factory, 15, size);
            }
            public final boolean hasDataList() {
                return !_pointerFieldIsNull(16);
            }
            public final org.capnproto.DataList.Builder getDataList() {
                return _getPointerField(org.capnproto.DataList.factory, 16, null, 0);
            }
            public final void setDataList(org.capnproto.DataList.Reader value) {
                _setPointerField(org.capnproto.DataList.factory, 16, value);
            }
            public final org.capnproto.DataList.Builder initDataList(int size) {
                return _initPointerField(org.capnproto.DataList.factory, 16, size);
            }
            public final boolean hasStructList() {
                return !_pointerFieldIsNull(17);
            }
            public final org.capnproto.StructList.Builder<Test.TestAllTypes.Builder> getStructList() {
                return _getPointerField(Test.TestAllTypes.listFactory, 17, null, 0);
            }
            public final void setStructList(org.capnproto.StructList.Reader<Test.TestAllTypes.Reader> value) {
                _setPointerField(Test.TestAllTypes.listFactory, 17, value);
            }
            public final org.capnproto.StructList.Builder<Test.TestAllTypes.Builder> initStructList(int size) {
                return _initPointerField(Test.TestAllTypes.listFactory, 17, size);
            }
            public final boolean hasEnumList() {
                return !_pointerFieldIsNull(18);
            }
            public final org.capnproto.EnumList.Builder<Test.TestEnum> getEnumList() {
                return _getPointerField(new org.capnproto.EnumList.Factory<Test.TestEnum>(Test.TestEnum.values()), 18, null, 0);
            }
            public final void setEnumList(org.capnproto.EnumList.Reader<Test.TestEnum> value) {
                _setPointerField(new org.capnproto.EnumList.Factory<Test.TestEnum>(Test.TestEnum.values()), 18, value);
            }
            public final org.capnproto.EnumList.Builder<Test.TestEnum> initEnumList(int size) {
                return _initPointerField(new org.capnproto.EnumList.Factory<Test.TestEnum>(Test.TestEnum.values()), 18, size);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final org.capnproto.Void getVoidField() {
                return org.capnproto.Void.VOID;
            }

            public final boolean getBoolField() {
                return _getBooleanField(0);
            }

            public final byte getInt8Field() {
                return _getByteField(1);
            }

            public final short getInt16Field() {
                return _getShortField(1);
            }

            public final int getInt32Field() {
                return _getIntField(1);
            }

            public final long getInt64Field() {
                return _getLongField(1);
            }

            public final byte getUInt8Field() {
                return _getByteField(16);
            }

            public final short getUInt16Field() {
                return _getShortField(9);
            }

            public final int getUInt32Field() {
                return _getIntField(5);
            }

            public final long getUInt64Field() {
                return _getLongField(3);
            }

            public final float getFloat32Field() {
                return _getFloatField(8);
            }

            public final double getFloat64Field() {
                return _getDoubleField(5);
            }

            public boolean hasTextField() {
                return !_pointerFieldIsNull(0);
            }
            public org.capnproto.Text.Reader getTextField() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public boolean hasDataField() {
                return !_pointerFieldIsNull(1);
            }
            public org.capnproto.Data.Reader getDataField() {
                return _getPointerField(org.capnproto.Data.factory, 1, null, 0, 0);
            }

            public boolean hasStructField() {
                return !_pointerFieldIsNull(2);
            }
            public Test.TestAllTypes.Reader getStructField() {
                return _getPointerField(Test.TestAllTypes.factory,2,null, 0);
            }

            public final Test.TestEnum getEnumField() {
                switch(_getShortField(18)) {
                    case 0 : return Test.TestEnum.FOO;
                    case 1 : return Test.TestEnum.BAR;
                    case 2 : return Test.TestEnum.BAZ;
                    case 3 : return Test.TestEnum.QUX;
                    case 4 : return Test.TestEnum.QUUX;
                    case 5 : return Test.TestEnum.CORGE;
                    case 6 : return Test.TestEnum.GRAULT;
                    case 7 : return Test.TestEnum.GARPLY;
                    default: return Test.TestEnum._NOT_IN_SCHEMA;
                }
            }

            public final org.capnproto.Void getInterfaceField() {
                return org.capnproto.Void.VOID;
            }

            public final boolean hasVoidList() {
                return !_pointerFieldIsNull(3);
            }
            public final org.capnproto.PrimitiveList.Void.Reader getVoidList() {
                return _getPointerField(org.capnproto.PrimitiveList.Void.factory, 3, null, 0);
            }

            public final boolean hasBoolList() {
                return !_pointerFieldIsNull(4);
            }
            public final org.capnproto.PrimitiveList.Boolean.Reader getBoolList() {
                return _getPointerField(org.capnproto.PrimitiveList.Boolean.factory, 4, null, 0);
            }

            public final boolean hasInt8List() {
                return !_pointerFieldIsNull(5);
            }
            public final org.capnproto.PrimitiveList.Byte.Reader getInt8List() {
                return _getPointerField(org.capnproto.PrimitiveList.Byte.factory, 5, null, 0);
            }

            public final boolean hasInt16List() {
                return !_pointerFieldIsNull(6);
            }
            public final org.capnproto.PrimitiveList.Short.Reader getInt16List() {
                return _getPointerField(org.capnproto.PrimitiveList.Short.factory, 6, null, 0);
            }

            public final boolean hasInt32List() {
                return !_pointerFieldIsNull(7);
            }
            public final org.capnproto.PrimitiveList.Int.Reader getInt32List() {
                return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 7, null, 0);
            }

            public final boolean hasInt64List() {
                return !_pointerFieldIsNull(8);
            }
            public final org.capnproto.PrimitiveList.Long.Reader getInt64List() {
                return _getPointerField(org.capnproto.PrimitiveList.Long.factory, 8, null, 0);
            }

            public final boolean hasUInt8List() {
                return !_pointerFieldIsNull(9);
            }
            public final org.capnproto.PrimitiveList.Byte.Reader getUInt8List() {
                return _getPointerField(org.capnproto.PrimitiveList.Byte.factory, 9, null, 0);
            }

            public final boolean hasUInt16List() {
                return !_pointerFieldIsNull(10);
            }
            public final org.capnproto.PrimitiveList.Short.Reader getUInt16List() {
                return _getPointerField(org.capnproto.PrimitiveList.Short.factory, 10, null, 0);
            }

            public final boolean hasUInt32List() {
                return !_pointerFieldIsNull(11);
            }
            public final org.capnproto.PrimitiveList.Int.Reader getUInt32List() {
                return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 11, null, 0);
            }

            public final boolean hasUInt64List() {
                return !_pointerFieldIsNull(12);
            }
            public final org.capnproto.PrimitiveList.Long.Reader getUInt64List() {
                return _getPointerField(org.capnproto.PrimitiveList.Long.factory, 12, null, 0);
            }

            public final boolean hasFloat32List() {
                return !_pointerFieldIsNull(13);
            }
            public final org.capnproto.PrimitiveList.Float.Reader getFloat32List() {
                return _getPointerField(org.capnproto.PrimitiveList.Float.factory, 13, null, 0);
            }

            public final boolean hasFloat64List() {
                return !_pointerFieldIsNull(14);
            }
            public final org.capnproto.PrimitiveList.Double.Reader getFloat64List() {
                return _getPointerField(org.capnproto.PrimitiveList.Double.factory, 14, null, 0);
            }

            public final boolean hasTextList() {
                return !_pointerFieldIsNull(15);
            }
            public final org.capnproto.TextList.Reader getTextList() {
                return _getPointerField(org.capnproto.TextList.factory, 15, null, 0);
            }

            public final boolean hasDataList() {
                return !_pointerFieldIsNull(16);
            }
            public final org.capnproto.DataList.Reader getDataList() {
                return _getPointerField(org.capnproto.DataList.factory, 16, null, 0);
            }

            public final boolean hasStructList() {
                return !_pointerFieldIsNull(17);
            }
            public final org.capnproto.StructList.Reader<Test.TestAllTypes.Reader> getStructList() {
                return _getPointerField(Test.TestAllTypes.listFactory, 17, null, 0);
            }

            public final boolean hasEnumList() {
                return !_pointerFieldIsNull(18);
            }
            public final org.capnproto.EnumList.Reader<Test.TestEnum> getEnumList() {
                return _getPointerField(new org.capnproto.EnumList.Factory<Test.TestEnum>(Test.TestEnum.values()), 18, null, 0);
            }

        }

    }


    public static class TestDefaults {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)6,(short)20);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }
            public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
                return TestDefaults.STRUCT_SIZE;
            }
            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                super(segment, data, pointers, dataSize, pointerCount);
            }
            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
            public final org.capnproto.Void getVoidField() {
                return org.capnproto.Void.VOID;
            }
            public final void setVoidField(org.capnproto.Void value) {
            }

            public final boolean getBoolField() {
                return _getBooleanField(0, (boolean)true);
            }
            public final void setBoolField(boolean value) {
                _setBooleanField(0, value, (boolean)true);
            }

            public final byte getInt8Field() {
                return _getByteField(1, (byte)-123);
            }
            public final void setInt8Field(byte value) {
                _setByteField(1, value, (byte)-123);
            }

            public final short getInt16Field() {
                return _getShortField(1, (short)-12345);
            }
            public final void setInt16Field(short value) {
                _setShortField(1, value, (short)-12345);
            }

            public final int getInt32Field() {
                return _getIntField(1, (int)-12345678);
            }
            public final void setInt32Field(int value) {
                _setIntField(1, value, (int)-12345678);
            }

            public final long getInt64Field() {
                return _getLongField(1, (long)-123456789012345L);
            }
            public final void setInt64Field(long value) {
                _setLongField(1, value, (long)-123456789012345L);
            }

            public final byte getUInt8Field() {
                return _getByteField(16, (byte)-22);
            }
            public final void setUInt8Field(byte value) {
                _setByteField(16, value, (byte)-22);
            }

            public final short getUInt16Field() {
                return _getShortField(9, (short)-19858);
            }
            public final void setUInt16Field(short value) {
                _setShortField(9, value, (short)-19858);
            }

            public final int getUInt32Field() {
                return _getIntField(5, (int)-838178284);
            }
            public final void setUInt32Field(int value) {
                _setIntField(5, value, (int)-838178284);
            }

            public final long getUInt64Field() {
                return _getLongField(3, (long)-6101065172474983726L);
            }
            public final void setUInt64Field(long value) {
                _setLongField(3, value, (long)-6101065172474983726L);
            }

            public final float getFloat32Field() {
                return _getFloatField(8, 1150963712);
            }
            public final void setFloat32Field(float value) {
                _setFloatField(8, value, 1150963712);
            }

            public final double getFloat64Field() {
                return _getDoubleField(5, -3912067307603444992L);
            }
            public final void setFloat64Field(double value) {
                _setDoubleField(5, value, -3912067307603444992L);
            }

            public final boolean hasTextField() {
                return !_pointerFieldIsNull(0);
            }
            public final org.capnproto.Text.Builder getTextField() {
                return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_e37a20a013e0cd99.buffer, 372, 3);
            }
            public final void setTextField(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 0, value);
            }
            public final void setTextField(String value) {
                _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
            }
            public final org.capnproto.Text.Builder initTextField(int size) {
                return _initPointerField(org.capnproto.Text.factory, 0, size);
            }
            public final boolean hasDataField() {
                return !_pointerFieldIsNull(1);
            }
            public final org.capnproto.Data.Builder getDataField() {
                return _getPointerField(org.capnproto.Data.factory, 1, Schemas.b_e37a20a013e0cd99.buffer, 382, 3);
            }
            public final void setDataField(org.capnproto.Data.Reader value) {
                _setPointerField(org.capnproto.Data.factory, 1, value);
            }
            public final void setDataField(byte [] value) {
                _setPointerField(org.capnproto.Data.factory, 1, new org.capnproto.Data.Reader(value));
            }
            public final org.capnproto.Data.Builder initDataField(int size) {
                return _initPointerField(org.capnproto.Data.factory, 1, size);
            }
            public final Test.TestAllTypes.Builder getStructField() {
                return _getPointerField(Test.TestAllTypes.factory, 2, Schemas.b_e37a20a013e0cd99, 391);
            }
            public final void setStructField(Test.TestAllTypes.Reader value) {
                _setPointerField(Test.TestAllTypes.factory,2, value);
            }
            public final Test.TestAllTypes.Builder initStructField() {
                return _initPointerField(Test.TestAllTypes.factory,2, 0);
            }
            public final Test.TestEnum getEnumField() {
                switch(_getShortField(18, (short)5)) {
                    case 0 : return Test.TestEnum.FOO;
                    case 1 : return Test.TestEnum.BAR;
                    case 2 : return Test.TestEnum.BAZ;
                    case 3 : return Test.TestEnum.QUX;
                    case 4 : return Test.TestEnum.QUUX;
                    case 5 : return Test.TestEnum.CORGE;
                    case 6 : return Test.TestEnum.GRAULT;
                    case 7 : return Test.TestEnum.GARPLY;
                    default: return Test.TestEnum._NOT_IN_SCHEMA;
                }
            }
            public final void setEnumField(Test.TestEnum value) {
                _setShortField(18, (short)value.ordinal(), (short)5);
            }

            public final org.capnproto.Void getInterfaceField() {
                return org.capnproto.Void.VOID;
            }
            public final void setInterfaceField(org.capnproto.Void value) {
            }

            public final boolean hasVoidList() {
                return !_pointerFieldIsNull(3);
            }
            public final org.capnproto.PrimitiveList.Void.Builder getVoidList() {
                return _getPointerField(org.capnproto.PrimitiveList.Void.factory, 3, Schemas.b_e37a20a013e0cd99, 623);
            }
            public final void setVoidList(org.capnproto.PrimitiveList.Void.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Void.factory, 3, value);
            }
            public final org.capnproto.PrimitiveList.Void.Builder initVoidList(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Void.factory, 3, size);
            }
            public final boolean hasBoolList() {
                return !_pointerFieldIsNull(4);
            }
            public final org.capnproto.PrimitiveList.Boolean.Builder getBoolList() {
                return _getPointerField(org.capnproto.PrimitiveList.Boolean.factory, 4, Schemas.b_e37a20a013e0cd99, 636);
            }
            public final void setBoolList(org.capnproto.PrimitiveList.Boolean.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Boolean.factory, 4, value);
            }
            public final org.capnproto.PrimitiveList.Boolean.Builder initBoolList(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Boolean.factory, 4, size);
            }
            public final boolean hasInt8List() {
                return !_pointerFieldIsNull(5);
            }
            public final org.capnproto.PrimitiveList.Byte.Builder getInt8List() {
                return _getPointerField(org.capnproto.PrimitiveList.Byte.factory, 5, Schemas.b_e37a20a013e0cd99, 650);
            }
            public final void setInt8List(org.capnproto.PrimitiveList.Byte.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Byte.factory, 5, value);
            }
            public final org.capnproto.PrimitiveList.Byte.Builder initInt8List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Byte.factory, 5, size);
            }
            public final boolean hasInt16List() {
                return !_pointerFieldIsNull(6);
            }
            public final org.capnproto.PrimitiveList.Short.Builder getInt16List() {
                return _getPointerField(org.capnproto.PrimitiveList.Short.factory, 6, Schemas.b_e37a20a013e0cd99, 664);
            }
            public final void setInt16List(org.capnproto.PrimitiveList.Short.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Short.factory, 6, value);
            }
            public final org.capnproto.PrimitiveList.Short.Builder initInt16List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Short.factory, 6, size);
            }
            public final boolean hasInt32List() {
                return !_pointerFieldIsNull(7);
            }
            public final org.capnproto.PrimitiveList.Int.Builder getInt32List() {
                return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 7, Schemas.b_e37a20a013e0cd99, 678);
            }
            public final void setInt32List(org.capnproto.PrimitiveList.Int.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Int.factory, 7, value);
            }
            public final org.capnproto.PrimitiveList.Int.Builder initInt32List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 7, size);
            }
            public final boolean hasInt64List() {
                return !_pointerFieldIsNull(8);
            }
            public final org.capnproto.PrimitiveList.Long.Builder getInt64List() {
                return _getPointerField(org.capnproto.PrimitiveList.Long.factory, 8, Schemas.b_e37a20a013e0cd99, 692);
            }
            public final void setInt64List(org.capnproto.PrimitiveList.Long.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Long.factory, 8, value);
            }
            public final org.capnproto.PrimitiveList.Long.Builder initInt64List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Long.factory, 8, size);
            }
            public final boolean hasUInt8List() {
                return !_pointerFieldIsNull(9);
            }
            public final org.capnproto.PrimitiveList.Byte.Builder getUInt8List() {
                return _getPointerField(org.capnproto.PrimitiveList.Byte.factory, 9, Schemas.b_e37a20a013e0cd99, 707);
            }
            public final void setUInt8List(org.capnproto.PrimitiveList.Byte.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Byte.factory, 9, value);
            }
            public final org.capnproto.PrimitiveList.Byte.Builder initUInt8List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Byte.factory, 9, size);
            }
            public final boolean hasUInt16List() {
                return !_pointerFieldIsNull(10);
            }
            public final org.capnproto.PrimitiveList.Short.Builder getUInt16List() {
                return _getPointerField(org.capnproto.PrimitiveList.Short.factory, 10, Schemas.b_e37a20a013e0cd99, 721);
            }
            public final void setUInt16List(org.capnproto.PrimitiveList.Short.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Short.factory, 10, value);
            }
            public final org.capnproto.PrimitiveList.Short.Builder initUInt16List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Short.factory, 10, size);
            }
            public final boolean hasUInt32List() {
                return !_pointerFieldIsNull(11);
            }
            public final org.capnproto.PrimitiveList.Int.Builder getUInt32List() {
                return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 11, Schemas.b_e37a20a013e0cd99, 735);
            }
            public final void setUInt32List(org.capnproto.PrimitiveList.Int.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Int.factory, 11, value);
            }
            public final org.capnproto.PrimitiveList.Int.Builder initUInt32List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 11, size);
            }
            public final boolean hasUInt64List() {
                return !_pointerFieldIsNull(12);
            }
            public final org.capnproto.PrimitiveList.Long.Builder getUInt64List() {
                return _getPointerField(org.capnproto.PrimitiveList.Long.factory, 12, Schemas.b_e37a20a013e0cd99, 749);
            }
            public final void setUInt64List(org.capnproto.PrimitiveList.Long.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Long.factory, 12, value);
            }
            public final org.capnproto.PrimitiveList.Long.Builder initUInt64List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Long.factory, 12, size);
            }
            public final boolean hasFloat32List() {
                return !_pointerFieldIsNull(13);
            }
            public final org.capnproto.PrimitiveList.Float.Builder getFloat32List() {
                return _getPointerField(org.capnproto.PrimitiveList.Float.factory, 13, Schemas.b_e37a20a013e0cd99, 763);
            }
            public final void setFloat32List(org.capnproto.PrimitiveList.Float.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Float.factory, 13, value);
            }
            public final org.capnproto.PrimitiveList.Float.Builder initFloat32List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Float.factory, 13, size);
            }
            public final boolean hasFloat64List() {
                return !_pointerFieldIsNull(14);
            }
            public final org.capnproto.PrimitiveList.Double.Builder getFloat64List() {
                return _getPointerField(org.capnproto.PrimitiveList.Double.factory, 14, Schemas.b_e37a20a013e0cd99, 778);
            }
            public final void setFloat64List(org.capnproto.PrimitiveList.Double.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Double.factory, 14, value);
            }
            public final org.capnproto.PrimitiveList.Double.Builder initFloat64List(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Double.factory, 14, size);
            }
            public final boolean hasTextList() {
                return !_pointerFieldIsNull(15);
            }
            public final org.capnproto.TextList.Builder getTextList() {
                return _getPointerField(org.capnproto.TextList.factory, 15, Schemas.b_e37a20a013e0cd99, 795);
            }
            public final void setTextList(org.capnproto.TextList.Reader value) {
                _setPointerField(org.capnproto.TextList.factory, 15, value);
            }
            public final org.capnproto.TextList.Builder initTextList(int size) {
                return _initPointerField(org.capnproto.TextList.factory, 15, size);
            }
            public final boolean hasDataList() {
                return !_pointerFieldIsNull(16);
            }
            public final org.capnproto.DataList.Builder getDataList() {
                return _getPointerField(org.capnproto.DataList.factory, 16, Schemas.b_e37a20a013e0cd99, 814);
            }
            public final void setDataList(org.capnproto.DataList.Reader value) {
                _setPointerField(org.capnproto.DataList.factory, 16, value);
            }
            public final org.capnproto.DataList.Builder initDataList(int size) {
                return _initPointerField(org.capnproto.DataList.factory, 16, size);
            }
            public final boolean hasStructList() {
                return !_pointerFieldIsNull(17);
            }
            public final org.capnproto.StructList.Builder<Test.TestAllTypes.Builder> getStructList() {
                return _getPointerField(Test.TestAllTypes.listFactory, 17, Schemas.b_e37a20a013e0cd99, 834);
            }
            public final void setStructList(org.capnproto.StructList.Reader<Test.TestAllTypes.Reader> value) {
                _setPointerField(Test.TestAllTypes.listFactory, 17, value);
            }
            public final org.capnproto.StructList.Builder<Test.TestAllTypes.Builder> initStructList(int size) {
                return _initPointerField(Test.TestAllTypes.listFactory, 17, size);
            }
            public final boolean hasEnumList() {
                return !_pointerFieldIsNull(18);
            }
            public final org.capnproto.EnumList.Builder<Test.TestEnum> getEnumList() {
                return _getPointerField(new org.capnproto.EnumList.Factory<Test.TestEnum>(Test.TestEnum.values()), 18, Schemas.b_e37a20a013e0cd99, 929);
            }
            public final void setEnumList(org.capnproto.EnumList.Reader<Test.TestEnum> value) {
                _setPointerField(new org.capnproto.EnumList.Factory<Test.TestEnum>(Test.TestEnum.values()), 18, value);
            }
            public final org.capnproto.EnumList.Builder<Test.TestEnum> initEnumList(int size) {
                return _initPointerField(new org.capnproto.EnumList.Factory<Test.TestEnum>(Test.TestEnum.values()), 18, size);
            }
            public final boolean hasInterfaceList() {
                return !_pointerFieldIsNull(19);
            }
            public final org.capnproto.PrimitiveList.Void.Builder getInterfaceList() {
                return _getPointerField(org.capnproto.PrimitiveList.Void.factory, 19, null, 0);
            }
            public final void setInterfaceList(org.capnproto.PrimitiveList.Void.Reader value) {
                _setPointerField(org.capnproto.PrimitiveList.Void.factory, 19, value);
            }
            public final org.capnproto.PrimitiveList.Void.Builder initInterfaceList(int size) {
                return _initPointerField(org.capnproto.PrimitiveList.Void.factory, 19, size);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final org.capnproto.Void getVoidField() {
                return org.capnproto.Void.VOID;
            }

            public final boolean getBoolField() {
                return _getBooleanField(0, (boolean)true);
            }

            public final byte getInt8Field() {
                return _getByteField(1, (byte)-123);
            }

            public final short getInt16Field() {
                return _getShortField(1, (short)-12345);
            }

            public final int getInt32Field() {
                return _getIntField(1, (int)-12345678);
            }

            public final long getInt64Field() {
                return _getLongField(1, (long)-123456789012345L);
            }

            public final byte getUInt8Field() {
                return _getByteField(16, (byte)-22);
            }

            public final short getUInt16Field() {
                return _getShortField(9, (short)-19858);
            }

            public final int getUInt32Field() {
                return _getIntField(5, (int)-838178284);
            }

            public final long getUInt64Field() {
                return _getLongField(3, (long)-6101065172474983726L);
            }

            public final float getFloat32Field() {
                return _getFloatField(8, 1150963712);
            }

            public final double getFloat64Field() {
                return _getDoubleField(5, -3912067307603444992L);
            }

            public boolean hasTextField() {
                return !_pointerFieldIsNull(0);
            }
            public org.capnproto.Text.Reader getTextField() {
                return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_e37a20a013e0cd99.buffer, 372, 3);
            }

            public boolean hasDataField() {
                return !_pointerFieldIsNull(1);
            }
            public org.capnproto.Data.Reader getDataField() {
                return _getPointerField(org.capnproto.Data.factory, 1, Schemas.b_e37a20a013e0cd99.buffer, 382, 3);
            }

            public boolean hasStructField() {
                return !_pointerFieldIsNull(2);
            }
            public Test.TestAllTypes.Reader getStructField() {
                return _getPointerField(Test.TestAllTypes.factory,2,Schemas.b_e37a20a013e0cd99, 391);
            }

            public final Test.TestEnum getEnumField() {
                switch(_getShortField(18, (short)5)) {
                    case 0 : return Test.TestEnum.FOO;
                    case 1 : return Test.TestEnum.BAR;
                    case 2 : return Test.TestEnum.BAZ;
                    case 3 : return Test.TestEnum.QUX;
                    case 4 : return Test.TestEnum.QUUX;
                    case 5 : return Test.TestEnum.CORGE;
                    case 6 : return Test.TestEnum.GRAULT;
                    case 7 : return Test.TestEnum.GARPLY;
                    default: return Test.TestEnum._NOT_IN_SCHEMA;
                }
            }

            public final org.capnproto.Void getInterfaceField() {
                return org.capnproto.Void.VOID;
            }

            public final boolean hasVoidList() {
                return !_pointerFieldIsNull(3);
            }
            public final org.capnproto.PrimitiveList.Void.Reader getVoidList() {
                return _getPointerField(org.capnproto.PrimitiveList.Void.factory, 3, Schemas.b_e37a20a013e0cd99, 623);
            }

            public final boolean hasBoolList() {
                return !_pointerFieldIsNull(4);
            }
            public final org.capnproto.PrimitiveList.Boolean.Reader getBoolList() {
                return _getPointerField(org.capnproto.PrimitiveList.Boolean.factory, 4, Schemas.b_e37a20a013e0cd99, 636);
            }

            public final boolean hasInt8List() {
                return !_pointerFieldIsNull(5);
            }
            public final org.capnproto.PrimitiveList.Byte.Reader getInt8List() {
                return _getPointerField(org.capnproto.PrimitiveList.Byte.factory, 5, Schemas.b_e37a20a013e0cd99, 650);
            }

            public final boolean hasInt16List() {
                return !_pointerFieldIsNull(6);
            }
            public final org.capnproto.PrimitiveList.Short.Reader getInt16List() {
                return _getPointerField(org.capnproto.PrimitiveList.Short.factory, 6, Schemas.b_e37a20a013e0cd99, 664);
            }

            public final boolean hasInt32List() {
                return !_pointerFieldIsNull(7);
            }
            public final org.capnproto.PrimitiveList.Int.Reader getInt32List() {
                return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 7, Schemas.b_e37a20a013e0cd99, 678);
            }

            public final boolean hasInt64List() {
                return !_pointerFieldIsNull(8);
            }
            public final org.capnproto.PrimitiveList.Long.Reader getInt64List() {
                return _getPointerField(org.capnproto.PrimitiveList.Long.factory, 8, Schemas.b_e37a20a013e0cd99, 692);
            }

            public final boolean hasUInt8List() {
                return !_pointerFieldIsNull(9);
            }
            public final org.capnproto.PrimitiveList.Byte.Reader getUInt8List() {
                return _getPointerField(org.capnproto.PrimitiveList.Byte.factory, 9, Schemas.b_e37a20a013e0cd99, 707);
            }

            public final boolean hasUInt16List() {
                return !_pointerFieldIsNull(10);
            }
            public final org.capnproto.PrimitiveList.Short.Reader getUInt16List() {
                return _getPointerField(org.capnproto.PrimitiveList.Short.factory, 10, Schemas.b_e37a20a013e0cd99, 721);
            }

            public final boolean hasUInt32List() {
                return !_pointerFieldIsNull(11);
            }
            public final org.capnproto.PrimitiveList.Int.Reader getUInt32List() {
                return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 11, Schemas.b_e37a20a013e0cd99, 735);
            }

            public final boolean hasUInt64List() {
                return !_pointerFieldIsNull(12);
            }
            public final org.capnproto.PrimitiveList.Long.Reader getUInt64List() {
                return _getPointerField(org.capnproto.PrimitiveList.Long.factory, 12, Schemas.b_e37a20a013e0cd99, 749);
            }

            public final boolean hasFloat32List() {
                return !_pointerFieldIsNull(13);
            }
            public final org.capnproto.PrimitiveList.Float.Reader getFloat32List() {
                return _getPointerField(org.capnproto.PrimitiveList.Float.factory, 13, Schemas.b_e37a20a013e0cd99, 763);
            }

            public final boolean hasFloat64List() {
                return !_pointerFieldIsNull(14);
            }
            public final org.capnproto.PrimitiveList.Double.Reader getFloat64List() {
                return _getPointerField(org.capnproto.PrimitiveList.Double.factory, 14, Schemas.b_e37a20a013e0cd99, 778);
            }

            public final boolean hasTextList() {
                return !_pointerFieldIsNull(15);
            }
            public final org.capnproto.TextList.Reader getTextList() {
                return _getPointerField(org.capnproto.TextList.factory, 15, Schemas.b_e37a20a013e0cd99, 795);
            }

            public final boolean hasDataList() {
                return !_pointerFieldIsNull(16);
            }
            public final org.capnproto.DataList.Reader getDataList() {
                return _getPointerField(org.capnproto.DataList.factory, 16, Schemas.b_e37a20a013e0cd99, 814);
            }

            public final boolean hasStructList() {
                return !_pointerFieldIsNull(17);
            }
            public final org.capnproto.StructList.Reader<Test.TestAllTypes.Reader> getStructList() {
                return _getPointerField(Test.TestAllTypes.listFactory, 17, Schemas.b_e37a20a013e0cd99, 834);
            }

            public final boolean hasEnumList() {
                return !_pointerFieldIsNull(18);
            }
            public final org.capnproto.EnumList.Reader<Test.TestEnum> getEnumList() {
                return _getPointerField(new org.capnproto.EnumList.Factory<Test.TestEnum>(Test.TestEnum.values()), 18, Schemas.b_e37a20a013e0cd99, 929);
            }

            public final boolean hasInterfaceList() {
                return !_pointerFieldIsNull(19);
            }
            public final org.capnproto.PrimitiveList.Void.Reader getInterfaceList() {
                return _getPointerField(org.capnproto.PrimitiveList.Void.factory, 19, null, 0);
            }

        }

    }


    public static class TestAnyPointer {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }
            public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
                return TestAnyPointer.STRUCT_SIZE;
            }
            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                super(segment, data, pointers, dataSize, pointerCount);
            }
            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
            public final boolean hasAnyPointerField() {
                return !_pointerFieldIsNull(0);
            }
            public org.capnproto.AnyPointer.Builder getAnyPointerField() {
                return _getPointerField(org.capnproto.AnyPointer.factory, 0);
            }
            public org.capnproto.AnyPointer.Builder initAnyPointerField() {
                return _initPointerField(org.capnproto.AnyPointer.factory, 0, 0);
            }
            public org.capnproto.AnyPointer.Builder initAnyPointerField(int size) {
                return _initPointerField(org.capnproto.AnyPointer.factory, 0, size);
            }

        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public boolean hasAnyPointerField() {
                return !_pointerFieldIsNull(0);
            }
            public org.capnproto.AnyPointer.Reader getAnyPointerField() {
                return _getPointerField(org.capnproto.AnyPointer.factory, 0);
            }
        }

    }


    public static class TestOutOfOrder {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)9);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }
            public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
                return TestOutOfOrder.STRUCT_SIZE;
            }
            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                super(segment, data, pointers, dataSize, pointerCount);
            }
            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
            public final boolean hasQux() {
                return !_pointerFieldIsNull(0);
            }
            public final org.capnproto.Text.Builder getQux() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }
            public final void setQux(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 0, value);
            }
            public final void setQux(String value) {
                _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
            }
            public final org.capnproto.Text.Builder initQux(int size) {
                return _initPointerField(org.capnproto.Text.factory, 0, size);
            }
            public final boolean hasGrault() {
                return !_pointerFieldIsNull(1);
            }
            public final org.capnproto.Text.Builder getGrault() {
                return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
            }
            public final void setGrault(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 1, value);
            }
            public final void setGrault(String value) {
                _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
            }
            public final org.capnproto.Text.Builder initGrault(int size) {
                return _initPointerField(org.capnproto.Text.factory, 1, size);
            }
            public final boolean hasBar() {
                return !_pointerFieldIsNull(2);
            }
            public final org.capnproto.Text.Builder getBar() {
                return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
            }
            public final void setBar(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 2, value);
            }
            public final void setBar(String value) {
                _setPointerField(org.capnproto.Text.factory, 2, new org.capnproto.Text.Reader(value));
            }
            public final org.capnproto.Text.Builder initBar(int size) {
                return _initPointerField(org.capnproto.Text.factory, 2, size);
            }
            public final boolean hasFoo() {
                return !_pointerFieldIsNull(3);
            }
            public final org.capnproto.Text.Builder getFoo() {
                return _getPointerField(org.capnproto.Text.factory, 3, null, 0, 0);
            }
            public final void setFoo(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 3, value);
            }
            public final void setFoo(String value) {
                _setPointerField(org.capnproto.Text.factory, 3, new org.capnproto.Text.Reader(value));
            }
            public final org.capnproto.Text.Builder initFoo(int size) {
                return _initPointerField(org.capnproto.Text.factory, 3, size);
            }
            public final boolean hasCorge() {
                return !_pointerFieldIsNull(4);
            }
            public final org.capnproto.Text.Builder getCorge() {
                return _getPointerField(org.capnproto.Text.factory, 4, null, 0, 0);
            }
            public final void setCorge(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 4, value);
            }
            public final void setCorge(String value) {
                _setPointerField(org.capnproto.Text.factory, 4, new org.capnproto.Text.Reader(value));
            }
            public final org.capnproto.Text.Builder initCorge(int size) {
                return _initPointerField(org.capnproto.Text.factory, 4, size);
            }
            public final boolean hasWaldo() {
                return !_pointerFieldIsNull(5);
            }
            public final org.capnproto.Text.Builder getWaldo() {
                return _getPointerField(org.capnproto.Text.factory, 5, null, 0, 0);
            }
            public final void setWaldo(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 5, value);
            }
            public final void setWaldo(String value) {
                _setPointerField(org.capnproto.Text.factory, 5, new org.capnproto.Text.Reader(value));
            }
            public final org.capnproto.Text.Builder initWaldo(int size) {
                return _initPointerField(org.capnproto.Text.factory, 5, size);
            }
            public final boolean hasQuux() {
                return !_pointerFieldIsNull(6);
            }
            public final org.capnproto.Text.Builder getQuux() {
                return _getPointerField(org.capnproto.Text.factory, 6, null, 0, 0);
            }
            public final void setQuux(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 6, value);
            }
            public final void setQuux(String value) {
                _setPointerField(org.capnproto.Text.factory, 6, new org.capnproto.Text.Reader(value));
            }
            public final org.capnproto.Text.Builder initQuux(int size) {
                return _initPointerField(org.capnproto.Text.factory, 6, size);
            }
            public final boolean hasGarply() {
                return !_pointerFieldIsNull(7);
            }
            public final org.capnproto.Text.Builder getGarply() {
                return _getPointerField(org.capnproto.Text.factory, 7, null, 0, 0);
            }
            public final void setGarply(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 7, value);
            }
            public final void setGarply(String value) {
                _setPointerField(org.capnproto.Text.factory, 7, new org.capnproto.Text.Reader(value));
            }
            public final org.capnproto.Text.Builder initGarply(int size) {
                return _initPointerField(org.capnproto.Text.factory, 7, size);
            }
            public final boolean hasBaz() {
                return !_pointerFieldIsNull(8);
            }
            public final org.capnproto.Text.Builder getBaz() {
                return _getPointerField(org.capnproto.Text.factory, 8, null, 0, 0);
            }
            public final void setBaz(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 8, value);
            }
            public final void setBaz(String value) {
                _setPointerField(org.capnproto.Text.factory, 8, new org.capnproto.Text.Reader(value));
            }
            public final org.capnproto.Text.Builder initBaz(int size) {
                return _initPointerField(org.capnproto.Text.factory, 8, size);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public boolean hasQux() {
                return !_pointerFieldIsNull(0);
            }
            public org.capnproto.Text.Reader getQux() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public boolean hasGrault() {
                return !_pointerFieldIsNull(1);
            }
            public org.capnproto.Text.Reader getGrault() {
                return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
            }

            public boolean hasBar() {
                return !_pointerFieldIsNull(2);
            }
            public org.capnproto.Text.Reader getBar() {
                return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
            }

            public boolean hasFoo() {
                return !_pointerFieldIsNull(3);
            }
            public org.capnproto.Text.Reader getFoo() {
                return _getPointerField(org.capnproto.Text.factory, 3, null, 0, 0);
            }

            public boolean hasCorge() {
                return !_pointerFieldIsNull(4);
            }
            public org.capnproto.Text.Reader getCorge() {
                return _getPointerField(org.capnproto.Text.factory, 4, null, 0, 0);
            }

            public boolean hasWaldo() {
                return !_pointerFieldIsNull(5);
            }
            public org.capnproto.Text.Reader getWaldo() {
                return _getPointerField(org.capnproto.Text.factory, 5, null, 0, 0);
            }

            public boolean hasQuux() {
                return !_pointerFieldIsNull(6);
            }
            public org.capnproto.Text.Reader getQuux() {
                return _getPointerField(org.capnproto.Text.factory, 6, null, 0, 0);
            }

            public boolean hasGarply() {
                return !_pointerFieldIsNull(7);
            }
            public org.capnproto.Text.Reader getGarply() {
                return _getPointerField(org.capnproto.Text.factory, 7, null, 0, 0);
            }

            public boolean hasBaz() {
                return !_pointerFieldIsNull(8);
            }
            public org.capnproto.Text.Reader getBaz() {
                return _getPointerField(org.capnproto.Text.factory, 8, null, 0, 0);
            }

        }

    }


    public static class TestUnion {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)8,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }
            public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
                return TestUnion.STRUCT_SIZE;
            }
            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                super(segment, data, pointers, dataSize, pointerCount);
            }
            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
            public final Union0.Builder getUnion0() {
                return new TestUnion.Union0.Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final Union0.Builder initUnion0() {
                _setShortField(0,(short)0);
                _setLongField(1,0L);
                _clearPointerField(0);
                return new TestUnion.Union0.Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final Union1.Builder getUnion1() {
                return new TestUnion.Union1.Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final Union1.Builder initUnion1() {
                _setShortField(1,(short)0);
                _setBooleanField(129,false);
                _setByteField(17,(byte)0);
                _setShortField(9,(short)0);
                _setIntField(5,0);
                _setLongField(3,0L);
                _clearPointerField(1);
                return new TestUnion.Union1.Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final Union2.Builder getUnion2() {
                return new TestUnion.Union2.Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final Union2.Builder initUnion2() {
                _setShortField(2,(short)0);
                _setBooleanField(256,false);
                _setByteField(33,(byte)0);
                _setShortField(18,(short)0);
                _setIntField(10,0);
                _setLongField(6,0L);
                return new TestUnion.Union2.Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final Union3.Builder getUnion3() {
                return new TestUnion.Union3.Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final Union3.Builder initUnion3() {
                _setShortField(3,(short)0);
                _setBooleanField(257,false);
                _setByteField(34,(byte)0);
                _setShortField(19,(short)0);
                _setIntField(11,0);
                _setLongField(7,0L);
                return new TestUnion.Union3.Builder(segment, data, pointers, dataSize, pointerCount);
            }

            public final boolean getBit0() {
                return _getBooleanField(128);
            }
            public final void setBit0(boolean value) {
                _setBooleanField(128, value);
            }

            public final boolean getBit2() {
                return _getBooleanField(130);
            }
            public final void setBit2(boolean value) {
                _setBooleanField(130, value);
            }

            public final boolean getBit3() {
                return _getBooleanField(131);
            }
            public final void setBit3(boolean value) {
                _setBooleanField(131, value);
            }

            public final boolean getBit4() {
                return _getBooleanField(132);
            }
            public final void setBit4(boolean value) {
                _setBooleanField(132, value);
            }

            public final boolean getBit5() {
                return _getBooleanField(133);
            }
            public final void setBit5(boolean value) {
                _setBooleanField(133, value);
            }

            public final boolean getBit6() {
                return _getBooleanField(134);
            }
            public final void setBit6(boolean value) {
                _setBooleanField(134, value);
            }

            public final boolean getBit7() {
                return _getBooleanField(135);
            }
            public final void setBit7(boolean value) {
                _setBooleanField(135, value);
            }

            public final byte getByte0() {
                return _getByteField(35);
            }
            public final void setByte0(byte value) {
                _setByteField(35, value);
            }

        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public Union0.Reader getUnion0() {
                return new TestUnion.Union0.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public Union1.Reader getUnion1() {
                return new TestUnion.Union1.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public Union2.Reader getUnion2() {
                return new TestUnion.Union2.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public Union3.Reader getUnion3() {
                return new TestUnion.Union3.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final boolean getBit0() {
                return _getBooleanField(128);
            }

            public final boolean getBit2() {
                return _getBooleanField(130);
            }

            public final boolean getBit3() {
                return _getBooleanField(131);
            }

            public final boolean getBit4() {
                return _getBooleanField(132);
            }

            public final boolean getBit5() {
                return _getBooleanField(133);
            }

            public final boolean getBit6() {
                return _getBooleanField(134);
            }

            public final boolean getBit7() {
                return _getBooleanField(135);
            }

            public final byte getByte0() {
                return _getByteField(35);
            }

        }

        public static class Union0 {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)8,(short)2);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestUnion.Union0.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public Which which() {
                    switch(_getShortField(0)) {
                        case 0 : return Which.U0F0S0;
                        case 1 : return Which.U0F0S1;
                        case 2 : return Which.U0F0S8;
                        case 3 : return Which.U0F0S16;
                        case 4 : return Which.U0F0S32;
                        case 5 : return Which.U0F0S64;
                        case 6 : return Which.U0F0SP;
                        case 7 : return Which.U0F1S0;
                        case 8 : return Which.U0F1S1;
                        case 9 : return Which.U0F1S8;
                        case 10 : return Which.U0F1S16;
                        case 11 : return Which.U0F1S32;
                        case 12 : return Which.U0F1S64;
                        case 13 : return Which.U0F1SP;
                        default: return Which._NOT_IN_SCHEMA;
                    }
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final boolean isU0f0s0() {
                    return which() == TestUnion.Union0.Which.U0F0S0;
                }
                public final org.capnproto.Void getU0f0s0() {
                    assert which() == TestUnion.Union0.Which.U0F0S0:
                            "Must check which() before get()ing a union member.";
                    return org.capnproto.Void.VOID;
                }
                public final void setU0f0s0(org.capnproto.Void value) {
                    _setShortField(0, (short)TestUnion.Union0.Which.U0F0S0.ordinal());
                }

                public final boolean isU0f0s1() {
                    return which() == TestUnion.Union0.Which.U0F0S1;
                }
                public final boolean getU0f0s1() {
                    assert which() == TestUnion.Union0.Which.U0F0S1:
                            "Must check which() before get()ing a union member.";
                    return _getBooleanField(64);
                }
                public final void setU0f0s1(boolean value) {
                    _setShortField(0, (short)TestUnion.Union0.Which.U0F0S1.ordinal());
                    _setBooleanField(64, value);
                }

                public final boolean isU0f0s8() {
                    return which() == TestUnion.Union0.Which.U0F0S8;
                }
                public final byte getU0f0s8() {
                    assert which() == TestUnion.Union0.Which.U0F0S8:
                            "Must check which() before get()ing a union member.";
                    return _getByteField(8);
                }
                public final void setU0f0s8(byte value) {
                    _setShortField(0, (short)TestUnion.Union0.Which.U0F0S8.ordinal());
                    _setByteField(8, value);
                }

                public final boolean isU0f0s16() {
                    return which() == TestUnion.Union0.Which.U0F0S16;
                }
                public final short getU0f0s16() {
                    assert which() == TestUnion.Union0.Which.U0F0S16:
                            "Must check which() before get()ing a union member.";
                    return _getShortField(4);
                }
                public final void setU0f0s16(short value) {
                    _setShortField(0, (short)TestUnion.Union0.Which.U0F0S16.ordinal());
                    _setShortField(4, value);
                }

                public final boolean isU0f0s32() {
                    return which() == TestUnion.Union0.Which.U0F0S32;
                }
                public final int getU0f0s32() {
                    assert which() == TestUnion.Union0.Which.U0F0S32:
                            "Must check which() before get()ing a union member.";
                    return _getIntField(2);
                }
                public final void setU0f0s32(int value) {
                    _setShortField(0, (short)TestUnion.Union0.Which.U0F0S32.ordinal());
                    _setIntField(2, value);
                }

                public final boolean isU0f0s64() {
                    return which() == TestUnion.Union0.Which.U0F0S64;
                }
                public final long getU0f0s64() {
                    assert which() == TestUnion.Union0.Which.U0F0S64:
                            "Must check which() before get()ing a union member.";
                    return _getLongField(1);
                }
                public final void setU0f0s64(long value) {
                    _setShortField(0, (short)TestUnion.Union0.Which.U0F0S64.ordinal());
                    _setLongField(1, value);
                }

                public final boolean isU0f0sp() {
                    return which() == TestUnion.Union0.Which.U0F0SP;
                }
                public final boolean hasU0f0sp() {
                    if (which() != TestUnion.Union0.Which.U0F0SP) return false;
                    return !_pointerFieldIsNull(0);
                }
                public final org.capnproto.Text.Builder getU0f0sp() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }
                public final void setU0f0sp(org.capnproto.Text.Reader value) {
                    _setShortField(0, (short)TestUnion.Union0.Which.U0F0SP.ordinal());
                    _setPointerField(org.capnproto.Text.factory, 0, value);
                }
                public final void setU0f0sp(String value) {
                    _setShortField(0, (short)TestUnion.Union0.Which.U0F0SP.ordinal());
                    _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
                }
                public final org.capnproto.Text.Builder initU0f0sp(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 0, size);
                }
                public final boolean isU0f1s0() {
                    return which() == TestUnion.Union0.Which.U0F1S0;
                }
                public final org.capnproto.Void getU0f1s0() {
                    assert which() == TestUnion.Union0.Which.U0F1S0:
                            "Must check which() before get()ing a union member.";
                    return org.capnproto.Void.VOID;
                }
                public final void setU0f1s0(org.capnproto.Void value) {
                    _setShortField(0, (short)TestUnion.Union0.Which.U0F1S0.ordinal());
                }

                public final boolean isU0f1s1() {
                    return which() == TestUnion.Union0.Which.U0F1S1;
                }
                public final boolean getU0f1s1() {
                    assert which() == TestUnion.Union0.Which.U0F1S1:
                            "Must check which() before get()ing a union member.";
                    return _getBooleanField(64);
                }
                public final void setU0f1s1(boolean value) {
                    _setShortField(0, (short)TestUnion.Union0.Which.U0F1S1.ordinal());
                    _setBooleanField(64, value);
                }

                public final boolean isU0f1s8() {
                    return which() == TestUnion.Union0.Which.U0F1S8;
                }
                public final byte getU0f1s8() {
                    assert which() == TestUnion.Union0.Which.U0F1S8:
                            "Must check which() before get()ing a union member.";
                    return _getByteField(8);
                }
                public final void setU0f1s8(byte value) {
                    _setShortField(0, (short)TestUnion.Union0.Which.U0F1S8.ordinal());
                    _setByteField(8, value);
                }

                public final boolean isU0f1s16() {
                    return which() == TestUnion.Union0.Which.U0F1S16;
                }
                public final short getU0f1s16() {
                    assert which() == TestUnion.Union0.Which.U0F1S16:
                            "Must check which() before get()ing a union member.";
                    return _getShortField(4);
                }
                public final void setU0f1s16(short value) {
                    _setShortField(0, (short)TestUnion.Union0.Which.U0F1S16.ordinal());
                    _setShortField(4, value);
                }

                public final boolean isU0f1s32() {
                    return which() == TestUnion.Union0.Which.U0F1S32;
                }
                public final int getU0f1s32() {
                    assert which() == TestUnion.Union0.Which.U0F1S32:
                            "Must check which() before get()ing a union member.";
                    return _getIntField(2);
                }
                public final void setU0f1s32(int value) {
                    _setShortField(0, (short)TestUnion.Union0.Which.U0F1S32.ordinal());
                    _setIntField(2, value);
                }

                public final boolean isU0f1s64() {
                    return which() == TestUnion.Union0.Which.U0F1S64;
                }
                public final long getU0f1s64() {
                    assert which() == TestUnion.Union0.Which.U0F1S64:
                            "Must check which() before get()ing a union member.";
                    return _getLongField(1);
                }
                public final void setU0f1s64(long value) {
                    _setShortField(0, (short)TestUnion.Union0.Which.U0F1S64.ordinal());
                    _setLongField(1, value);
                }

                public final boolean isU0f1sp() {
                    return which() == TestUnion.Union0.Which.U0F1SP;
                }
                public final boolean hasU0f1sp() {
                    if (which() != TestUnion.Union0.Which.U0F1SP) return false;
                    return !_pointerFieldIsNull(0);
                }
                public final org.capnproto.Text.Builder getU0f1sp() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }
                public final void setU0f1sp(org.capnproto.Text.Reader value) {
                    _setShortField(0, (short)TestUnion.Union0.Which.U0F1SP.ordinal());
                    _setPointerField(org.capnproto.Text.factory, 0, value);
                }
                public final void setU0f1sp(String value) {
                    _setShortField(0, (short)TestUnion.Union0.Which.U0F1SP.ordinal());
                    _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
                }
                public final org.capnproto.Text.Builder initU0f1sp(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 0, size);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public Which which() {
                    switch(_getShortField(0)) {
                        case 0 : return Which.U0F0S0;
                        case 1 : return Which.U0F0S1;
                        case 2 : return Which.U0F0S8;
                        case 3 : return Which.U0F0S16;
                        case 4 : return Which.U0F0S32;
                        case 5 : return Which.U0F0S64;
                        case 6 : return Which.U0F0SP;
                        case 7 : return Which.U0F1S0;
                        case 8 : return Which.U0F1S1;
                        case 9 : return Which.U0F1S8;
                        case 10 : return Which.U0F1S16;
                        case 11 : return Which.U0F1S32;
                        case 12 : return Which.U0F1S64;
                        case 13 : return Which.U0F1SP;
                        default: return Which._NOT_IN_SCHEMA;
                    }
                }
                public final boolean isU0f0s0() {
                    return which() == TestUnion.Union0.Which.U0F0S0;
                }
                public final org.capnproto.Void getU0f0s0() {
                    assert which() == TestUnion.Union0.Which.U0F0S0:
                            "Must check which() before get()ing a union member.";
                    return org.capnproto.Void.VOID;
                }

                public final boolean isU0f0s1() {
                    return which() == TestUnion.Union0.Which.U0F0S1;
                }
                public final boolean getU0f0s1() {
                    assert which() == TestUnion.Union0.Which.U0F0S1:
                            "Must check which() before get()ing a union member.";
                    return _getBooleanField(64);
                }

                public final boolean isU0f0s8() {
                    return which() == TestUnion.Union0.Which.U0F0S8;
                }
                public final byte getU0f0s8() {
                    assert which() == TestUnion.Union0.Which.U0F0S8:
                            "Must check which() before get()ing a union member.";
                    return _getByteField(8);
                }

                public final boolean isU0f0s16() {
                    return which() == TestUnion.Union0.Which.U0F0S16;
                }
                public final short getU0f0s16() {
                    assert which() == TestUnion.Union0.Which.U0F0S16:
                            "Must check which() before get()ing a union member.";
                    return _getShortField(4);
                }

                public final boolean isU0f0s32() {
                    return which() == TestUnion.Union0.Which.U0F0S32;
                }
                public final int getU0f0s32() {
                    assert which() == TestUnion.Union0.Which.U0F0S32:
                            "Must check which() before get()ing a union member.";
                    return _getIntField(2);
                }

                public final boolean isU0f0s64() {
                    return which() == TestUnion.Union0.Which.U0F0S64;
                }
                public final long getU0f0s64() {
                    assert which() == TestUnion.Union0.Which.U0F0S64:
                            "Must check which() before get()ing a union member.";
                    return _getLongField(1);
                }

                public final boolean isU0f0sp() {
                    return which() == TestUnion.Union0.Which.U0F0SP;
                }
                public boolean hasU0f0sp() {
                    if (which() != TestUnion.Union0.Which.U0F0SP) return false;
                    return !_pointerFieldIsNull(0);
                }
                public org.capnproto.Text.Reader getU0f0sp() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }

                public final boolean isU0f1s0() {
                    return which() == TestUnion.Union0.Which.U0F1S0;
                }
                public final org.capnproto.Void getU0f1s0() {
                    assert which() == TestUnion.Union0.Which.U0F1S0:
                            "Must check which() before get()ing a union member.";
                    return org.capnproto.Void.VOID;
                }

                public final boolean isU0f1s1() {
                    return which() == TestUnion.Union0.Which.U0F1S1;
                }
                public final boolean getU0f1s1() {
                    assert which() == TestUnion.Union0.Which.U0F1S1:
                            "Must check which() before get()ing a union member.";
                    return _getBooleanField(64);
                }

                public final boolean isU0f1s8() {
                    return which() == TestUnion.Union0.Which.U0F1S8;
                }
                public final byte getU0f1s8() {
                    assert which() == TestUnion.Union0.Which.U0F1S8:
                            "Must check which() before get()ing a union member.";
                    return _getByteField(8);
                }

                public final boolean isU0f1s16() {
                    return which() == TestUnion.Union0.Which.U0F1S16;
                }
                public final short getU0f1s16() {
                    assert which() == TestUnion.Union0.Which.U0F1S16:
                            "Must check which() before get()ing a union member.";
                    return _getShortField(4);
                }

                public final boolean isU0f1s32() {
                    return which() == TestUnion.Union0.Which.U0F1S32;
                }
                public final int getU0f1s32() {
                    assert which() == TestUnion.Union0.Which.U0F1S32:
                            "Must check which() before get()ing a union member.";
                    return _getIntField(2);
                }

                public final boolean isU0f1s64() {
                    return which() == TestUnion.Union0.Which.U0F1S64;
                }
                public final long getU0f1s64() {
                    assert which() == TestUnion.Union0.Which.U0F1S64:
                            "Must check which() before get()ing a union member.";
                    return _getLongField(1);
                }

                public final boolean isU0f1sp() {
                    return which() == TestUnion.Union0.Which.U0F1SP;
                }
                public boolean hasU0f1sp() {
                    if (which() != TestUnion.Union0.Which.U0F1SP) return false;
                    return !_pointerFieldIsNull(0);
                }
                public org.capnproto.Text.Reader getU0f1sp() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }

            }

            public enum Which {
                U0F0S0,
                U0F0S1,
                U0F0S8,
                U0F0S16,
                U0F0S32,
                U0F0S64,
                U0F0SP,
                U0F1S0,
                U0F1S1,
                U0F1S8,
                U0F1S16,
                U0F1S32,
                U0F1S64,
                U0F1SP,
                _NOT_IN_SCHEMA,
            }
        }


        public static class Union1 {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)8,(short)2);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestUnion.Union1.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public Which which() {
                    switch(_getShortField(1)) {
                        case 0 : return Which.U1F0S0;
                        case 1 : return Which.U1F0S1;
                        case 2 : return Which.U1F1S1;
                        case 3 : return Which.U1F0S8;
                        case 4 : return Which.U1F1S8;
                        case 5 : return Which.U1F0S16;
                        case 6 : return Which.U1F1S16;
                        case 7 : return Which.U1F0S32;
                        case 8 : return Which.U1F1S32;
                        case 9 : return Which.U1F0S64;
                        case 10 : return Which.U1F1S64;
                        case 11 : return Which.U1F0SP;
                        case 12 : return Which.U1F1SP;
                        case 13 : return Which.U1F2S0;
                        case 14 : return Which.U1F2S1;
                        case 15 : return Which.U1F2S8;
                        case 16 : return Which.U1F2S16;
                        case 17 : return Which.U1F2S32;
                        case 18 : return Which.U1F2S64;
                        case 19 : return Which.U1F2SP;
                        default: return Which._NOT_IN_SCHEMA;
                    }
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final boolean isU1f0s0() {
                    return which() == TestUnion.Union1.Which.U1F0S0;
                }
                public final org.capnproto.Void getU1f0s0() {
                    assert which() == TestUnion.Union1.Which.U1F0S0:
                            "Must check which() before get()ing a union member.";
                    return org.capnproto.Void.VOID;
                }
                public final void setU1f0s0(org.capnproto.Void value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F0S0.ordinal());
                }

                public final boolean isU1f0s1() {
                    return which() == TestUnion.Union1.Which.U1F0S1;
                }
                public final boolean getU1f0s1() {
                    assert which() == TestUnion.Union1.Which.U1F0S1:
                            "Must check which() before get()ing a union member.";
                    return _getBooleanField(129);
                }
                public final void setU1f0s1(boolean value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F0S1.ordinal());
                    _setBooleanField(129, value);
                }

                public final boolean isU1f1s1() {
                    return which() == TestUnion.Union1.Which.U1F1S1;
                }
                public final boolean getU1f1s1() {
                    assert which() == TestUnion.Union1.Which.U1F1S1:
                            "Must check which() before get()ing a union member.";
                    return _getBooleanField(129);
                }
                public final void setU1f1s1(boolean value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F1S1.ordinal());
                    _setBooleanField(129, value);
                }

                public final boolean isU1f0s8() {
                    return which() == TestUnion.Union1.Which.U1F0S8;
                }
                public final byte getU1f0s8() {
                    assert which() == TestUnion.Union1.Which.U1F0S8:
                            "Must check which() before get()ing a union member.";
                    return _getByteField(17);
                }
                public final void setU1f0s8(byte value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F0S8.ordinal());
                    _setByteField(17, value);
                }

                public final boolean isU1f1s8() {
                    return which() == TestUnion.Union1.Which.U1F1S8;
                }
                public final byte getU1f1s8() {
                    assert which() == TestUnion.Union1.Which.U1F1S8:
                            "Must check which() before get()ing a union member.";
                    return _getByteField(17);
                }
                public final void setU1f1s8(byte value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F1S8.ordinal());
                    _setByteField(17, value);
                }

                public final boolean isU1f0s16() {
                    return which() == TestUnion.Union1.Which.U1F0S16;
                }
                public final short getU1f0s16() {
                    assert which() == TestUnion.Union1.Which.U1F0S16:
                            "Must check which() before get()ing a union member.";
                    return _getShortField(9);
                }
                public final void setU1f0s16(short value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F0S16.ordinal());
                    _setShortField(9, value);
                }

                public final boolean isU1f1s16() {
                    return which() == TestUnion.Union1.Which.U1F1S16;
                }
                public final short getU1f1s16() {
                    assert which() == TestUnion.Union1.Which.U1F1S16:
                            "Must check which() before get()ing a union member.";
                    return _getShortField(9);
                }
                public final void setU1f1s16(short value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F1S16.ordinal());
                    _setShortField(9, value);
                }

                public final boolean isU1f0s32() {
                    return which() == TestUnion.Union1.Which.U1F0S32;
                }
                public final int getU1f0s32() {
                    assert which() == TestUnion.Union1.Which.U1F0S32:
                            "Must check which() before get()ing a union member.";
                    return _getIntField(5);
                }
                public final void setU1f0s32(int value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F0S32.ordinal());
                    _setIntField(5, value);
                }

                public final boolean isU1f1s32() {
                    return which() == TestUnion.Union1.Which.U1F1S32;
                }
                public final int getU1f1s32() {
                    assert which() == TestUnion.Union1.Which.U1F1S32:
                            "Must check which() before get()ing a union member.";
                    return _getIntField(5);
                }
                public final void setU1f1s32(int value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F1S32.ordinal());
                    _setIntField(5, value);
                }

                public final boolean isU1f0s64() {
                    return which() == TestUnion.Union1.Which.U1F0S64;
                }
                public final long getU1f0s64() {
                    assert which() == TestUnion.Union1.Which.U1F0S64:
                            "Must check which() before get()ing a union member.";
                    return _getLongField(3);
                }
                public final void setU1f0s64(long value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F0S64.ordinal());
                    _setLongField(3, value);
                }

                public final boolean isU1f1s64() {
                    return which() == TestUnion.Union1.Which.U1F1S64;
                }
                public final long getU1f1s64() {
                    assert which() == TestUnion.Union1.Which.U1F1S64:
                            "Must check which() before get()ing a union member.";
                    return _getLongField(3);
                }
                public final void setU1f1s64(long value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F1S64.ordinal());
                    _setLongField(3, value);
                }

                public final boolean isU1f0sp() {
                    return which() == TestUnion.Union1.Which.U1F0SP;
                }
                public final boolean hasU1f0sp() {
                    if (which() != TestUnion.Union1.Which.U1F0SP) return false;
                    return !_pointerFieldIsNull(1);
                }
                public final org.capnproto.Text.Builder getU1f0sp() {
                    return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
                }
                public final void setU1f0sp(org.capnproto.Text.Reader value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F0SP.ordinal());
                    _setPointerField(org.capnproto.Text.factory, 1, value);
                }
                public final void setU1f0sp(String value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F0SP.ordinal());
                    _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
                }
                public final org.capnproto.Text.Builder initU1f0sp(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 1, size);
                }
                public final boolean isU1f1sp() {
                    return which() == TestUnion.Union1.Which.U1F1SP;
                }
                public final boolean hasU1f1sp() {
                    if (which() != TestUnion.Union1.Which.U1F1SP) return false;
                    return !_pointerFieldIsNull(1);
                }
                public final org.capnproto.Text.Builder getU1f1sp() {
                    return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
                }
                public final void setU1f1sp(org.capnproto.Text.Reader value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F1SP.ordinal());
                    _setPointerField(org.capnproto.Text.factory, 1, value);
                }
                public final void setU1f1sp(String value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F1SP.ordinal());
                    _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
                }
                public final org.capnproto.Text.Builder initU1f1sp(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 1, size);
                }
                public final boolean isU1f2s0() {
                    return which() == TestUnion.Union1.Which.U1F2S0;
                }
                public final org.capnproto.Void getU1f2s0() {
                    assert which() == TestUnion.Union1.Which.U1F2S0:
                            "Must check which() before get()ing a union member.";
                    return org.capnproto.Void.VOID;
                }
                public final void setU1f2s0(org.capnproto.Void value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F2S0.ordinal());
                }

                public final boolean isU1f2s1() {
                    return which() == TestUnion.Union1.Which.U1F2S1;
                }
                public final boolean getU1f2s1() {
                    assert which() == TestUnion.Union1.Which.U1F2S1:
                            "Must check which() before get()ing a union member.";
                    return _getBooleanField(129);
                }
                public final void setU1f2s1(boolean value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F2S1.ordinal());
                    _setBooleanField(129, value);
                }

                public final boolean isU1f2s8() {
                    return which() == TestUnion.Union1.Which.U1F2S8;
                }
                public final byte getU1f2s8() {
                    assert which() == TestUnion.Union1.Which.U1F2S8:
                            "Must check which() before get()ing a union member.";
                    return _getByteField(17);
                }
                public final void setU1f2s8(byte value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F2S8.ordinal());
                    _setByteField(17, value);
                }

                public final boolean isU1f2s16() {
                    return which() == TestUnion.Union1.Which.U1F2S16;
                }
                public final short getU1f2s16() {
                    assert which() == TestUnion.Union1.Which.U1F2S16:
                            "Must check which() before get()ing a union member.";
                    return _getShortField(9);
                }
                public final void setU1f2s16(short value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F2S16.ordinal());
                    _setShortField(9, value);
                }

                public final boolean isU1f2s32() {
                    return which() == TestUnion.Union1.Which.U1F2S32;
                }
                public final int getU1f2s32() {
                    assert which() == TestUnion.Union1.Which.U1F2S32:
                            "Must check which() before get()ing a union member.";
                    return _getIntField(5);
                }
                public final void setU1f2s32(int value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F2S32.ordinal());
                    _setIntField(5, value);
                }

                public final boolean isU1f2s64() {
                    return which() == TestUnion.Union1.Which.U1F2S64;
                }
                public final long getU1f2s64() {
                    assert which() == TestUnion.Union1.Which.U1F2S64:
                            "Must check which() before get()ing a union member.";
                    return _getLongField(3);
                }
                public final void setU1f2s64(long value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F2S64.ordinal());
                    _setLongField(3, value);
                }

                public final boolean isU1f2sp() {
                    return which() == TestUnion.Union1.Which.U1F2SP;
                }
                public final boolean hasU1f2sp() {
                    if (which() != TestUnion.Union1.Which.U1F2SP) return false;
                    return !_pointerFieldIsNull(1);
                }
                public final org.capnproto.Text.Builder getU1f2sp() {
                    return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
                }
                public final void setU1f2sp(org.capnproto.Text.Reader value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F2SP.ordinal());
                    _setPointerField(org.capnproto.Text.factory, 1, value);
                }
                public final void setU1f2sp(String value) {
                    _setShortField(1, (short)TestUnion.Union1.Which.U1F2SP.ordinal());
                    _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
                }
                public final org.capnproto.Text.Builder initU1f2sp(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 1, size);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public Which which() {
                    switch(_getShortField(1)) {
                        case 0 : return Which.U1F0S0;
                        case 1 : return Which.U1F0S1;
                        case 2 : return Which.U1F1S1;
                        case 3 : return Which.U1F0S8;
                        case 4 : return Which.U1F1S8;
                        case 5 : return Which.U1F0S16;
                        case 6 : return Which.U1F1S16;
                        case 7 : return Which.U1F0S32;
                        case 8 : return Which.U1F1S32;
                        case 9 : return Which.U1F0S64;
                        case 10 : return Which.U1F1S64;
                        case 11 : return Which.U1F0SP;
                        case 12 : return Which.U1F1SP;
                        case 13 : return Which.U1F2S0;
                        case 14 : return Which.U1F2S1;
                        case 15 : return Which.U1F2S8;
                        case 16 : return Which.U1F2S16;
                        case 17 : return Which.U1F2S32;
                        case 18 : return Which.U1F2S64;
                        case 19 : return Which.U1F2SP;
                        default: return Which._NOT_IN_SCHEMA;
                    }
                }
                public final boolean isU1f0s0() {
                    return which() == TestUnion.Union1.Which.U1F0S0;
                }
                public final org.capnproto.Void getU1f0s0() {
                    assert which() == TestUnion.Union1.Which.U1F0S0:
                            "Must check which() before get()ing a union member.";
                    return org.capnproto.Void.VOID;
                }

                public final boolean isU1f0s1() {
                    return which() == TestUnion.Union1.Which.U1F0S1;
                }
                public final boolean getU1f0s1() {
                    assert which() == TestUnion.Union1.Which.U1F0S1:
                            "Must check which() before get()ing a union member.";
                    return _getBooleanField(129);
                }

                public final boolean isU1f1s1() {
                    return which() == TestUnion.Union1.Which.U1F1S1;
                }
                public final boolean getU1f1s1() {
                    assert which() == TestUnion.Union1.Which.U1F1S1:
                            "Must check which() before get()ing a union member.";
                    return _getBooleanField(129);
                }

                public final boolean isU1f0s8() {
                    return which() == TestUnion.Union1.Which.U1F0S8;
                }
                public final byte getU1f0s8() {
                    assert which() == TestUnion.Union1.Which.U1F0S8:
                            "Must check which() before get()ing a union member.";
                    return _getByteField(17);
                }

                public final boolean isU1f1s8() {
                    return which() == TestUnion.Union1.Which.U1F1S8;
                }
                public final byte getU1f1s8() {
                    assert which() == TestUnion.Union1.Which.U1F1S8:
                            "Must check which() before get()ing a union member.";
                    return _getByteField(17);
                }

                public final boolean isU1f0s16() {
                    return which() == TestUnion.Union1.Which.U1F0S16;
                }
                public final short getU1f0s16() {
                    assert which() == TestUnion.Union1.Which.U1F0S16:
                            "Must check which() before get()ing a union member.";
                    return _getShortField(9);
                }

                public final boolean isU1f1s16() {
                    return which() == TestUnion.Union1.Which.U1F1S16;
                }
                public final short getU1f1s16() {
                    assert which() == TestUnion.Union1.Which.U1F1S16:
                            "Must check which() before get()ing a union member.";
                    return _getShortField(9);
                }

                public final boolean isU1f0s32() {
                    return which() == TestUnion.Union1.Which.U1F0S32;
                }
                public final int getU1f0s32() {
                    assert which() == TestUnion.Union1.Which.U1F0S32:
                            "Must check which() before get()ing a union member.";
                    return _getIntField(5);
                }

                public final boolean isU1f1s32() {
                    return which() == TestUnion.Union1.Which.U1F1S32;
                }
                public final int getU1f1s32() {
                    assert which() == TestUnion.Union1.Which.U1F1S32:
                            "Must check which() before get()ing a union member.";
                    return _getIntField(5);
                }

                public final boolean isU1f0s64() {
                    return which() == TestUnion.Union1.Which.U1F0S64;
                }
                public final long getU1f0s64() {
                    assert which() == TestUnion.Union1.Which.U1F0S64:
                            "Must check which() before get()ing a union member.";
                    return _getLongField(3);
                }

                public final boolean isU1f1s64() {
                    return which() == TestUnion.Union1.Which.U1F1S64;
                }
                public final long getU1f1s64() {
                    assert which() == TestUnion.Union1.Which.U1F1S64:
                            "Must check which() before get()ing a union member.";
                    return _getLongField(3);
                }

                public final boolean isU1f0sp() {
                    return which() == TestUnion.Union1.Which.U1F0SP;
                }
                public boolean hasU1f0sp() {
                    if (which() != TestUnion.Union1.Which.U1F0SP) return false;
                    return !_pointerFieldIsNull(1);
                }
                public org.capnproto.Text.Reader getU1f0sp() {
                    return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
                }

                public final boolean isU1f1sp() {
                    return which() == TestUnion.Union1.Which.U1F1SP;
                }
                public boolean hasU1f1sp() {
                    if (which() != TestUnion.Union1.Which.U1F1SP) return false;
                    return !_pointerFieldIsNull(1);
                }
                public org.capnproto.Text.Reader getU1f1sp() {
                    return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
                }

                public final boolean isU1f2s0() {
                    return which() == TestUnion.Union1.Which.U1F2S0;
                }
                public final org.capnproto.Void getU1f2s0() {
                    assert which() == TestUnion.Union1.Which.U1F2S0:
                            "Must check which() before get()ing a union member.";
                    return org.capnproto.Void.VOID;
                }

                public final boolean isU1f2s1() {
                    return which() == TestUnion.Union1.Which.U1F2S1;
                }
                public final boolean getU1f2s1() {
                    assert which() == TestUnion.Union1.Which.U1F2S1:
                            "Must check which() before get()ing a union member.";
                    return _getBooleanField(129);
                }

                public final boolean isU1f2s8() {
                    return which() == TestUnion.Union1.Which.U1F2S8;
                }
                public final byte getU1f2s8() {
                    assert which() == TestUnion.Union1.Which.U1F2S8:
                            "Must check which() before get()ing a union member.";
                    return _getByteField(17);
                }

                public final boolean isU1f2s16() {
                    return which() == TestUnion.Union1.Which.U1F2S16;
                }
                public final short getU1f2s16() {
                    assert which() == TestUnion.Union1.Which.U1F2S16:
                            "Must check which() before get()ing a union member.";
                    return _getShortField(9);
                }

                public final boolean isU1f2s32() {
                    return which() == TestUnion.Union1.Which.U1F2S32;
                }
                public final int getU1f2s32() {
                    assert which() == TestUnion.Union1.Which.U1F2S32:
                            "Must check which() before get()ing a union member.";
                    return _getIntField(5);
                }

                public final boolean isU1f2s64() {
                    return which() == TestUnion.Union1.Which.U1F2S64;
                }
                public final long getU1f2s64() {
                    assert which() == TestUnion.Union1.Which.U1F2S64:
                            "Must check which() before get()ing a union member.";
                    return _getLongField(3);
                }

                public final boolean isU1f2sp() {
                    return which() == TestUnion.Union1.Which.U1F2SP;
                }
                public boolean hasU1f2sp() {
                    if (which() != TestUnion.Union1.Which.U1F2SP) return false;
                    return !_pointerFieldIsNull(1);
                }
                public org.capnproto.Text.Reader getU1f2sp() {
                    return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
                }

            }

            public enum Which {
                U1F0S0,
                U1F0S1,
                U1F1S1,
                U1F0S8,
                U1F1S8,
                U1F0S16,
                U1F1S16,
                U1F0S32,
                U1F1S32,
                U1F0S64,
                U1F1S64,
                U1F0SP,
                U1F1SP,
                U1F2S0,
                U1F2S1,
                U1F2S8,
                U1F2S16,
                U1F2S32,
                U1F2S64,
                U1F2SP,
                _NOT_IN_SCHEMA,
            }
        }


        public static class Union2 {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)8,(short)2);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestUnion.Union2.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public Which which() {
                    switch(_getShortField(2)) {
                        case 0 : return Which.U2F0S1;
                        case 1 : return Which.U2F0S8;
                        case 2 : return Which.U2F0S16;
                        case 3 : return Which.U2F0S32;
                        case 4 : return Which.U2F0S64;
                        default: return Which._NOT_IN_SCHEMA;
                    }
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final boolean isU2f0s1() {
                    return which() == TestUnion.Union2.Which.U2F0S1;
                }
                public final boolean getU2f0s1() {
                    assert which() == TestUnion.Union2.Which.U2F0S1:
                            "Must check which() before get()ing a union member.";
                    return _getBooleanField(256);
                }
                public final void setU2f0s1(boolean value) {
                    _setShortField(2, (short)TestUnion.Union2.Which.U2F0S1.ordinal());
                    _setBooleanField(256, value);
                }

                public final boolean isU2f0s8() {
                    return which() == TestUnion.Union2.Which.U2F0S8;
                }
                public final byte getU2f0s8() {
                    assert which() == TestUnion.Union2.Which.U2F0S8:
                            "Must check which() before get()ing a union member.";
                    return _getByteField(33);
                }
                public final void setU2f0s8(byte value) {
                    _setShortField(2, (short)TestUnion.Union2.Which.U2F0S8.ordinal());
                    _setByteField(33, value);
                }

                public final boolean isU2f0s16() {
                    return which() == TestUnion.Union2.Which.U2F0S16;
                }
                public final short getU2f0s16() {
                    assert which() == TestUnion.Union2.Which.U2F0S16:
                            "Must check which() before get()ing a union member.";
                    return _getShortField(18);
                }
                public final void setU2f0s16(short value) {
                    _setShortField(2, (short)TestUnion.Union2.Which.U2F0S16.ordinal());
                    _setShortField(18, value);
                }

                public final boolean isU2f0s32() {
                    return which() == TestUnion.Union2.Which.U2F0S32;
                }
                public final int getU2f0s32() {
                    assert which() == TestUnion.Union2.Which.U2F0S32:
                            "Must check which() before get()ing a union member.";
                    return _getIntField(10);
                }
                public final void setU2f0s32(int value) {
                    _setShortField(2, (short)TestUnion.Union2.Which.U2F0S32.ordinal());
                    _setIntField(10, value);
                }

                public final boolean isU2f0s64() {
                    return which() == TestUnion.Union2.Which.U2F0S64;
                }
                public final long getU2f0s64() {
                    assert which() == TestUnion.Union2.Which.U2F0S64:
                            "Must check which() before get()ing a union member.";
                    return _getLongField(6);
                }
                public final void setU2f0s64(long value) {
                    _setShortField(2, (short)TestUnion.Union2.Which.U2F0S64.ordinal());
                    _setLongField(6, value);
                }

            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public Which which() {
                    switch(_getShortField(2)) {
                        case 0 : return Which.U2F0S1;
                        case 1 : return Which.U2F0S8;
                        case 2 : return Which.U2F0S16;
                        case 3 : return Which.U2F0S32;
                        case 4 : return Which.U2F0S64;
                        default: return Which._NOT_IN_SCHEMA;
                    }
                }
                public final boolean isU2f0s1() {
                    return which() == TestUnion.Union2.Which.U2F0S1;
                }
                public final boolean getU2f0s1() {
                    assert which() == TestUnion.Union2.Which.U2F0S1:
                            "Must check which() before get()ing a union member.";
                    return _getBooleanField(256);
                }

                public final boolean isU2f0s8() {
                    return which() == TestUnion.Union2.Which.U2F0S8;
                }
                public final byte getU2f0s8() {
                    assert which() == TestUnion.Union2.Which.U2F0S8:
                            "Must check which() before get()ing a union member.";
                    return _getByteField(33);
                }

                public final boolean isU2f0s16() {
                    return which() == TestUnion.Union2.Which.U2F0S16;
                }
                public final short getU2f0s16() {
                    assert which() == TestUnion.Union2.Which.U2F0S16:
                            "Must check which() before get()ing a union member.";
                    return _getShortField(18);
                }

                public final boolean isU2f0s32() {
                    return which() == TestUnion.Union2.Which.U2F0S32;
                }
                public final int getU2f0s32() {
                    assert which() == TestUnion.Union2.Which.U2F0S32:
                            "Must check which() before get()ing a union member.";
                    return _getIntField(10);
                }

                public final boolean isU2f0s64() {
                    return which() == TestUnion.Union2.Which.U2F0S64;
                }
                public final long getU2f0s64() {
                    assert which() == TestUnion.Union2.Which.U2F0S64:
                            "Must check which() before get()ing a union member.";
                    return _getLongField(6);
                }

            }

            public enum Which {
                U2F0S1,
                U2F0S8,
                U2F0S16,
                U2F0S32,
                U2F0S64,
                _NOT_IN_SCHEMA,
            }
        }


        public static class Union3 {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)8,(short)2);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestUnion.Union3.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public Which which() {
                    switch(_getShortField(3)) {
                        case 0 : return Which.U3F0S1;
                        case 1 : return Which.U3F0S8;
                        case 2 : return Which.U3F0S16;
                        case 3 : return Which.U3F0S32;
                        case 4 : return Which.U3F0S64;
                        default: return Which._NOT_IN_SCHEMA;
                    }
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final boolean isU3f0s1() {
                    return which() == TestUnion.Union3.Which.U3F0S1;
                }
                public final boolean getU3f0s1() {
                    assert which() == TestUnion.Union3.Which.U3F0S1:
                            "Must check which() before get()ing a union member.";
                    return _getBooleanField(257);
                }
                public final void setU3f0s1(boolean value) {
                    _setShortField(3, (short)TestUnion.Union3.Which.U3F0S1.ordinal());
                    _setBooleanField(257, value);
                }

                public final boolean isU3f0s8() {
                    return which() == TestUnion.Union3.Which.U3F0S8;
                }
                public final byte getU3f0s8() {
                    assert which() == TestUnion.Union3.Which.U3F0S8:
                            "Must check which() before get()ing a union member.";
                    return _getByteField(34);
                }
                public final void setU3f0s8(byte value) {
                    _setShortField(3, (short)TestUnion.Union3.Which.U3F0S8.ordinal());
                    _setByteField(34, value);
                }

                public final boolean isU3f0s16() {
                    return which() == TestUnion.Union3.Which.U3F0S16;
                }
                public final short getU3f0s16() {
                    assert which() == TestUnion.Union3.Which.U3F0S16:
                            "Must check which() before get()ing a union member.";
                    return _getShortField(19);
                }
                public final void setU3f0s16(short value) {
                    _setShortField(3, (short)TestUnion.Union3.Which.U3F0S16.ordinal());
                    _setShortField(19, value);
                }

                public final boolean isU3f0s32() {
                    return which() == TestUnion.Union3.Which.U3F0S32;
                }
                public final int getU3f0s32() {
                    assert which() == TestUnion.Union3.Which.U3F0S32:
                            "Must check which() before get()ing a union member.";
                    return _getIntField(11);
                }
                public final void setU3f0s32(int value) {
                    _setShortField(3, (short)TestUnion.Union3.Which.U3F0S32.ordinal());
                    _setIntField(11, value);
                }

                public final boolean isU3f0s64() {
                    return which() == TestUnion.Union3.Which.U3F0S64;
                }
                public final long getU3f0s64() {
                    assert which() == TestUnion.Union3.Which.U3F0S64:
                            "Must check which() before get()ing a union member.";
                    return _getLongField(7);
                }
                public final void setU3f0s64(long value) {
                    _setShortField(3, (short)TestUnion.Union3.Which.U3F0S64.ordinal());
                    _setLongField(7, value);
                }

            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public Which which() {
                    switch(_getShortField(3)) {
                        case 0 : return Which.U3F0S1;
                        case 1 : return Which.U3F0S8;
                        case 2 : return Which.U3F0S16;
                        case 3 : return Which.U3F0S32;
                        case 4 : return Which.U3F0S64;
                        default: return Which._NOT_IN_SCHEMA;
                    }
                }
                public final boolean isU3f0s1() {
                    return which() == TestUnion.Union3.Which.U3F0S1;
                }
                public final boolean getU3f0s1() {
                    assert which() == TestUnion.Union3.Which.U3F0S1:
                            "Must check which() before get()ing a union member.";
                    return _getBooleanField(257);
                }

                public final boolean isU3f0s8() {
                    return which() == TestUnion.Union3.Which.U3F0S8;
                }
                public final byte getU3f0s8() {
                    assert which() == TestUnion.Union3.Which.U3F0S8:
                            "Must check which() before get()ing a union member.";
                    return _getByteField(34);
                }

                public final boolean isU3f0s16() {
                    return which() == TestUnion.Union3.Which.U3F0S16;
                }
                public final short getU3f0s16() {
                    assert which() == TestUnion.Union3.Which.U3F0S16:
                            "Must check which() before get()ing a union member.";
                    return _getShortField(19);
                }

                public final boolean isU3f0s32() {
                    return which() == TestUnion.Union3.Which.U3F0S32;
                }
                public final int getU3f0s32() {
                    assert which() == TestUnion.Union3.Which.U3F0S32:
                            "Must check which() before get()ing a union member.";
                    return _getIntField(11);
                }

                public final boolean isU3f0s64() {
                    return which() == TestUnion.Union3.Which.U3F0S64;
                }
                public final long getU3f0s64() {
                    assert which() == TestUnion.Union3.Which.U3F0S64:
                            "Must check which() before get()ing a union member.";
                    return _getLongField(7);
                }

            }

            public enum Which {
                U3F0S1,
                U3F0S8,
                U3F0S16,
                U3F0S32,
                U3F0S64,
                _NOT_IN_SCHEMA,
            }
        }


    }


    public static class TestGroups {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }
            public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
                return TestGroups.STRUCT_SIZE;
            }
            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                super(segment, data, pointers, dataSize, pointerCount);
            }
            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
            public final Groups.Builder getGroups() {
                return new TestGroups.Groups.Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final Groups.Builder initGroups() {
                _setIntField(0,0);
                _setShortField(2,(short)0);
                _setLongField(1,0L);
                _clearPointerField(0);
                _clearPointerField(1);
                return new TestGroups.Groups.Builder(segment, data, pointers, dataSize, pointerCount);
            }

        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public Groups.Reader getGroups() {
                return new TestGroups.Groups.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

        }

        public static class Groups {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)2);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestGroups.Groups.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public Which which() {
                    switch(_getShortField(2)) {
                        case 0 : return Which.FOO;
                        case 1 : return Which.BAZ;
                        case 2 : return Which.BAR;
                        default: return Which._NOT_IN_SCHEMA;
                    }
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final boolean isFoo() {
                    return which() == TestGroups.Groups.Which.FOO;
                }
                public final Foo.Builder getFoo() {
                    return new TestGroups.Groups.Foo.Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final Foo.Builder initFoo() {
                    _setShortField(2, (short)TestGroups.Groups.Which.FOO.ordinal());
                    _setIntField(0,0);
                    _setLongField(1,0L);
                    _clearPointerField(0);
                    return new TestGroups.Groups.Foo.Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final boolean isBaz() {
                    return which() == TestGroups.Groups.Which.BAZ;
                }
                public final Baz.Builder getBaz() {
                    return new TestGroups.Groups.Baz.Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final Baz.Builder initBaz() {
                    _setShortField(2, (short)TestGroups.Groups.Which.BAZ.ordinal());
                    _setIntField(0,0);
                    _clearPointerField(0);
                    _clearPointerField(1);
                    return new TestGroups.Groups.Baz.Builder(segment, data, pointers, dataSize, pointerCount);
                }

                public final boolean isBar() {
                    return which() == TestGroups.Groups.Which.BAR;
                }
                public final Bar.Builder getBar() {
                    return new TestGroups.Groups.Bar.Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final Bar.Builder initBar() {
                    _setShortField(2, (short)TestGroups.Groups.Which.BAR.ordinal());
                    _setIntField(0,0);
                    _setLongField(1,0L);
                    _clearPointerField(0);
                    return new TestGroups.Groups.Bar.Builder(segment, data, pointers, dataSize, pointerCount);
                }

            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public Which which() {
                    switch(_getShortField(2)) {
                        case 0 : return Which.FOO;
                        case 1 : return Which.BAZ;
                        case 2 : return Which.BAR;
                        default: return Which._NOT_IN_SCHEMA;
                    }
                }
                public final boolean isFoo() {
                    return which() == TestGroups.Groups.Which.FOO;
                }
                public Foo.Reader getFoo() {
                    return new TestGroups.Groups.Foo.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final boolean isBaz() {
                    return which() == TestGroups.Groups.Which.BAZ;
                }
                public Baz.Reader getBaz() {
                    return new TestGroups.Groups.Baz.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final boolean isBar() {
                    return which() == TestGroups.Groups.Which.BAR;
                }
                public Bar.Reader getBar() {
                    return new TestGroups.Groups.Bar.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

            }

            public enum Which {
                FOO,
                BAZ,
                BAR,
                _NOT_IN_SCHEMA,
            }
            public static class Foo {
                public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)2);
                public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                    public Factory() {
                    }
                    public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                    }
                    public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                        return new Builder(segment, data, pointers, dataSize, pointerCount);
                    }
                    public final org.capnproto.StructSize structSize() {
                        return TestGroups.Groups.Foo.STRUCT_SIZE;
                    }
                    public final Reader asReader(Builder builder) {
                        return builder.asReader();
                    }
                }
                public static final Factory factory = new Factory();
                public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
                public static final class Builder extends org.capnproto.StructBuilder {
                    Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                        super(segment, data, pointers, dataSize, pointerCount);
                    }
                    public final Reader asReader() {
                        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                    }
                    public final int getCorge() {
                        return _getIntField(0);
                    }
                    public final void setCorge(int value) {
                        _setIntField(0, value);
                    }

                    public final long getGrault() {
                        return _getLongField(1);
                    }
                    public final void setGrault(long value) {
                        _setLongField(1, value);
                    }

                    public final boolean hasGarply() {
                        return !_pointerFieldIsNull(0);
                    }
                    public final org.capnproto.Text.Builder getGarply() {
                        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                    }
                    public final void setGarply(org.capnproto.Text.Reader value) {
                        _setPointerField(org.capnproto.Text.factory, 0, value);
                    }
                    public final void setGarply(String value) {
                        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
                    }
                    public final org.capnproto.Text.Builder initGarply(int size) {
                        return _initPointerField(org.capnproto.Text.factory, 0, size);
                    }
                    public final org.capnproto.Void getQuux() {
                        return org.capnproto.Void.VOID;
                    }
                    public final void setQuux(org.capnproto.Void value) {
                    }

                }

                public static final class Reader extends org.capnproto.StructReader {
                    Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                    }

                    public final int getCorge() {
                        return _getIntField(0);
                    }

                    public final long getGrault() {
                        return _getLongField(1);
                    }

                    public boolean hasGarply() {
                        return !_pointerFieldIsNull(0);
                    }
                    public org.capnproto.Text.Reader getGarply() {
                        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                    }

                    public final org.capnproto.Void getQuux() {
                        return org.capnproto.Void.VOID;
                    }

                }

            }


            public static class Baz {
                public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)2);
                public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                    public Factory() {
                    }
                    public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                    }
                    public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                        return new Builder(segment, data, pointers, dataSize, pointerCount);
                    }
                    public final org.capnproto.StructSize structSize() {
                        return TestGroups.Groups.Baz.STRUCT_SIZE;
                    }
                    public final Reader asReader(Builder builder) {
                        return builder.asReader();
                    }
                }
                public static final Factory factory = new Factory();
                public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
                public static final class Builder extends org.capnproto.StructBuilder {
                    Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                        super(segment, data, pointers, dataSize, pointerCount);
                    }
                    public final Reader asReader() {
                        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                    }
                    public final int getCorge() {
                        return _getIntField(0);
                    }
                    public final void setCorge(int value) {
                        _setIntField(0, value);
                    }

                    public final boolean hasGrault() {
                        return !_pointerFieldIsNull(0);
                    }
                    public final org.capnproto.Text.Builder getGrault() {
                        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                    }
                    public final void setGrault(org.capnproto.Text.Reader value) {
                        _setPointerField(org.capnproto.Text.factory, 0, value);
                    }
                    public final void setGrault(String value) {
                        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
                    }
                    public final org.capnproto.Text.Builder initGrault(int size) {
                        return _initPointerField(org.capnproto.Text.factory, 0, size);
                    }
                    public final boolean hasGarply() {
                        return !_pointerFieldIsNull(1);
                    }
                    public final org.capnproto.Text.Builder getGarply() {
                        return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
                    }
                    public final void setGarply(org.capnproto.Text.Reader value) {
                        _setPointerField(org.capnproto.Text.factory, 1, value);
                    }
                    public final void setGarply(String value) {
                        _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
                    }
                    public final org.capnproto.Text.Builder initGarply(int size) {
                        return _initPointerField(org.capnproto.Text.factory, 1, size);
                    }
                }

                public static final class Reader extends org.capnproto.StructReader {
                    Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                    }

                    public final int getCorge() {
                        return _getIntField(0);
                    }

                    public boolean hasGrault() {
                        return !_pointerFieldIsNull(0);
                    }
                    public org.capnproto.Text.Reader getGrault() {
                        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                    }

                    public boolean hasGarply() {
                        return !_pointerFieldIsNull(1);
                    }
                    public org.capnproto.Text.Reader getGarply() {
                        return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
                    }

                }

            }


            public static class Bar {
                public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)2);
                public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                    public Factory() {
                    }
                    public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                    }
                    public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                        return new Builder(segment, data, pointers, dataSize, pointerCount);
                    }
                    public final org.capnproto.StructSize structSize() {
                        return TestGroups.Groups.Bar.STRUCT_SIZE;
                    }
                    public final Reader asReader(Builder builder) {
                        return builder.asReader();
                    }
                }
                public static final Factory factory = new Factory();
                public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
                public static final class Builder extends org.capnproto.StructBuilder {
                    Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                        super(segment, data, pointers, dataSize, pointerCount);
                    }
                    public final Reader asReader() {
                        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                    }
                    public final int getCorge() {
                        return _getIntField(0);
                    }
                    public final void setCorge(int value) {
                        _setIntField(0, value);
                    }

                    public final boolean hasGrault() {
                        return !_pointerFieldIsNull(0);
                    }
                    public final org.capnproto.Text.Builder getGrault() {
                        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                    }
                    public final void setGrault(org.capnproto.Text.Reader value) {
                        _setPointerField(org.capnproto.Text.factory, 0, value);
                    }
                    public final void setGrault(String value) {
                        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
                    }
                    public final org.capnproto.Text.Builder initGrault(int size) {
                        return _initPointerField(org.capnproto.Text.factory, 0, size);
                    }
                    public final long getGarply() {
                        return _getLongField(1);
                    }
                    public final void setGarply(long value) {
                        _setLongField(1, value);
                    }

                }

                public static final class Reader extends org.capnproto.StructReader {
                    Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                    }

                    public final int getCorge() {
                        return _getIntField(0);
                    }

                    public boolean hasGrault() {
                        return !_pointerFieldIsNull(0);
                    }
                    public org.capnproto.Text.Reader getGrault() {
                        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                    }

                    public final long getGarply() {
                        return _getLongField(1);
                    }

                }

            }


        }


    }


    public static class TestLists {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)12);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }
            public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
                return TestLists.STRUCT_SIZE;
            }
            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                super(segment, data, pointers, dataSize, pointerCount);
            }
            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
            public final boolean hasList0() {
                return !_pointerFieldIsNull(0);
            }
            public final org.capnproto.StructList.Builder<Test.TestLists.Struct0.Builder> getList0() {
                return _getPointerField(Test.TestLists.Struct0.listFactory, 0, null, 0);
            }
            public final void setList0(org.capnproto.StructList.Reader<Test.TestLists.Struct0.Reader> value) {
                _setPointerField(Test.TestLists.Struct0.listFactory, 0, value);
            }
            public final org.capnproto.StructList.Builder<Test.TestLists.Struct0.Builder> initList0(int size) {
                return _initPointerField(Test.TestLists.Struct0.listFactory, 0, size);
            }
            public final boolean hasList1() {
                return !_pointerFieldIsNull(1);
            }
            public final org.capnproto.StructList.Builder<Test.TestLists.Struct1.Builder> getList1() {
                return _getPointerField(Test.TestLists.Struct1.listFactory, 1, null, 0);
            }
            public final void setList1(org.capnproto.StructList.Reader<Test.TestLists.Struct1.Reader> value) {
                _setPointerField(Test.TestLists.Struct1.listFactory, 1, value);
            }
            public final org.capnproto.StructList.Builder<Test.TestLists.Struct1.Builder> initList1(int size) {
                return _initPointerField(Test.TestLists.Struct1.listFactory, 1, size);
            }
            public final boolean hasList8() {
                return !_pointerFieldIsNull(2);
            }
            public final org.capnproto.StructList.Builder<Test.TestLists.Struct8.Builder> getList8() {
                return _getPointerField(Test.TestLists.Struct8.listFactory, 2, null, 0);
            }
            public final void setList8(org.capnproto.StructList.Reader<Test.TestLists.Struct8.Reader> value) {
                _setPointerField(Test.TestLists.Struct8.listFactory, 2, value);
            }
            public final org.capnproto.StructList.Builder<Test.TestLists.Struct8.Builder> initList8(int size) {
                return _initPointerField(Test.TestLists.Struct8.listFactory, 2, size);
            }
            public final boolean hasList16() {
                return !_pointerFieldIsNull(3);
            }
            public final org.capnproto.StructList.Builder<Test.TestLists.Struct16.Builder> getList16() {
                return _getPointerField(Test.TestLists.Struct16.listFactory, 3, null, 0);
            }
            public final void setList16(org.capnproto.StructList.Reader<Test.TestLists.Struct16.Reader> value) {
                _setPointerField(Test.TestLists.Struct16.listFactory, 3, value);
            }
            public final org.capnproto.StructList.Builder<Test.TestLists.Struct16.Builder> initList16(int size) {
                return _initPointerField(Test.TestLists.Struct16.listFactory, 3, size);
            }
            public final boolean hasList32() {
                return !_pointerFieldIsNull(4);
            }
            public final org.capnproto.StructList.Builder<Test.TestLists.Struct32.Builder> getList32() {
                return _getPointerField(Test.TestLists.Struct32.listFactory, 4, null, 0);
            }
            public final void setList32(org.capnproto.StructList.Reader<Test.TestLists.Struct32.Reader> value) {
                _setPointerField(Test.TestLists.Struct32.listFactory, 4, value);
            }
            public final org.capnproto.StructList.Builder<Test.TestLists.Struct32.Builder> initList32(int size) {
                return _initPointerField(Test.TestLists.Struct32.listFactory, 4, size);
            }
            public final boolean hasList64() {
                return !_pointerFieldIsNull(5);
            }
            public final org.capnproto.StructList.Builder<Test.TestLists.Struct64.Builder> getList64() {
                return _getPointerField(Test.TestLists.Struct64.listFactory, 5, null, 0);
            }
            public final void setList64(org.capnproto.StructList.Reader<Test.TestLists.Struct64.Reader> value) {
                _setPointerField(Test.TestLists.Struct64.listFactory, 5, value);
            }
            public final org.capnproto.StructList.Builder<Test.TestLists.Struct64.Builder> initList64(int size) {
                return _initPointerField(Test.TestLists.Struct64.listFactory, 5, size);
            }
            public final boolean hasListP() {
                return !_pointerFieldIsNull(6);
            }
            public final org.capnproto.StructList.Builder<Test.TestLists.StructP.Builder> getListP() {
                return _getPointerField(Test.TestLists.StructP.listFactory, 6, null, 0);
            }
            public final void setListP(org.capnproto.StructList.Reader<Test.TestLists.StructP.Reader> value) {
                _setPointerField(Test.TestLists.StructP.listFactory, 6, value);
            }
            public final org.capnproto.StructList.Builder<Test.TestLists.StructP.Builder> initListP(int size) {
                return _initPointerField(Test.TestLists.StructP.listFactory, 6, size);
            }
            public final boolean hasInt32ListList() {
                return !_pointerFieldIsNull(7);
            }
            public final org.capnproto.ListList.Builder<org.capnproto.PrimitiveList.Int.Builder> getInt32ListList() {
                return _getPointerField(new org.capnproto.ListList.Factory<org.capnproto.PrimitiveList.Int.Builder, org.capnproto.PrimitiveList.Int.Reader>(org.capnproto.PrimitiveList.Int.factory), 7, null, 0);
            }
            public final void setInt32ListList(org.capnproto.ListList.Reader<org.capnproto.PrimitiveList.Int.Reader> value) {
                _setPointerField(new org.capnproto.ListList.Factory<org.capnproto.PrimitiveList.Int.Builder, org.capnproto.PrimitiveList.Int.Reader>(org.capnproto.PrimitiveList.Int.factory), 7, value);
            }
            public final org.capnproto.ListList.Builder<org.capnproto.PrimitiveList.Int.Builder> initInt32ListList(int size) {
                return _initPointerField(new org.capnproto.ListList.Factory<org.capnproto.PrimitiveList.Int.Builder, org.capnproto.PrimitiveList.Int.Reader>(org.capnproto.PrimitiveList.Int.factory), 7, size);
            }
            public final boolean hasTextListList() {
                return !_pointerFieldIsNull(8);
            }
            public final org.capnproto.ListList.Builder<org.capnproto.TextList.Builder> getTextListList() {
                return _getPointerField(new org.capnproto.ListList.Factory<org.capnproto.TextList.Builder, org.capnproto.TextList.Reader>(org.capnproto.TextList.factory), 8, null, 0);
            }
            public final void setTextListList(org.capnproto.ListList.Reader<org.capnproto.TextList.Reader> value) {
                _setPointerField(new org.capnproto.ListList.Factory<org.capnproto.TextList.Builder, org.capnproto.TextList.Reader>(org.capnproto.TextList.factory), 8, value);
            }
            public final org.capnproto.ListList.Builder<org.capnproto.TextList.Builder> initTextListList(int size) {
                return _initPointerField(new org.capnproto.ListList.Factory<org.capnproto.TextList.Builder, org.capnproto.TextList.Reader>(org.capnproto.TextList.factory), 8, size);
            }
            public final boolean hasStructListList() {
                return !_pointerFieldIsNull(9);
            }
            public final org.capnproto.ListList.Builder<org.capnproto.StructList.Builder<Test.TestAllTypes.Builder>> getStructListList() {
                return _getPointerField(new org.capnproto.ListList.Factory<org.capnproto.StructList.Builder<Test.TestAllTypes.Builder>, org.capnproto.StructList.Reader<Test.TestAllTypes.Reader>>(Test.TestAllTypes.listFactory), 9, null, 0);
            }
            public final void setStructListList(org.capnproto.ListList.Reader<org.capnproto.StructList.Reader<Test.TestAllTypes.Reader>> value) {
                _setPointerField(new org.capnproto.ListList.Factory<org.capnproto.StructList.Builder<Test.TestAllTypes.Builder>, org.capnproto.StructList.Reader<Test.TestAllTypes.Reader>>(Test.TestAllTypes.listFactory), 9, value);
            }
            public final org.capnproto.ListList.Builder<org.capnproto.StructList.Builder<Test.TestAllTypes.Builder>> initStructListList(int size) {
                return _initPointerField(new org.capnproto.ListList.Factory<org.capnproto.StructList.Builder<Test.TestAllTypes.Builder>, org.capnproto.StructList.Reader<Test.TestAllTypes.Reader>>(Test.TestAllTypes.listFactory), 9, size);
            }
            public final boolean hasBoolListListList() {
                return !_pointerFieldIsNull(10);
            }
            public final org.capnproto.ListList.Builder<org.capnproto.ListList.Builder<org.capnproto.PrimitiveList.Boolean.Builder>> getBoolListListList() {
                return _getPointerField(new org.capnproto.ListList.Factory<org.capnproto.ListList.Builder<org.capnproto.PrimitiveList.Boolean.Builder>, org.capnproto.ListList.Reader<org.capnproto.PrimitiveList.Boolean.Reader>>(new org.capnproto.ListList.Factory<org.capnproto.PrimitiveList.Boolean.Builder, org.capnproto.PrimitiveList.Boolean.Reader>(org.capnproto.PrimitiveList.Boolean.factory)), 10, null, 0);
            }
            public final void setBoolListListList(org.capnproto.ListList.Reader<org.capnproto.ListList.Reader<org.capnproto.PrimitiveList.Boolean.Reader>> value) {
                _setPointerField(new org.capnproto.ListList.Factory<org.capnproto.ListList.Builder<org.capnproto.PrimitiveList.Boolean.Builder>, org.capnproto.ListList.Reader<org.capnproto.PrimitiveList.Boolean.Reader>>(new org.capnproto.ListList.Factory<org.capnproto.PrimitiveList.Boolean.Builder, org.capnproto.PrimitiveList.Boolean.Reader>(org.capnproto.PrimitiveList.Boolean.factory)), 10, value);
            }
            public final org.capnproto.ListList.Builder<org.capnproto.ListList.Builder<org.capnproto.PrimitiveList.Boolean.Builder>> initBoolListListList(int size) {
                return _initPointerField(new org.capnproto.ListList.Factory<org.capnproto.ListList.Builder<org.capnproto.PrimitiveList.Boolean.Builder>, org.capnproto.ListList.Reader<org.capnproto.PrimitiveList.Boolean.Reader>>(new org.capnproto.ListList.Factory<org.capnproto.PrimitiveList.Boolean.Builder, org.capnproto.PrimitiveList.Boolean.Reader>(org.capnproto.PrimitiveList.Boolean.factory)), 10, size);
            }
            public final boolean hasEnumListList() {
                return !_pointerFieldIsNull(11);
            }
            public final org.capnproto.ListList.Builder<org.capnproto.EnumList.Builder<Test.TestEnum>> getEnumListList() {
                return _getPointerField(new org.capnproto.ListList.Factory<org.capnproto.EnumList.Builder<Test.TestEnum>, org.capnproto.EnumList.Reader<Test.TestEnum>>(new org.capnproto.EnumList.Factory<Test.TestEnum>(Test.TestEnum.values())), 11, null, 0);
            }
            public final void setEnumListList(org.capnproto.ListList.Reader<org.capnproto.EnumList.Reader<Test.TestEnum>> value) {
                _setPointerField(new org.capnproto.ListList.Factory<org.capnproto.EnumList.Builder<Test.TestEnum>, org.capnproto.EnumList.Reader<Test.TestEnum>>(new org.capnproto.EnumList.Factory<Test.TestEnum>(Test.TestEnum.values())), 11, value);
            }
            public final org.capnproto.ListList.Builder<org.capnproto.EnumList.Builder<Test.TestEnum>> initEnumListList(int size) {
                return _initPointerField(new org.capnproto.ListList.Factory<org.capnproto.EnumList.Builder<Test.TestEnum>, org.capnproto.EnumList.Reader<Test.TestEnum>>(new org.capnproto.EnumList.Factory<Test.TestEnum>(Test.TestEnum.values())), 11, size);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final boolean hasList0() {
                return !_pointerFieldIsNull(0);
            }
            public final org.capnproto.StructList.Reader<Test.TestLists.Struct0.Reader> getList0() {
                return _getPointerField(Test.TestLists.Struct0.listFactory, 0, null, 0);
            }

            public final boolean hasList1() {
                return !_pointerFieldIsNull(1);
            }
            public final org.capnproto.StructList.Reader<Test.TestLists.Struct1.Reader> getList1() {
                return _getPointerField(Test.TestLists.Struct1.listFactory, 1, null, 0);
            }

            public final boolean hasList8() {
                return !_pointerFieldIsNull(2);
            }
            public final org.capnproto.StructList.Reader<Test.TestLists.Struct8.Reader> getList8() {
                return _getPointerField(Test.TestLists.Struct8.listFactory, 2, null, 0);
            }

            public final boolean hasList16() {
                return !_pointerFieldIsNull(3);
            }
            public final org.capnproto.StructList.Reader<Test.TestLists.Struct16.Reader> getList16() {
                return _getPointerField(Test.TestLists.Struct16.listFactory, 3, null, 0);
            }

            public final boolean hasList32() {
                return !_pointerFieldIsNull(4);
            }
            public final org.capnproto.StructList.Reader<Test.TestLists.Struct32.Reader> getList32() {
                return _getPointerField(Test.TestLists.Struct32.listFactory, 4, null, 0);
            }

            public final boolean hasList64() {
                return !_pointerFieldIsNull(5);
            }
            public final org.capnproto.StructList.Reader<Test.TestLists.Struct64.Reader> getList64() {
                return _getPointerField(Test.TestLists.Struct64.listFactory, 5, null, 0);
            }

            public final boolean hasListP() {
                return !_pointerFieldIsNull(6);
            }
            public final org.capnproto.StructList.Reader<Test.TestLists.StructP.Reader> getListP() {
                return _getPointerField(Test.TestLists.StructP.listFactory, 6, null, 0);
            }

            public final boolean hasInt32ListList() {
                return !_pointerFieldIsNull(7);
            }
            public final org.capnproto.ListList.Reader<org.capnproto.PrimitiveList.Int.Reader> getInt32ListList() {
                return _getPointerField(new org.capnproto.ListList.Factory<org.capnproto.PrimitiveList.Int.Builder, org.capnproto.PrimitiveList.Int.Reader>(org.capnproto.PrimitiveList.Int.factory), 7, null, 0);
            }

            public final boolean hasTextListList() {
                return !_pointerFieldIsNull(8);
            }
            public final org.capnproto.ListList.Reader<org.capnproto.TextList.Reader> getTextListList() {
                return _getPointerField(new org.capnproto.ListList.Factory<org.capnproto.TextList.Builder, org.capnproto.TextList.Reader>(org.capnproto.TextList.factory), 8, null, 0);
            }

            public final boolean hasStructListList() {
                return !_pointerFieldIsNull(9);
            }
            public final org.capnproto.ListList.Reader<org.capnproto.StructList.Reader<Test.TestAllTypes.Reader>> getStructListList() {
                return _getPointerField(new org.capnproto.ListList.Factory<org.capnproto.StructList.Builder<Test.TestAllTypes.Builder>, org.capnproto.StructList.Reader<Test.TestAllTypes.Reader>>(Test.TestAllTypes.listFactory), 9, null, 0);
            }

            public final boolean hasBoolListListList() {
                return !_pointerFieldIsNull(10);
            }
            public final org.capnproto.ListList.Reader<org.capnproto.ListList.Reader<org.capnproto.PrimitiveList.Boolean.Reader>> getBoolListListList() {
                return _getPointerField(new org.capnproto.ListList.Factory<org.capnproto.ListList.Builder<org.capnproto.PrimitiveList.Boolean.Builder>, org.capnproto.ListList.Reader<org.capnproto.PrimitiveList.Boolean.Reader>>(new org.capnproto.ListList.Factory<org.capnproto.PrimitiveList.Boolean.Builder, org.capnproto.PrimitiveList.Boolean.Reader>(org.capnproto.PrimitiveList.Boolean.factory)), 10, null, 0);
            }

            public final boolean hasEnumListList() {
                return !_pointerFieldIsNull(11);
            }
            public final org.capnproto.ListList.Reader<org.capnproto.EnumList.Reader<Test.TestEnum>> getEnumListList() {
                return _getPointerField(new org.capnproto.ListList.Factory<org.capnproto.EnumList.Builder<Test.TestEnum>, org.capnproto.EnumList.Reader<Test.TestEnum>>(new org.capnproto.EnumList.Factory<Test.TestEnum>(Test.TestEnum.values())), 11, null, 0);
            }

        }

        public static class Struct0 {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestLists.Struct0.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final org.capnproto.Void getF() {
                    return org.capnproto.Void.VOID;
                }
                public final void setF(org.capnproto.Void value) {
                }

            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final org.capnproto.Void getF() {
                    return org.capnproto.Void.VOID;
                }

            }

        }


        public static class Struct1 {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestLists.Struct1.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final boolean getF() {
                    return _getBooleanField(0);
                }
                public final void setF(boolean value) {
                    _setBooleanField(0, value);
                }

            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final boolean getF() {
                    return _getBooleanField(0);
                }

            }

        }


        public static class Struct8 {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestLists.Struct8.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final byte getF() {
                    return _getByteField(0);
                }
                public final void setF(byte value) {
                    _setByteField(0, value);
                }

            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final byte getF() {
                    return _getByteField(0);
                }

            }

        }


        public static class Struct16 {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestLists.Struct16.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final short getF() {
                    return _getShortField(0);
                }
                public final void setF(short value) {
                    _setShortField(0, value);
                }

            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final short getF() {
                    return _getShortField(0);
                }

            }

        }


        public static class Struct32 {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestLists.Struct32.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final int getF() {
                    return _getIntField(0);
                }
                public final void setF(int value) {
                    _setIntField(0, value);
                }

            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final int getF() {
                    return _getIntField(0);
                }

            }

        }


        public static class Struct64 {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestLists.Struct64.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final long getF() {
                    return _getLongField(0);
                }
                public final void setF(long value) {
                    _setLongField(0, value);
                }

            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final long getF() {
                    return _getLongField(0);
                }

            }

        }


        public static class StructP {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestLists.StructP.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final boolean hasF() {
                    return !_pointerFieldIsNull(0);
                }
                public final org.capnproto.Text.Builder getF() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }
                public final void setF(org.capnproto.Text.Reader value) {
                    _setPointerField(org.capnproto.Text.factory, 0, value);
                }
                public final void setF(String value) {
                    _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
                }
                public final org.capnproto.Text.Builder initF(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 0, size);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public boolean hasF() {
                    return !_pointerFieldIsNull(0);
                }
                public org.capnproto.Text.Reader getF() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }

            }

        }


        public static class Struct0c {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestLists.Struct0c.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final org.capnproto.Void getF() {
                    return org.capnproto.Void.VOID;
                }
                public final void setF(org.capnproto.Void value) {
                }

                public final boolean hasPad() {
                    return !_pointerFieldIsNull(0);
                }
                public final org.capnproto.Text.Builder getPad() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }
                public final void setPad(org.capnproto.Text.Reader value) {
                    _setPointerField(org.capnproto.Text.factory, 0, value);
                }
                public final void setPad(String value) {
                    _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
                }
                public final org.capnproto.Text.Builder initPad(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 0, size);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final org.capnproto.Void getF() {
                    return org.capnproto.Void.VOID;
                }

                public boolean hasPad() {
                    return !_pointerFieldIsNull(0);
                }
                public org.capnproto.Text.Reader getPad() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }

            }

        }


        public static class Struct1c {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestLists.Struct1c.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final boolean getF() {
                    return _getBooleanField(0);
                }
                public final void setF(boolean value) {
                    _setBooleanField(0, value);
                }

                public final boolean hasPad() {
                    return !_pointerFieldIsNull(0);
                }
                public final org.capnproto.Text.Builder getPad() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }
                public final void setPad(org.capnproto.Text.Reader value) {
                    _setPointerField(org.capnproto.Text.factory, 0, value);
                }
                public final void setPad(String value) {
                    _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
                }
                public final org.capnproto.Text.Builder initPad(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 0, size);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final boolean getF() {
                    return _getBooleanField(0);
                }

                public boolean hasPad() {
                    return !_pointerFieldIsNull(0);
                }
                public org.capnproto.Text.Reader getPad() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }

            }

        }


        public static class Struct8c {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestLists.Struct8c.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final byte getF() {
                    return _getByteField(0);
                }
                public final void setF(byte value) {
                    _setByteField(0, value);
                }

                public final boolean hasPad() {
                    return !_pointerFieldIsNull(0);
                }
                public final org.capnproto.Text.Builder getPad() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }
                public final void setPad(org.capnproto.Text.Reader value) {
                    _setPointerField(org.capnproto.Text.factory, 0, value);
                }
                public final void setPad(String value) {
                    _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
                }
                public final org.capnproto.Text.Builder initPad(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 0, size);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final byte getF() {
                    return _getByteField(0);
                }

                public boolean hasPad() {
                    return !_pointerFieldIsNull(0);
                }
                public org.capnproto.Text.Reader getPad() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }

            }

        }


        public static class Struct16c {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestLists.Struct16c.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final short getF() {
                    return _getShortField(0);
                }
                public final void setF(short value) {
                    _setShortField(0, value);
                }

                public final boolean hasPad() {
                    return !_pointerFieldIsNull(0);
                }
                public final org.capnproto.Text.Builder getPad() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }
                public final void setPad(org.capnproto.Text.Reader value) {
                    _setPointerField(org.capnproto.Text.factory, 0, value);
                }
                public final void setPad(String value) {
                    _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
                }
                public final org.capnproto.Text.Builder initPad(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 0, size);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final short getF() {
                    return _getShortField(0);
                }

                public boolean hasPad() {
                    return !_pointerFieldIsNull(0);
                }
                public org.capnproto.Text.Reader getPad() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }

            }

        }


        public static class Struct32c {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestLists.Struct32c.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final int getF() {
                    return _getIntField(0);
                }
                public final void setF(int value) {
                    _setIntField(0, value);
                }

                public final boolean hasPad() {
                    return !_pointerFieldIsNull(0);
                }
                public final org.capnproto.Text.Builder getPad() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }
                public final void setPad(org.capnproto.Text.Reader value) {
                    _setPointerField(org.capnproto.Text.factory, 0, value);
                }
                public final void setPad(String value) {
                    _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
                }
                public final org.capnproto.Text.Builder initPad(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 0, size);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final int getF() {
                    return _getIntField(0);
                }

                public boolean hasPad() {
                    return !_pointerFieldIsNull(0);
                }
                public org.capnproto.Text.Reader getPad() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }

            }

        }


        public static class Struct64c {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestLists.Struct64c.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final long getF() {
                    return _getLongField(0);
                }
                public final void setF(long value) {
                    _setLongField(0, value);
                }

                public final boolean hasPad() {
                    return !_pointerFieldIsNull(0);
                }
                public final org.capnproto.Text.Builder getPad() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }
                public final void setPad(org.capnproto.Text.Reader value) {
                    _setPointerField(org.capnproto.Text.factory, 0, value);
                }
                public final void setPad(String value) {
                    _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
                }
                public final org.capnproto.Text.Builder initPad(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 0, size);
                }
            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public final long getF() {
                    return _getLongField(0);
                }

                public boolean hasPad() {
                    return !_pointerFieldIsNull(0);
                }
                public org.capnproto.Text.Reader getPad() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }

            }

        }


        public static class StructPc {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
            public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
                public Factory() {
                }
                public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder(segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestLists.StructPc.STRUCT_SIZE;
                }
                public final Reader asReader(Builder builder) {
                    return builder.asReader();
                }
            }
            public static final Factory factory = new Factory();
            public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                    new org.capnproto.StructList.Factory<Builder, Reader>(factory);
            public static final class Builder extends org.capnproto.StructBuilder {
                Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                }
                public final Reader asReader() {
                    return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final boolean hasF() {
                    return !_pointerFieldIsNull(0);
                }
                public final org.capnproto.Text.Builder getF() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }
                public final void setF(org.capnproto.Text.Reader value) {
                    _setPointerField(org.capnproto.Text.factory, 0, value);
                }
                public final void setF(String value) {
                    _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
                }
                public final org.capnproto.Text.Builder initF(int size) {
                    return _initPointerField(org.capnproto.Text.factory, 0, size);
                }
                public final long getPad() {
                    return _getLongField(0);
                }
                public final void setPad(long value) {
                    _setLongField(0, value);
                }

            }

            public static final class Reader extends org.capnproto.StructReader {
                Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                }

                public boolean hasF() {
                    return !_pointerFieldIsNull(0);
                }
                public org.capnproto.Text.Reader getF() {
                    return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
                }

                public final long getPad() {
                    return _getLongField(0);
                }

            }

        }


    }


    public static class TestFieldZeroIsBit {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }
            public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
                return TestFieldZeroIsBit.STRUCT_SIZE;
            }
            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                super(segment, data, pointers, dataSize, pointerCount);
            }
            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
            public final boolean getBit() {
                return _getBooleanField(0);
            }
            public final void setBit(boolean value) {
                _setBooleanField(0, value);
            }

            public final boolean getSecondBit() {
                return _getBooleanField(1, (boolean)true);
            }
            public final void setSecondBit(boolean value) {
                _setBooleanField(1, value, (boolean)true);
            }

            public final byte getThirdField() {
                return _getByteField(1, (byte)123);
            }
            public final void setThirdField(byte value) {
                _setByteField(1, value, (byte)123);
            }

        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final boolean getBit() {
                return _getBooleanField(0);
            }

            public final boolean getSecondBit() {
                return _getBooleanField(1, (boolean)true);
            }

            public final byte getThirdField() {
                return _getByteField(1, (byte)123);
            }

        }

    }


    public static class TestOldVersion {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }
            public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
                return TestOldVersion.STRUCT_SIZE;
            }
            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                super(segment, data, pointers, dataSize, pointerCount);
            }
            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
            public final long getOld1() {
                return _getLongField(0);
            }
            public final void setOld1(long value) {
                _setLongField(0, value);
            }

            public final boolean hasOld2() {
                return !_pointerFieldIsNull(0);
            }
            public final org.capnproto.Text.Builder getOld2() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }
            public final void setOld2(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 0, value);
            }
            public final void setOld2(String value) {
                _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
            }
            public final org.capnproto.Text.Builder initOld2(int size) {
                return _initPointerField(org.capnproto.Text.factory, 0, size);
            }
            public final Test.TestOldVersion.Builder getOld3() {
                return _getPointerField(Test.TestOldVersion.factory, 1, null, 0);
            }
            public final void setOld3(Test.TestOldVersion.Reader value) {
                _setPointerField(Test.TestOldVersion.factory,1, value);
            }
            public final Test.TestOldVersion.Builder initOld3() {
                return _initPointerField(Test.TestOldVersion.factory,1, 0);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final long getOld1() {
                return _getLongField(0);
            }

            public boolean hasOld2() {
                return !_pointerFieldIsNull(0);
            }
            public org.capnproto.Text.Reader getOld2() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public boolean hasOld3() {
                return !_pointerFieldIsNull(1);
            }
            public Test.TestOldVersion.Reader getOld3() {
                return _getPointerField(Test.TestOldVersion.factory,1,null, 0);
            }

        }

    }


    public static class TestNewVersion {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)3);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }
            public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
                return TestNewVersion.STRUCT_SIZE;
            }
            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                super(segment, data, pointers, dataSize, pointerCount);
            }
            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
            public final long getOld1() {
                return _getLongField(0);
            }
            public final void setOld1(long value) {
                _setLongField(0, value);
            }

            public final boolean hasOld2() {
                return !_pointerFieldIsNull(0);
            }
            public final org.capnproto.Text.Builder getOld2() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }
            public final void setOld2(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 0, value);
            }
            public final void setOld2(String value) {
                _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
            }
            public final org.capnproto.Text.Builder initOld2(int size) {
                return _initPointerField(org.capnproto.Text.factory, 0, size);
            }
            public final Test.TestNewVersion.Builder getOld3() {
                return _getPointerField(Test.TestNewVersion.factory, 1, null, 0);
            }
            public final void setOld3(Test.TestNewVersion.Reader value) {
                _setPointerField(Test.TestNewVersion.factory,1, value);
            }
            public final Test.TestNewVersion.Builder initOld3() {
                return _initPointerField(Test.TestNewVersion.factory,1, 0);
            }
            public final long getNew1() {
                return _getLongField(1, (long)987L);
            }
            public final void setNew1(long value) {
                _setLongField(1, value, (long)987L);
            }

            public final boolean hasNew2() {
                return !_pointerFieldIsNull(2);
            }
            public final org.capnproto.Text.Builder getNew2() {
                return _getPointerField(org.capnproto.Text.factory, 2, Schemas.b_b8891e9f3d7630e0.buffer, 93, 3);
            }
            public final void setNew2(org.capnproto.Text.Reader value) {
                _setPointerField(org.capnproto.Text.factory, 2, value);
            }
            public final void setNew2(String value) {
                _setPointerField(org.capnproto.Text.factory, 2, new org.capnproto.Text.Reader(value));
            }
            public final org.capnproto.Text.Builder initNew2(int size) {
                return _initPointerField(org.capnproto.Text.factory, 2, size);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public final long getOld1() {
                return _getLongField(0);
            }

            public boolean hasOld2() {
                return !_pointerFieldIsNull(0);
            }
            public org.capnproto.Text.Reader getOld2() {
                return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
            }

            public boolean hasOld3() {
                return !_pointerFieldIsNull(1);
            }
            public Test.TestNewVersion.Reader getOld3() {
                return _getPointerField(Test.TestNewVersion.factory,1,null, 0);
            }

            public final long getNew1() {
                return _getLongField(1, (long)987L);
            }

            public boolean hasNew2() {
                return !_pointerFieldIsNull(2);
            }
            public org.capnproto.Text.Reader getNew2() {
                return _getPointerField(org.capnproto.Text.factory, 2, Schemas.b_b8891e9f3d7630e0.buffer, 93, 3);
            }

        }

    }


    public static class TestGenerics {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)4);
        public static final class Factory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader> extends org.capnproto.StructFactory<Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder>, Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader>> {
            final org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory;
            final org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory;
            public Factory(org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory, org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory) {
                this.Foo_b32d3ef2e630cc9e_Factory = Foo_b32d3ef2e630cc9e_Factory;
                this.Bar_b32d3ef2e630cc9e_Factory = Bar_b32d3ef2e630cc9e_Factory;
            }
            public final Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader> constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader>(Foo_b32d3ef2e630cc9e_Factory, Bar_b32d3ef2e630cc9e_Factory, segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder> constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                return new Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder>(Foo_b32d3ef2e630cc9e_Factory, Bar_b32d3ef2e630cc9e_Factory, segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
                return TestGenerics.STRUCT_SIZE;
            }
            public final Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader> asReader(Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder> builder) {
                return builder.asReader(this);
            }
        }
        public static final <Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader>Factory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader>
        newFactory(org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory, org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory){
            return new Factory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader>(Foo_b32d3ef2e630cc9e_Factory, Bar_b32d3ef2e630cc9e_Factory);
        }
        public static final class Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder> extends org.capnproto.StructBuilder {
            final org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, ?> Foo_b32d3ef2e630cc9e_Factory;
            final org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, ?> Bar_b32d3ef2e630cc9e_Factory;
            Builder(org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, ?> Foo_b32d3ef2e630cc9e_Factory,org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, ?> Bar_b32d3ef2e630cc9e_Factory,org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                super(segment, data, pointers, dataSize, pointerCount);
                this.Foo_b32d3ef2e630cc9e_Factory = Foo_b32d3ef2e630cc9e_Factory;
                this.Bar_b32d3ef2e630cc9e_Factory = Bar_b32d3ef2e630cc9e_Factory;
            }
            public final <Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader>Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader> asReader(TestGenerics.Factory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader> factory) {
                return new Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader>(factory.Foo_b32d3ef2e630cc9e_Factory, factory.Bar_b32d3ef2e630cc9e_Factory, segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
            public final boolean hasFoo() {
                return !_pointerFieldIsNull(0);
            }
            public Foo_b32d3ef2e630cc9e_Builder getFoo() {
                return _getPointerField(Foo_b32d3ef2e630cc9e_Factory, 0);
            }
            public Foo_b32d3ef2e630cc9e_Builder initFoo() {
                return _initPointerField(Foo_b32d3ef2e630cc9e_Factory, 0, 0);
            }
            public Foo_b32d3ef2e630cc9e_Builder initFoo(int size) {
                return _initPointerField(Foo_b32d3ef2e630cc9e_Factory, 0, size);
            }
            public <Foo_b32d3ef2e630cc9e_Reader> void setFoo(org.capnproto.SetPointerBuilder<Foo_b32d3ef2e630cc9e_Builder,Foo_b32d3ef2e630cc9e_Reader> factory,Foo_b32d3ef2e630cc9e_Reader value) {
                _setPointerField(factory, 0, value);
            }

            public final boolean hasBar() {
                return !_pointerFieldIsNull(1);
            }
            public Bar_b32d3ef2e630cc9e_Builder getBar() {
                return _getPointerField(Bar_b32d3ef2e630cc9e_Factory, 1);
            }
            public Bar_b32d3ef2e630cc9e_Builder initBar() {
                return _initPointerField(Bar_b32d3ef2e630cc9e_Factory, 1, 0);
            }
            public Bar_b32d3ef2e630cc9e_Builder initBar(int size) {
                return _initPointerField(Bar_b32d3ef2e630cc9e_Factory, 1, size);
            }
            public <Bar_b32d3ef2e630cc9e_Reader> void setBar(org.capnproto.SetPointerBuilder<Bar_b32d3ef2e630cc9e_Builder,Bar_b32d3ef2e630cc9e_Reader> factory,Bar_b32d3ef2e630cc9e_Reader value) {
                _setPointerField(factory, 1, value);
            }

            public final Test.TestGenerics.Builder<Bar_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Builder> getRev() {
                return _getPointerField(Test.TestGenerics.newFactory(Bar_b32d3ef2e630cc9e_Factory,Foo_b32d3ef2e630cc9e_Factory), 2, null, 0);
            }
            public final <Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader> void setRev(org.capnproto.SetPointerBuilder<Test.TestGenerics.Builder<Bar_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Builder>, Test.TestGenerics.Reader<Bar_b32d3ef2e630cc9e_Reader, Foo_b32d3ef2e630cc9e_Reader>> factory, Test.TestGenerics.Reader<Bar_b32d3ef2e630cc9e_Reader, Foo_b32d3ef2e630cc9e_Reader> value) {
                _setPointerField(factory, 2, value);
            }
            public final Test.TestGenerics.Builder<Bar_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Builder> initRev() {
                return _initPointerField(Test.TestGenerics.newFactory(Bar_b32d3ef2e630cc9e_Factory,Foo_b32d3ef2e630cc9e_Factory),2, 0);
            }
            public final Test.TestGenerics.Builder<org.capnproto.Text.Builder, org.capnproto.PrimitiveList.Byte.Builder> getDub() {
                return _getPointerField(Test.TestGenerics.newFactory(org.capnproto.Text.factory,org.capnproto.PrimitiveList.Byte.factory), 3, null, 0);
            }
            public final <Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader> void setDub(org.capnproto.SetPointerBuilder<Test.TestGenerics.Builder<org.capnproto.Text.Builder, org.capnproto.PrimitiveList.Byte.Builder>, Test.TestGenerics.Reader<org.capnproto.Text.Reader, org.capnproto.PrimitiveList.Byte.Reader>> factory, Test.TestGenerics.Reader<org.capnproto.Text.Reader, org.capnproto.PrimitiveList.Byte.Reader> value) {
                _setPointerField(factory, 3, value);
            }
            public final Test.TestGenerics.Builder<org.capnproto.Text.Builder, org.capnproto.PrimitiveList.Byte.Builder> initDub() {
                return _initPointerField(Test.TestGenerics.newFactory(org.capnproto.Text.factory,org.capnproto.PrimitiveList.Byte.factory),3, 0);
            }
        }

        public static final class Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader> extends org.capnproto.StructReader {
            final org.capnproto.PointerFactory<?,Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory;
            final org.capnproto.PointerFactory<?,Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory;
            Reader(org.capnproto.PointerFactory<?,Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory,org.capnproto.PointerFactory<?,Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory,org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                this.Foo_b32d3ef2e630cc9e_Factory = Foo_b32d3ef2e630cc9e_Factory;
                this.Bar_b32d3ef2e630cc9e_Factory = Bar_b32d3ef2e630cc9e_Factory;
            }

            public boolean hasFoo() {
                return !_pointerFieldIsNull(0);
            }
            public Foo_b32d3ef2e630cc9e_Reader getFoo() {
                return _getPointerField(Foo_b32d3ef2e630cc9e_Factory, 0);
            }
            public boolean hasBar() {
                return !_pointerFieldIsNull(1);
            }
            public Bar_b32d3ef2e630cc9e_Reader getBar() {
                return _getPointerField(Bar_b32d3ef2e630cc9e_Factory, 1);
            }
            public boolean hasRev() {
                return !_pointerFieldIsNull(2);
            }
            public Test.TestGenerics.Reader<Bar_b32d3ef2e630cc9e_Reader, Foo_b32d3ef2e630cc9e_Reader> getRev() {
                return _getPointerField(Test.TestGenerics.newFactory(Bar_b32d3ef2e630cc9e_Factory,Foo_b32d3ef2e630cc9e_Factory),2,null, 0);
            }

            public boolean hasDub() {
                return !_pointerFieldIsNull(3);
            }
            public Test.TestGenerics.Reader<org.capnproto.Text.Reader, org.capnproto.PrimitiveList.Byte.Reader> getDub() {
                return _getPointerField(Test.TestGenerics.newFactory(org.capnproto.Text.factory,org.capnproto.PrimitiveList.Byte.factory),3,null, 0);
            }

        }

        public static class Inner {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
            public static final class Factory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader> extends org.capnproto.StructFactory<Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder>, Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader>> {
                final org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory;
                final org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory;
                public Factory(org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory, org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory) {
                    this.Foo_b32d3ef2e630cc9e_Factory = Foo_b32d3ef2e630cc9e_Factory;
                    this.Bar_b32d3ef2e630cc9e_Factory = Bar_b32d3ef2e630cc9e_Factory;
                }
                public final Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader> constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader>(Foo_b32d3ef2e630cc9e_Factory, Bar_b32d3ef2e630cc9e_Factory, segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder> constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder>(Foo_b32d3ef2e630cc9e_Factory, Bar_b32d3ef2e630cc9e_Factory, segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestGenerics.Inner.STRUCT_SIZE;
                }
                public final Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader> asReader(Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder> builder) {
                    return builder.asReader(this);
                }
            }
            public static final <Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader>Factory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader>
            newFactory(org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory, org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory){
                return new Factory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader>(Foo_b32d3ef2e630cc9e_Factory, Bar_b32d3ef2e630cc9e_Factory);
            }
            public static final class Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder> extends org.capnproto.StructBuilder {
                final org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, ?> Foo_b32d3ef2e630cc9e_Factory;
                final org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, ?> Bar_b32d3ef2e630cc9e_Factory;
                Builder(org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, ?> Foo_b32d3ef2e630cc9e_Factory,org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, ?> Bar_b32d3ef2e630cc9e_Factory,org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                    this.Foo_b32d3ef2e630cc9e_Factory = Foo_b32d3ef2e630cc9e_Factory;
                    this.Bar_b32d3ef2e630cc9e_Factory = Bar_b32d3ef2e630cc9e_Factory;
                }
                public final <Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader>Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader> asReader(Inner.Factory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader> factory) {
                    return new Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader>(factory.Foo_b32d3ef2e630cc9e_Factory, factory.Bar_b32d3ef2e630cc9e_Factory, segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final boolean hasFoo() {
                    return !_pointerFieldIsNull(0);
                }
                public Foo_b32d3ef2e630cc9e_Builder getFoo() {
                    return _getPointerField(Foo_b32d3ef2e630cc9e_Factory, 0);
                }
                public Foo_b32d3ef2e630cc9e_Builder initFoo() {
                    return _initPointerField(Foo_b32d3ef2e630cc9e_Factory, 0, 0);
                }
                public Foo_b32d3ef2e630cc9e_Builder initFoo(int size) {
                    return _initPointerField(Foo_b32d3ef2e630cc9e_Factory, 0, size);
                }
                public <Foo_b32d3ef2e630cc9e_Reader> void setFoo(org.capnproto.SetPointerBuilder<Foo_b32d3ef2e630cc9e_Builder,Foo_b32d3ef2e630cc9e_Reader> factory,Foo_b32d3ef2e630cc9e_Reader value) {
                    _setPointerField(factory, 0, value);
                }

                public final boolean hasBar() {
                    return !_pointerFieldIsNull(1);
                }
                public Bar_b32d3ef2e630cc9e_Builder getBar() {
                    return _getPointerField(Bar_b32d3ef2e630cc9e_Factory, 1);
                }
                public Bar_b32d3ef2e630cc9e_Builder initBar() {
                    return _initPointerField(Bar_b32d3ef2e630cc9e_Factory, 1, 0);
                }
                public Bar_b32d3ef2e630cc9e_Builder initBar(int size) {
                    return _initPointerField(Bar_b32d3ef2e630cc9e_Factory, 1, size);
                }
                public <Bar_b32d3ef2e630cc9e_Reader> void setBar(org.capnproto.SetPointerBuilder<Bar_b32d3ef2e630cc9e_Builder,Bar_b32d3ef2e630cc9e_Reader> factory,Bar_b32d3ef2e630cc9e_Reader value) {
                    _setPointerField(factory, 1, value);
                }

            }

            public static final class Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader> extends org.capnproto.StructReader {
                final org.capnproto.PointerFactory<?,Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory;
                final org.capnproto.PointerFactory<?,Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory;
                Reader(org.capnproto.PointerFactory<?,Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory,org.capnproto.PointerFactory<?,Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory,org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                    this.Foo_b32d3ef2e630cc9e_Factory = Foo_b32d3ef2e630cc9e_Factory;
                    this.Bar_b32d3ef2e630cc9e_Factory = Bar_b32d3ef2e630cc9e_Factory;
                }

                public boolean hasFoo() {
                    return !_pointerFieldIsNull(0);
                }
                public Foo_b32d3ef2e630cc9e_Reader getFoo() {
                    return _getPointerField(Foo_b32d3ef2e630cc9e_Factory, 0);
                }
                public boolean hasBar() {
                    return !_pointerFieldIsNull(1);
                }
                public Bar_b32d3ef2e630cc9e_Reader getBar() {
                    return _getPointerField(Bar_b32d3ef2e630cc9e_Factory, 1);
                }
            }

        }


        public static class Inner2 {
            public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)4);
            public static final class Factory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Builder, Baz_b7ac6330b5b1b391_Reader> extends org.capnproto.StructFactory<Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder, Baz_b7ac6330b5b1b391_Builder>, Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader>> {
                final org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory;
                final org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory;
                final org.capnproto.PointerFactory<Baz_b7ac6330b5b1b391_Builder, Baz_b7ac6330b5b1b391_Reader> Baz_b7ac6330b5b1b391_Factory;
                public Factory(org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory, org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory, org.capnproto.PointerFactory<Baz_b7ac6330b5b1b391_Builder, Baz_b7ac6330b5b1b391_Reader> Baz_b7ac6330b5b1b391_Factory) {
                    this.Foo_b32d3ef2e630cc9e_Factory = Foo_b32d3ef2e630cc9e_Factory;
                    this.Bar_b32d3ef2e630cc9e_Factory = Bar_b32d3ef2e630cc9e_Factory;
                    this.Baz_b7ac6330b5b1b391_Factory = Baz_b7ac6330b5b1b391_Factory;
                }
                public final Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader> constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                    return new Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader>(Foo_b32d3ef2e630cc9e_Factory, Bar_b32d3ef2e630cc9e_Factory, Baz_b7ac6330b5b1b391_Factory, segment,data,pointers,dataSize,pointerCount,nestingLimit);
                }
                public final Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder, Baz_b7ac6330b5b1b391_Builder> constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                    return new Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder, Baz_b7ac6330b5b1b391_Builder>(Foo_b32d3ef2e630cc9e_Factory, Bar_b32d3ef2e630cc9e_Factory, Baz_b7ac6330b5b1b391_Factory, segment, data, pointers, dataSize, pointerCount);
                }
                public final org.capnproto.StructSize structSize() {
                    return TestGenerics.Inner2.STRUCT_SIZE;
                }
                public final Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader> asReader(Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder, Baz_b7ac6330b5b1b391_Builder> builder) {
                    return builder.asReader(this);
                }
            }
            public static final <Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Builder, Baz_b7ac6330b5b1b391_Reader>Factory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Builder, Baz_b7ac6330b5b1b391_Reader>
            newFactory(org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory, org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory, org.capnproto.PointerFactory<Baz_b7ac6330b5b1b391_Builder, Baz_b7ac6330b5b1b391_Reader> Baz_b7ac6330b5b1b391_Factory){
                return new Factory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Builder, Baz_b7ac6330b5b1b391_Reader>(Foo_b32d3ef2e630cc9e_Factory, Bar_b32d3ef2e630cc9e_Factory, Baz_b7ac6330b5b1b391_Factory);
            }
            public static final class Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder, Baz_b7ac6330b5b1b391_Builder> extends org.capnproto.StructBuilder {
                final org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, ?> Foo_b32d3ef2e630cc9e_Factory;
                final org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, ?> Bar_b32d3ef2e630cc9e_Factory;
                final org.capnproto.PointerFactory<Baz_b7ac6330b5b1b391_Builder, ?> Baz_b7ac6330b5b1b391_Factory;
                Builder(org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, ?> Foo_b32d3ef2e630cc9e_Factory,org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, ?> Bar_b32d3ef2e630cc9e_Factory,org.capnproto.PointerFactory<Baz_b7ac6330b5b1b391_Builder, ?> Baz_b7ac6330b5b1b391_Factory,org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                    super(segment, data, pointers, dataSize, pointerCount);
                    this.Foo_b32d3ef2e630cc9e_Factory = Foo_b32d3ef2e630cc9e_Factory;
                    this.Bar_b32d3ef2e630cc9e_Factory = Bar_b32d3ef2e630cc9e_Factory;
                    this.Baz_b7ac6330b5b1b391_Factory = Baz_b7ac6330b5b1b391_Factory;
                }
                public final <Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader>Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader> asReader(Inner2.Factory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Builder, Baz_b7ac6330b5b1b391_Reader> factory) {
                    return new Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader>(factory.Foo_b32d3ef2e630cc9e_Factory, factory.Bar_b32d3ef2e630cc9e_Factory, factory.Baz_b7ac6330b5b1b391_Factory, segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                }
                public final boolean hasBar() {
                    return !_pointerFieldIsNull(0);
                }
                public Bar_b32d3ef2e630cc9e_Builder getBar() {
                    return _getPointerField(Bar_b32d3ef2e630cc9e_Factory, 0);
                }
                public Bar_b32d3ef2e630cc9e_Builder initBar() {
                    return _initPointerField(Bar_b32d3ef2e630cc9e_Factory, 0, 0);
                }
                public Bar_b32d3ef2e630cc9e_Builder initBar(int size) {
                    return _initPointerField(Bar_b32d3ef2e630cc9e_Factory, 0, size);
                }
                public <Bar_b32d3ef2e630cc9e_Reader> void setBar(org.capnproto.SetPointerBuilder<Bar_b32d3ef2e630cc9e_Builder,Bar_b32d3ef2e630cc9e_Reader> factory,Bar_b32d3ef2e630cc9e_Reader value) {
                    _setPointerField(factory, 0, value);
                }

                public final boolean hasBaz() {
                    return !_pointerFieldIsNull(1);
                }
                public Baz_b7ac6330b5b1b391_Builder getBaz() {
                    return _getPointerField(Baz_b7ac6330b5b1b391_Factory, 1);
                }
                public Baz_b7ac6330b5b1b391_Builder initBaz() {
                    return _initPointerField(Baz_b7ac6330b5b1b391_Factory, 1, 0);
                }
                public Baz_b7ac6330b5b1b391_Builder initBaz(int size) {
                    return _initPointerField(Baz_b7ac6330b5b1b391_Factory, 1, size);
                }
                public <Baz_b7ac6330b5b1b391_Reader> void setBaz(org.capnproto.SetPointerBuilder<Baz_b7ac6330b5b1b391_Builder,Baz_b7ac6330b5b1b391_Reader> factory,Baz_b7ac6330b5b1b391_Reader value) {
                    _setPointerField(factory, 1, value);
                }

                public final Test.TestGenerics.Inner.Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder> getInnerBound() {
                    return _getPointerField(Test.TestGenerics.Inner.newFactory(Foo_b32d3ef2e630cc9e_Factory,Bar_b32d3ef2e630cc9e_Factory), 2, null, 0);
                }
                public final <Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader> void setInnerBound(org.capnproto.SetPointerBuilder<Test.TestGenerics.Inner.Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder>, Test.TestGenerics.Inner.Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader>> factory, Test.TestGenerics.Inner.Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader> value) {
                    _setPointerField(factory, 2, value);
                }
                public final Test.TestGenerics.Inner.Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder> initInnerBound() {
                    return _initPointerField(Test.TestGenerics.Inner.newFactory(Foo_b32d3ef2e630cc9e_Factory,Bar_b32d3ef2e630cc9e_Factory),2, 0);
                }
                public final Test.TestGenerics.Inner.Builder<org.capnproto.AnyPointer.Builder, org.capnproto.AnyPointer.Builder> getInnerUnbound() {
                    return _getPointerField(Test.TestGenerics.Inner.newFactory(org.capnproto.AnyPointer.factory,org.capnproto.AnyPointer.factory), 3, null, 0);
                }
                public final <Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader> void setInnerUnbound(org.capnproto.SetPointerBuilder<Test.TestGenerics.Inner.Builder<org.capnproto.AnyPointer.Builder, org.capnproto.AnyPointer.Builder>, Test.TestGenerics.Inner.Reader<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Reader>> factory, Test.TestGenerics.Inner.Reader<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Reader> value) {
                    _setPointerField(factory, 3, value);
                }
                public final Test.TestGenerics.Inner.Builder<org.capnproto.AnyPointer.Builder, org.capnproto.AnyPointer.Builder> initInnerUnbound() {
                    return _initPointerField(Test.TestGenerics.Inner.newFactory(org.capnproto.AnyPointer.factory,org.capnproto.AnyPointer.factory),3, 0);
                }
            }

            public static final class Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader> extends org.capnproto.StructReader {
                final org.capnproto.PointerFactory<?,Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory;
                final org.capnproto.PointerFactory<?,Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory;
                final org.capnproto.PointerFactory<?,Baz_b7ac6330b5b1b391_Reader> Baz_b7ac6330b5b1b391_Factory;
                Reader(org.capnproto.PointerFactory<?,Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory,org.capnproto.PointerFactory<?,Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory,org.capnproto.PointerFactory<?,Baz_b7ac6330b5b1b391_Reader> Baz_b7ac6330b5b1b391_Factory,org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                    super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                    this.Foo_b32d3ef2e630cc9e_Factory = Foo_b32d3ef2e630cc9e_Factory;
                    this.Bar_b32d3ef2e630cc9e_Factory = Bar_b32d3ef2e630cc9e_Factory;
                    this.Baz_b7ac6330b5b1b391_Factory = Baz_b7ac6330b5b1b391_Factory;
                }

                public boolean hasBar() {
                    return !_pointerFieldIsNull(0);
                }
                public Bar_b32d3ef2e630cc9e_Reader getBar() {
                    return _getPointerField(Bar_b32d3ef2e630cc9e_Factory, 0);
                }
                public boolean hasBaz() {
                    return !_pointerFieldIsNull(1);
                }
                public Baz_b7ac6330b5b1b391_Reader getBaz() {
                    return _getPointerField(Baz_b7ac6330b5b1b391_Factory, 1);
                }
                public boolean hasInnerBound() {
                    return !_pointerFieldIsNull(2);
                }
                public Test.TestGenerics.Inner.Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader> getInnerBound() {
                    return _getPointerField(Test.TestGenerics.Inner.newFactory(Foo_b32d3ef2e630cc9e_Factory,Bar_b32d3ef2e630cc9e_Factory),2,null, 0);
                }

                public boolean hasInnerUnbound() {
                    return !_pointerFieldIsNull(3);
                }
                public Test.TestGenerics.Inner.Reader<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Reader> getInnerUnbound() {
                    return _getPointerField(Test.TestGenerics.Inner.newFactory(org.capnproto.AnyPointer.factory,org.capnproto.AnyPointer.factory),3,null, 0);
                }

            }

            public static class DeepNest {
                public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)4);
                public static final class Factory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Builder, Baz_b7ac6330b5b1b391_Reader, Qux_b920a5d19b2fd8db_Builder, Qux_b920a5d19b2fd8db_Reader> extends org.capnproto.StructFactory<Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder, Baz_b7ac6330b5b1b391_Builder, Qux_b920a5d19b2fd8db_Builder>, Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader, Qux_b920a5d19b2fd8db_Reader>> {
                    final org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory;
                    final org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory;
                    final org.capnproto.PointerFactory<Baz_b7ac6330b5b1b391_Builder, Baz_b7ac6330b5b1b391_Reader> Baz_b7ac6330b5b1b391_Factory;
                    final org.capnproto.PointerFactory<Qux_b920a5d19b2fd8db_Builder, Qux_b920a5d19b2fd8db_Reader> Qux_b920a5d19b2fd8db_Factory;
                    public Factory(org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory, org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory, org.capnproto.PointerFactory<Baz_b7ac6330b5b1b391_Builder, Baz_b7ac6330b5b1b391_Reader> Baz_b7ac6330b5b1b391_Factory, org.capnproto.PointerFactory<Qux_b920a5d19b2fd8db_Builder, Qux_b920a5d19b2fd8db_Reader> Qux_b920a5d19b2fd8db_Factory) {
                        this.Foo_b32d3ef2e630cc9e_Factory = Foo_b32d3ef2e630cc9e_Factory;
                        this.Bar_b32d3ef2e630cc9e_Factory = Bar_b32d3ef2e630cc9e_Factory;
                        this.Baz_b7ac6330b5b1b391_Factory = Baz_b7ac6330b5b1b391_Factory;
                        this.Qux_b920a5d19b2fd8db_Factory = Qux_b920a5d19b2fd8db_Factory;
                    }
                    public final Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader, Qux_b920a5d19b2fd8db_Reader> constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                        return new Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader, Qux_b920a5d19b2fd8db_Reader>(Foo_b32d3ef2e630cc9e_Factory, Bar_b32d3ef2e630cc9e_Factory, Baz_b7ac6330b5b1b391_Factory, Qux_b920a5d19b2fd8db_Factory, segment,data,pointers,dataSize,pointerCount,nestingLimit);
                    }
                    public final Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder, Baz_b7ac6330b5b1b391_Builder, Qux_b920a5d19b2fd8db_Builder> constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                        return new Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder, Baz_b7ac6330b5b1b391_Builder, Qux_b920a5d19b2fd8db_Builder>(Foo_b32d3ef2e630cc9e_Factory, Bar_b32d3ef2e630cc9e_Factory, Baz_b7ac6330b5b1b391_Factory, Qux_b920a5d19b2fd8db_Factory, segment, data, pointers, dataSize, pointerCount);
                    }
                    public final org.capnproto.StructSize structSize() {
                        return TestGenerics.Inner2.DeepNest.STRUCT_SIZE;
                    }
                    public final Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader, Qux_b920a5d19b2fd8db_Reader> asReader(Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder, Baz_b7ac6330b5b1b391_Builder, Qux_b920a5d19b2fd8db_Builder> builder) {
                        return builder.asReader(this);
                    }
                }
                public static final <Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Builder, Baz_b7ac6330b5b1b391_Reader, Qux_b920a5d19b2fd8db_Builder, Qux_b920a5d19b2fd8db_Reader>Factory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Builder, Baz_b7ac6330b5b1b391_Reader, Qux_b920a5d19b2fd8db_Builder, Qux_b920a5d19b2fd8db_Reader>
                newFactory(org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory, org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory, org.capnproto.PointerFactory<Baz_b7ac6330b5b1b391_Builder, Baz_b7ac6330b5b1b391_Reader> Baz_b7ac6330b5b1b391_Factory, org.capnproto.PointerFactory<Qux_b920a5d19b2fd8db_Builder, Qux_b920a5d19b2fd8db_Reader> Qux_b920a5d19b2fd8db_Factory){
                    return new Factory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Builder, Baz_b7ac6330b5b1b391_Reader, Qux_b920a5d19b2fd8db_Builder, Qux_b920a5d19b2fd8db_Reader>(Foo_b32d3ef2e630cc9e_Factory, Bar_b32d3ef2e630cc9e_Factory, Baz_b7ac6330b5b1b391_Factory, Qux_b920a5d19b2fd8db_Factory);
                }
                public static final class Builder<Foo_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Builder, Baz_b7ac6330b5b1b391_Builder, Qux_b920a5d19b2fd8db_Builder> extends org.capnproto.StructBuilder {
                    final org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, ?> Foo_b32d3ef2e630cc9e_Factory;
                    final org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, ?> Bar_b32d3ef2e630cc9e_Factory;
                    final org.capnproto.PointerFactory<Baz_b7ac6330b5b1b391_Builder, ?> Baz_b7ac6330b5b1b391_Factory;
                    final org.capnproto.PointerFactory<Qux_b920a5d19b2fd8db_Builder, ?> Qux_b920a5d19b2fd8db_Factory;
                    Builder(org.capnproto.PointerFactory<Foo_b32d3ef2e630cc9e_Builder, ?> Foo_b32d3ef2e630cc9e_Factory,org.capnproto.PointerFactory<Bar_b32d3ef2e630cc9e_Builder, ?> Bar_b32d3ef2e630cc9e_Factory,org.capnproto.PointerFactory<Baz_b7ac6330b5b1b391_Builder, ?> Baz_b7ac6330b5b1b391_Factory,org.capnproto.PointerFactory<Qux_b920a5d19b2fd8db_Builder, ?> Qux_b920a5d19b2fd8db_Factory,org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                        super(segment, data, pointers, dataSize, pointerCount);
                        this.Foo_b32d3ef2e630cc9e_Factory = Foo_b32d3ef2e630cc9e_Factory;
                        this.Bar_b32d3ef2e630cc9e_Factory = Bar_b32d3ef2e630cc9e_Factory;
                        this.Baz_b7ac6330b5b1b391_Factory = Baz_b7ac6330b5b1b391_Factory;
                        this.Qux_b920a5d19b2fd8db_Factory = Qux_b920a5d19b2fd8db_Factory;
                    }
                    public final <Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader, Qux_b920a5d19b2fd8db_Reader>Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader, Qux_b920a5d19b2fd8db_Reader> asReader(DeepNest.Factory<Foo_b32d3ef2e630cc9e_Builder, Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Builder, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Builder, Baz_b7ac6330b5b1b391_Reader, Qux_b920a5d19b2fd8db_Builder, Qux_b920a5d19b2fd8db_Reader> factory) {
                        return new Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader, Qux_b920a5d19b2fd8db_Reader>(factory.Foo_b32d3ef2e630cc9e_Factory, factory.Bar_b32d3ef2e630cc9e_Factory, factory.Baz_b7ac6330b5b1b391_Factory, factory.Qux_b920a5d19b2fd8db_Factory, segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
                    }
                    public final boolean hasFoo() {
                        return !_pointerFieldIsNull(0);
                    }
                    public Foo_b32d3ef2e630cc9e_Builder getFoo() {
                        return _getPointerField(Foo_b32d3ef2e630cc9e_Factory, 0);
                    }
                    public Foo_b32d3ef2e630cc9e_Builder initFoo() {
                        return _initPointerField(Foo_b32d3ef2e630cc9e_Factory, 0, 0);
                    }
                    public Foo_b32d3ef2e630cc9e_Builder initFoo(int size) {
                        return _initPointerField(Foo_b32d3ef2e630cc9e_Factory, 0, size);
                    }
                    public <Foo_b32d3ef2e630cc9e_Reader> void setFoo(org.capnproto.SetPointerBuilder<Foo_b32d3ef2e630cc9e_Builder,Foo_b32d3ef2e630cc9e_Reader> factory,Foo_b32d3ef2e630cc9e_Reader value) {
                        _setPointerField(factory, 0, value);
                    }

                    public final boolean hasBar() {
                        return !_pointerFieldIsNull(1);
                    }
                    public Bar_b32d3ef2e630cc9e_Builder getBar() {
                        return _getPointerField(Bar_b32d3ef2e630cc9e_Factory, 1);
                    }
                    public Bar_b32d3ef2e630cc9e_Builder initBar() {
                        return _initPointerField(Bar_b32d3ef2e630cc9e_Factory, 1, 0);
                    }
                    public Bar_b32d3ef2e630cc9e_Builder initBar(int size) {
                        return _initPointerField(Bar_b32d3ef2e630cc9e_Factory, 1, size);
                    }
                    public <Bar_b32d3ef2e630cc9e_Reader> void setBar(org.capnproto.SetPointerBuilder<Bar_b32d3ef2e630cc9e_Builder,Bar_b32d3ef2e630cc9e_Reader> factory,Bar_b32d3ef2e630cc9e_Reader value) {
                        _setPointerField(factory, 1, value);
                    }

                    public final boolean hasBaz() {
                        return !_pointerFieldIsNull(2);
                    }
                    public Baz_b7ac6330b5b1b391_Builder getBaz() {
                        return _getPointerField(Baz_b7ac6330b5b1b391_Factory, 2);
                    }
                    public Baz_b7ac6330b5b1b391_Builder initBaz() {
                        return _initPointerField(Baz_b7ac6330b5b1b391_Factory, 2, 0);
                    }
                    public Baz_b7ac6330b5b1b391_Builder initBaz(int size) {
                        return _initPointerField(Baz_b7ac6330b5b1b391_Factory, 2, size);
                    }
                    public <Baz_b7ac6330b5b1b391_Reader> void setBaz(org.capnproto.SetPointerBuilder<Baz_b7ac6330b5b1b391_Builder,Baz_b7ac6330b5b1b391_Reader> factory,Baz_b7ac6330b5b1b391_Reader value) {
                        _setPointerField(factory, 2, value);
                    }

                    public final boolean hasQux() {
                        return !_pointerFieldIsNull(3);
                    }
                    public Qux_b920a5d19b2fd8db_Builder getQux() {
                        return _getPointerField(Qux_b920a5d19b2fd8db_Factory, 3);
                    }
                    public Qux_b920a5d19b2fd8db_Builder initQux() {
                        return _initPointerField(Qux_b920a5d19b2fd8db_Factory, 3, 0);
                    }
                    public Qux_b920a5d19b2fd8db_Builder initQux(int size) {
                        return _initPointerField(Qux_b920a5d19b2fd8db_Factory, 3, size);
                    }
                    public <Qux_b920a5d19b2fd8db_Reader> void setQux(org.capnproto.SetPointerBuilder<Qux_b920a5d19b2fd8db_Builder,Qux_b920a5d19b2fd8db_Reader> factory,Qux_b920a5d19b2fd8db_Reader value) {
                        _setPointerField(factory, 3, value);
                    }

                }

                public static final class Reader<Foo_b32d3ef2e630cc9e_Reader, Bar_b32d3ef2e630cc9e_Reader, Baz_b7ac6330b5b1b391_Reader, Qux_b920a5d19b2fd8db_Reader> extends org.capnproto.StructReader {
                    final org.capnproto.PointerFactory<?,Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory;
                    final org.capnproto.PointerFactory<?,Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory;
                    final org.capnproto.PointerFactory<?,Baz_b7ac6330b5b1b391_Reader> Baz_b7ac6330b5b1b391_Factory;
                    final org.capnproto.PointerFactory<?,Qux_b920a5d19b2fd8db_Reader> Qux_b920a5d19b2fd8db_Factory;
                    Reader(org.capnproto.PointerFactory<?,Foo_b32d3ef2e630cc9e_Reader> Foo_b32d3ef2e630cc9e_Factory,org.capnproto.PointerFactory<?,Bar_b32d3ef2e630cc9e_Reader> Bar_b32d3ef2e630cc9e_Factory,org.capnproto.PointerFactory<?,Baz_b7ac6330b5b1b391_Reader> Baz_b7ac6330b5b1b391_Factory,org.capnproto.PointerFactory<?,Qux_b920a5d19b2fd8db_Reader> Qux_b920a5d19b2fd8db_Factory,org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                        this.Foo_b32d3ef2e630cc9e_Factory = Foo_b32d3ef2e630cc9e_Factory;
                        this.Bar_b32d3ef2e630cc9e_Factory = Bar_b32d3ef2e630cc9e_Factory;
                        this.Baz_b7ac6330b5b1b391_Factory = Baz_b7ac6330b5b1b391_Factory;
                        this.Qux_b920a5d19b2fd8db_Factory = Qux_b920a5d19b2fd8db_Factory;
                    }

                    public boolean hasFoo() {
                        return !_pointerFieldIsNull(0);
                    }
                    public Foo_b32d3ef2e630cc9e_Reader getFoo() {
                        return _getPointerField(Foo_b32d3ef2e630cc9e_Factory, 0);
                    }
                    public boolean hasBar() {
                        return !_pointerFieldIsNull(1);
                    }
                    public Bar_b32d3ef2e630cc9e_Reader getBar() {
                        return _getPointerField(Bar_b32d3ef2e630cc9e_Factory, 1);
                    }
                    public boolean hasBaz() {
                        return !_pointerFieldIsNull(2);
                    }
                    public Baz_b7ac6330b5b1b391_Reader getBaz() {
                        return _getPointerField(Baz_b7ac6330b5b1b391_Factory, 2);
                    }
                    public boolean hasQux() {
                        return !_pointerFieldIsNull(3);
                    }
                    public Qux_b920a5d19b2fd8db_Reader getQux() {
                        return _getPointerField(Qux_b920a5d19b2fd8db_Factory, 3);
                    }
                }

            }


        }


    }


    public static class TestGenericsWrapper {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
        public static final class Factory<Foo_f0e4457e7c8a3afa_Builder, Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Builder, Bar_f0e4457e7c8a3afa_Reader> extends org.capnproto.StructFactory<Builder<Foo_f0e4457e7c8a3afa_Builder, Bar_f0e4457e7c8a3afa_Builder>, Reader<Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Reader>> {
            final org.capnproto.PointerFactory<Foo_f0e4457e7c8a3afa_Builder, Foo_f0e4457e7c8a3afa_Reader> Foo_f0e4457e7c8a3afa_Factory;
            final org.capnproto.PointerFactory<Bar_f0e4457e7c8a3afa_Builder, Bar_f0e4457e7c8a3afa_Reader> Bar_f0e4457e7c8a3afa_Factory;
            public Factory(org.capnproto.PointerFactory<Foo_f0e4457e7c8a3afa_Builder, Foo_f0e4457e7c8a3afa_Reader> Foo_f0e4457e7c8a3afa_Factory, org.capnproto.PointerFactory<Bar_f0e4457e7c8a3afa_Builder, Bar_f0e4457e7c8a3afa_Reader> Bar_f0e4457e7c8a3afa_Factory) {
                this.Foo_f0e4457e7c8a3afa_Factory = Foo_f0e4457e7c8a3afa_Factory;
                this.Bar_f0e4457e7c8a3afa_Factory = Bar_f0e4457e7c8a3afa_Factory;
            }
            public final Reader<Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Reader> constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader<Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Reader>(Foo_f0e4457e7c8a3afa_Factory, Bar_f0e4457e7c8a3afa_Factory, segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder<Foo_f0e4457e7c8a3afa_Builder, Bar_f0e4457e7c8a3afa_Builder> constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                return new Builder<Foo_f0e4457e7c8a3afa_Builder, Bar_f0e4457e7c8a3afa_Builder>(Foo_f0e4457e7c8a3afa_Factory, Bar_f0e4457e7c8a3afa_Factory, segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
                return TestGenericsWrapper.STRUCT_SIZE;
            }
            public final Reader<Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Reader> asReader(Builder<Foo_f0e4457e7c8a3afa_Builder, Bar_f0e4457e7c8a3afa_Builder> builder) {
                return builder.asReader(this);
            }
        }
        public static final <Foo_f0e4457e7c8a3afa_Builder, Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Builder, Bar_f0e4457e7c8a3afa_Reader>Factory<Foo_f0e4457e7c8a3afa_Builder, Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Builder, Bar_f0e4457e7c8a3afa_Reader>
        newFactory(org.capnproto.PointerFactory<Foo_f0e4457e7c8a3afa_Builder, Foo_f0e4457e7c8a3afa_Reader> Foo_f0e4457e7c8a3afa_Factory, org.capnproto.PointerFactory<Bar_f0e4457e7c8a3afa_Builder, Bar_f0e4457e7c8a3afa_Reader> Bar_f0e4457e7c8a3afa_Factory){
            return new Factory<Foo_f0e4457e7c8a3afa_Builder, Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Builder, Bar_f0e4457e7c8a3afa_Reader>(Foo_f0e4457e7c8a3afa_Factory, Bar_f0e4457e7c8a3afa_Factory);
        }
        public static final class Builder<Foo_f0e4457e7c8a3afa_Builder, Bar_f0e4457e7c8a3afa_Builder> extends org.capnproto.StructBuilder {
            final org.capnproto.PointerFactory<Foo_f0e4457e7c8a3afa_Builder, ?> Foo_f0e4457e7c8a3afa_Factory;
            final org.capnproto.PointerFactory<Bar_f0e4457e7c8a3afa_Builder, ?> Bar_f0e4457e7c8a3afa_Factory;
            Builder(org.capnproto.PointerFactory<Foo_f0e4457e7c8a3afa_Builder, ?> Foo_f0e4457e7c8a3afa_Factory,org.capnproto.PointerFactory<Bar_f0e4457e7c8a3afa_Builder, ?> Bar_f0e4457e7c8a3afa_Factory,org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                super(segment, data, pointers, dataSize, pointerCount);
                this.Foo_f0e4457e7c8a3afa_Factory = Foo_f0e4457e7c8a3afa_Factory;
                this.Bar_f0e4457e7c8a3afa_Factory = Bar_f0e4457e7c8a3afa_Factory;
            }
            public final <Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Reader>Reader<Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Reader> asReader(TestGenericsWrapper.Factory<Foo_f0e4457e7c8a3afa_Builder, Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Builder, Bar_f0e4457e7c8a3afa_Reader> factory) {
                return new Reader<Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Reader>(factory.Foo_f0e4457e7c8a3afa_Factory, factory.Bar_f0e4457e7c8a3afa_Factory, segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
            public final Test.TestGenerics.Builder<Foo_f0e4457e7c8a3afa_Builder, Bar_f0e4457e7c8a3afa_Builder> getValue() {
                return _getPointerField(Test.TestGenerics.newFactory(Foo_f0e4457e7c8a3afa_Factory,Bar_f0e4457e7c8a3afa_Factory), 0, null, 0);
            }
            public final <Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Reader> void setValue(org.capnproto.SetPointerBuilder<Test.TestGenerics.Builder<Foo_f0e4457e7c8a3afa_Builder, Bar_f0e4457e7c8a3afa_Builder>, Test.TestGenerics.Reader<Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Reader>> factory, Test.TestGenerics.Reader<Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Reader> value) {
                _setPointerField(factory, 0, value);
            }
            public final Test.TestGenerics.Builder<Foo_f0e4457e7c8a3afa_Builder, Bar_f0e4457e7c8a3afa_Builder> initValue() {
                return _initPointerField(Test.TestGenerics.newFactory(Foo_f0e4457e7c8a3afa_Factory,Bar_f0e4457e7c8a3afa_Factory),0, 0);
            }
        }

        public static final class Reader<Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Reader> extends org.capnproto.StructReader {
            final org.capnproto.PointerFactory<?,Foo_f0e4457e7c8a3afa_Reader> Foo_f0e4457e7c8a3afa_Factory;
            final org.capnproto.PointerFactory<?,Bar_f0e4457e7c8a3afa_Reader> Bar_f0e4457e7c8a3afa_Factory;
            Reader(org.capnproto.PointerFactory<?,Foo_f0e4457e7c8a3afa_Reader> Foo_f0e4457e7c8a3afa_Factory,org.capnproto.PointerFactory<?,Bar_f0e4457e7c8a3afa_Reader> Bar_f0e4457e7c8a3afa_Factory,org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
                this.Foo_f0e4457e7c8a3afa_Factory = Foo_f0e4457e7c8a3afa_Factory;
                this.Bar_f0e4457e7c8a3afa_Factory = Bar_f0e4457e7c8a3afa_Factory;
            }

            public boolean hasValue() {
                return !_pointerFieldIsNull(0);
            }
            public Test.TestGenerics.Reader<Foo_f0e4457e7c8a3afa_Reader, Bar_f0e4457e7c8a3afa_Reader> getValue() {
                return _getPointerField(Test.TestGenerics.newFactory(Foo_f0e4457e7c8a3afa_Factory,Bar_f0e4457e7c8a3afa_Factory),0,null, 0);
            }

        }

    }


    public static class TestGenericsWrapper2 {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }
            public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
                return TestGenericsWrapper2.STRUCT_SIZE;
            }
            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                super(segment, data, pointers, dataSize, pointerCount);
            }
            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
            public final Test.TestGenericsWrapper.Builder<org.capnproto.Text.Builder, Test.TestAllTypes.Builder> getValue() {
                return _getPointerField(Test.TestGenericsWrapper.newFactory(org.capnproto.Text.factory,Test.TestAllTypes.factory), 0, null, 0);
            }
            public final void setValue(org.capnproto.SetPointerBuilder<Test.TestGenericsWrapper.Builder<org.capnproto.Text.Builder, Test.TestAllTypes.Builder>, Test.TestGenericsWrapper.Reader<org.capnproto.Text.Reader, Test.TestAllTypes.Reader>> factory, Test.TestGenericsWrapper.Reader<org.capnproto.Text.Reader, Test.TestAllTypes.Reader> value) {
                _setPointerField(factory, 0, value);
            }
            public final Test.TestGenericsWrapper.Builder<org.capnproto.Text.Builder, Test.TestAllTypes.Builder> initValue() {
                return _initPointerField(Test.TestGenericsWrapper.newFactory(org.capnproto.Text.factory,Test.TestAllTypes.factory),0, 0);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public boolean hasValue() {
                return !_pointerFieldIsNull(0);
            }
            public Test.TestGenericsWrapper.Reader<org.capnproto.Text.Reader, Test.TestAllTypes.Reader> getValue() {
                return _getPointerField(Test.TestGenericsWrapper.newFactory(org.capnproto.Text.factory,Test.TestAllTypes.factory),0,null, 0);
            }

        }

    }


    public static class TestUseGenerics {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)12);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }
            public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
                return TestUseGenerics.STRUCT_SIZE;
            }
            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                super(segment, data, pointers, dataSize, pointerCount);
            }
            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
            public final Test.TestGenerics.Builder<Test.TestAllTypes.Builder, Test.TestAnyPointer.Builder> getBasic() {
                return _getPointerField(Test.TestGenerics.newFactory(Test.TestAllTypes.factory,Test.TestAnyPointer.factory), 0, null, 0);
            }
            public final void setBasic(org.capnproto.SetPointerBuilder<Test.TestGenerics.Builder<Test.TestAllTypes.Builder, Test.TestAnyPointer.Builder>, Test.TestGenerics.Reader<Test.TestAllTypes.Reader, Test.TestAnyPointer.Reader>> factory, Test.TestGenerics.Reader<Test.TestAllTypes.Reader, Test.TestAnyPointer.Reader> value) {
                _setPointerField(factory, 0, value);
            }
            public final Test.TestGenerics.Builder<Test.TestAllTypes.Builder, Test.TestAnyPointer.Builder> initBasic() {
                return _initPointerField(Test.TestGenerics.newFactory(Test.TestAllTypes.factory,Test.TestAnyPointer.factory),0, 0);
            }
            public final Test.TestGenerics.Inner.Builder<Test.TestAllTypes.Builder, Test.TestAnyPointer.Builder> getInner() {
                return _getPointerField(Test.TestGenerics.Inner.newFactory(Test.TestAllTypes.factory,Test.TestAnyPointer.factory), 1, null, 0);
            }
            public final void setInner(org.capnproto.SetPointerBuilder<Test.TestGenerics.Inner.Builder<Test.TestAllTypes.Builder, Test.TestAnyPointer.Builder>, Test.TestGenerics.Inner.Reader<Test.TestAllTypes.Reader, Test.TestAnyPointer.Reader>> factory, Test.TestGenerics.Inner.Reader<Test.TestAllTypes.Reader, Test.TestAnyPointer.Reader> value) {
                _setPointerField(factory, 1, value);
            }
            public final Test.TestGenerics.Inner.Builder<Test.TestAllTypes.Builder, Test.TestAnyPointer.Builder> initInner() {
                return _initPointerField(Test.TestGenerics.Inner.newFactory(Test.TestAllTypes.factory,Test.TestAnyPointer.factory),1, 0);
            }
            public final Test.TestGenerics.Inner2.Builder<Test.TestAllTypes.Builder, Test.TestAnyPointer.Builder, org.capnproto.Text.Builder> getInner2() {
                return _getPointerField(Test.TestGenerics.Inner2.newFactory(Test.TestAllTypes.factory,Test.TestAnyPointer.factory,org.capnproto.Text.factory), 2, null, 0);
            }
            public final void setInner2(org.capnproto.SetPointerBuilder<Test.TestGenerics.Inner2.Builder<Test.TestAllTypes.Builder, Test.TestAnyPointer.Builder, org.capnproto.Text.Builder>, Test.TestGenerics.Inner2.Reader<Test.TestAllTypes.Reader, Test.TestAnyPointer.Reader, org.capnproto.Text.Reader>> factory, Test.TestGenerics.Inner2.Reader<Test.TestAllTypes.Reader, Test.TestAnyPointer.Reader, org.capnproto.Text.Reader> value) {
                _setPointerField(factory, 2, value);
            }
            public final Test.TestGenerics.Inner2.Builder<Test.TestAllTypes.Builder, Test.TestAnyPointer.Builder, org.capnproto.Text.Builder> initInner2() {
                return _initPointerField(Test.TestGenerics.Inner2.newFactory(Test.TestAllTypes.factory,Test.TestAnyPointer.factory,org.capnproto.Text.factory),2, 0);
            }
            public final Test.TestGenerics.Builder<org.capnproto.AnyPointer.Builder, org.capnproto.AnyPointer.Builder> getUnspecified() {
                return _getPointerField(Test.TestGenerics.newFactory(org.capnproto.AnyPointer.factory,org.capnproto.AnyPointer.factory), 3, null, 0);
            }
            public final void setUnspecified(org.capnproto.SetPointerBuilder<Test.TestGenerics.Builder<org.capnproto.AnyPointer.Builder, org.capnproto.AnyPointer.Builder>, Test.TestGenerics.Reader<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Reader>> factory, Test.TestGenerics.Reader<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Reader> value) {
                _setPointerField(factory, 3, value);
            }
            public final Test.TestGenerics.Builder<org.capnproto.AnyPointer.Builder, org.capnproto.AnyPointer.Builder> initUnspecified() {
                return _initPointerField(Test.TestGenerics.newFactory(org.capnproto.AnyPointer.factory,org.capnproto.AnyPointer.factory),3, 0);
            }
            public final Test.TestGenerics.Inner2.Builder<org.capnproto.AnyPointer.Builder, org.capnproto.AnyPointer.Builder, org.capnproto.Text.Builder> getUnspecifiedInner() {
                return _getPointerField(Test.TestGenerics.Inner2.newFactory(org.capnproto.AnyPointer.factory,org.capnproto.AnyPointer.factory,org.capnproto.Text.factory), 4, null, 0);
            }
            public final void setUnspecifiedInner(org.capnproto.SetPointerBuilder<Test.TestGenerics.Inner2.Builder<org.capnproto.AnyPointer.Builder, org.capnproto.AnyPointer.Builder, org.capnproto.Text.Builder>, Test.TestGenerics.Inner2.Reader<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Reader, org.capnproto.Text.Reader>> factory, Test.TestGenerics.Inner2.Reader<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Reader, org.capnproto.Text.Reader> value) {
                _setPointerField(factory, 4, value);
            }
            public final Test.TestGenerics.Inner2.Builder<org.capnproto.AnyPointer.Builder, org.capnproto.AnyPointer.Builder, org.capnproto.Text.Builder> initUnspecifiedInner() {
                return _initPointerField(Test.TestGenerics.Inner2.newFactory(org.capnproto.AnyPointer.factory,org.capnproto.AnyPointer.factory,org.capnproto.Text.factory),4, 0);
            }
            public final Test.TestGenerics.Builder<Test.TestAllTypes.Builder, org.capnproto.Text.Builder> getDefault() {
                return _getPointerField(Test.TestGenerics.newFactory(Test.TestAllTypes.factory,org.capnproto.Text.factory), 5, Schemas.b_d1ec544e356e99fd, 246);
            }
            public final void setDefault(org.capnproto.SetPointerBuilder<Test.TestGenerics.Builder<Test.TestAllTypes.Builder, org.capnproto.Text.Builder>, Test.TestGenerics.Reader<Test.TestAllTypes.Reader, org.capnproto.Text.Reader>> factory, Test.TestGenerics.Reader<Test.TestAllTypes.Reader, org.capnproto.Text.Reader> value) {
                _setPointerField(factory, 5, value);
            }
            public final Test.TestGenerics.Builder<Test.TestAllTypes.Builder, org.capnproto.Text.Builder> initDefault() {
                return _initPointerField(Test.TestGenerics.newFactory(Test.TestAllTypes.factory,org.capnproto.Text.factory),5, 0);
            }
            public final Test.TestGenerics.Inner.Builder<Test.TestAllTypes.Builder, org.capnproto.Text.Builder> getDefaultInner() {
                return _getPointerField(Test.TestGenerics.Inner.newFactory(Test.TestAllTypes.factory,org.capnproto.Text.factory), 6, Schemas.b_d1ec544e356e99fd, 336);
            }
            public final void setDefaultInner(org.capnproto.SetPointerBuilder<Test.TestGenerics.Inner.Builder<Test.TestAllTypes.Builder, org.capnproto.Text.Builder>, Test.TestGenerics.Inner.Reader<Test.TestAllTypes.Reader, org.capnproto.Text.Reader>> factory, Test.TestGenerics.Inner.Reader<Test.TestAllTypes.Reader, org.capnproto.Text.Reader> value) {
                _setPointerField(factory, 6, value);
            }
            public final Test.TestGenerics.Inner.Builder<Test.TestAllTypes.Builder, org.capnproto.Text.Builder> initDefaultInner() {
                return _initPointerField(Test.TestGenerics.Inner.newFactory(Test.TestAllTypes.factory,org.capnproto.Text.factory),6, 0);
            }
            public final Test.TestUseGenerics.Builder getDefaultUser() {
                return _getPointerField(Test.TestUseGenerics.factory, 7, Schemas.b_d1ec544e356e99fd, 373);
            }
            public final void setDefaultUser(Test.TestUseGenerics.Reader value) {
                _setPointerField(Test.TestUseGenerics.factory,7, value);
            }
            public final Test.TestUseGenerics.Builder initDefaultUser() {
                return _initPointerField(Test.TestUseGenerics.factory,7, 0);
            }
            public final Test.TestGenericsWrapper.Builder<Test.TestAllTypes.Builder, Test.TestAnyPointer.Builder> getWrapper() {
                return _getPointerField(Test.TestGenericsWrapper.newFactory(Test.TestAllTypes.factory,Test.TestAnyPointer.factory), 8, null, 0);
            }
            public final void setWrapper(org.capnproto.SetPointerBuilder<Test.TestGenericsWrapper.Builder<Test.TestAllTypes.Builder, Test.TestAnyPointer.Builder>, Test.TestGenericsWrapper.Reader<Test.TestAllTypes.Reader, Test.TestAnyPointer.Reader>> factory, Test.TestGenericsWrapper.Reader<Test.TestAllTypes.Reader, Test.TestAnyPointer.Reader> value) {
                _setPointerField(factory, 8, value);
            }
            public final Test.TestGenericsWrapper.Builder<Test.TestAllTypes.Builder, Test.TestAnyPointer.Builder> initWrapper() {
                return _initPointerField(Test.TestGenericsWrapper.newFactory(Test.TestAllTypes.factory,Test.TestAnyPointer.factory),8, 0);
            }
            public final Test.TestGenericsWrapper.Builder<org.capnproto.Text.Builder, Test.TestAllTypes.Builder> getDefaultWrapper() {
                return _getPointerField(Test.TestGenericsWrapper.newFactory(org.capnproto.Text.factory,Test.TestAllTypes.factory), 9, Schemas.b_d1ec544e356e99fd, 467);
            }
            public final void setDefaultWrapper(org.capnproto.SetPointerBuilder<Test.TestGenericsWrapper.Builder<org.capnproto.Text.Builder, Test.TestAllTypes.Builder>, Test.TestGenericsWrapper.Reader<org.capnproto.Text.Reader, Test.TestAllTypes.Reader>> factory, Test.TestGenericsWrapper.Reader<org.capnproto.Text.Reader, Test.TestAllTypes.Reader> value) {
                _setPointerField(factory, 9, value);
            }
            public final Test.TestGenericsWrapper.Builder<org.capnproto.Text.Builder, Test.TestAllTypes.Builder> initDefaultWrapper() {
                return _initPointerField(Test.TestGenericsWrapper.newFactory(org.capnproto.Text.factory,Test.TestAllTypes.factory),9, 0);
            }
            public final Test.TestGenericsWrapper2.Builder getDefaultWrapper2() {
                return _getPointerField(Test.TestGenericsWrapper2.factory, 10, Schemas.b_d1ec544e356e99fd, 511);
            }
            public final void setDefaultWrapper2(Test.TestGenericsWrapper2.Reader value) {
                _setPointerField(Test.TestGenericsWrapper2.factory,10, value);
            }
            public final Test.TestGenericsWrapper2.Builder initDefaultWrapper2() {
                return _initPointerField(Test.TestGenericsWrapper2.factory,10, 0);
            }
            public final boolean hasListOfGenerics() {
                return !_pointerFieldIsNull(11);
            }
            public final org.capnproto.StructList.Builder<Test.TestGenerics.Builder<Test.TestAllTypes.Builder, org.capnproto.Text.Builder>> getListOfGenerics() {
                return _getPointerField(new org.capnproto.StructList.Factory<Test.TestGenerics.Builder<Test.TestAllTypes.Builder, org.capnproto.Text.Builder>, Test.TestGenerics.Reader<Test.TestAllTypes.Reader, org.capnproto.Text.Reader>>(Test.TestGenerics.newFactory(Test.TestAllTypes.factory,org.capnproto.Text.factory)), 11, null, 0);
            }
            public final void setListOfGenerics(org.capnproto.StructList.Reader<Test.TestGenerics.Reader<Test.TestAllTypes.Reader, org.capnproto.Text.Reader>> value) {
                _setPointerField(new org.capnproto.StructList.Factory<Test.TestGenerics.Builder<Test.TestAllTypes.Builder, org.capnproto.Text.Builder>, Test.TestGenerics.Reader<Test.TestAllTypes.Reader, org.capnproto.Text.Reader>>(Test.TestGenerics.newFactory(Test.TestAllTypes.factory,org.capnproto.Text.factory)), 11, value);
            }
            public final org.capnproto.StructList.Builder<Test.TestGenerics.Builder<Test.TestAllTypes.Builder, org.capnproto.Text.Builder>> initListOfGenerics(int size) {
                return _initPointerField(new org.capnproto.StructList.Factory<Test.TestGenerics.Builder<Test.TestAllTypes.Builder, org.capnproto.Text.Builder>, Test.TestGenerics.Reader<Test.TestAllTypes.Reader, org.capnproto.Text.Reader>>(Test.TestGenerics.newFactory(Test.TestAllTypes.factory,org.capnproto.Text.factory)), 11, size);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public boolean hasBasic() {
                return !_pointerFieldIsNull(0);
            }
            public Test.TestGenerics.Reader<Test.TestAllTypes.Reader, Test.TestAnyPointer.Reader> getBasic() {
                return _getPointerField(Test.TestGenerics.newFactory(Test.TestAllTypes.factory,Test.TestAnyPointer.factory),0,null, 0);
            }

            public boolean hasInner() {
                return !_pointerFieldIsNull(1);
            }
            public Test.TestGenerics.Inner.Reader<Test.TestAllTypes.Reader, Test.TestAnyPointer.Reader> getInner() {
                return _getPointerField(Test.TestGenerics.Inner.newFactory(Test.TestAllTypes.factory,Test.TestAnyPointer.factory),1,null, 0);
            }

            public boolean hasInner2() {
                return !_pointerFieldIsNull(2);
            }
            public Test.TestGenerics.Inner2.Reader<Test.TestAllTypes.Reader, Test.TestAnyPointer.Reader, org.capnproto.Text.Reader> getInner2() {
                return _getPointerField(Test.TestGenerics.Inner2.newFactory(Test.TestAllTypes.factory,Test.TestAnyPointer.factory,org.capnproto.Text.factory),2,null, 0);
            }

            public boolean hasUnspecified() {
                return !_pointerFieldIsNull(3);
            }
            public Test.TestGenerics.Reader<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Reader> getUnspecified() {
                return _getPointerField(Test.TestGenerics.newFactory(org.capnproto.AnyPointer.factory,org.capnproto.AnyPointer.factory),3,null, 0);
            }

            public boolean hasUnspecifiedInner() {
                return !_pointerFieldIsNull(4);
            }
            public Test.TestGenerics.Inner2.Reader<org.capnproto.AnyPointer.Reader, org.capnproto.AnyPointer.Reader, org.capnproto.Text.Reader> getUnspecifiedInner() {
                return _getPointerField(Test.TestGenerics.Inner2.newFactory(org.capnproto.AnyPointer.factory,org.capnproto.AnyPointer.factory,org.capnproto.Text.factory),4,null, 0);
            }

            public boolean hasDefault() {
                return !_pointerFieldIsNull(5);
            }
            public Test.TestGenerics.Reader<Test.TestAllTypes.Reader, org.capnproto.Text.Reader> getDefault() {
                return _getPointerField(Test.TestGenerics.newFactory(Test.TestAllTypes.factory,org.capnproto.Text.factory),5,Schemas.b_d1ec544e356e99fd, 246);
            }

            public boolean hasDefaultInner() {
                return !_pointerFieldIsNull(6);
            }
            public Test.TestGenerics.Inner.Reader<Test.TestAllTypes.Reader, org.capnproto.Text.Reader> getDefaultInner() {
                return _getPointerField(Test.TestGenerics.Inner.newFactory(Test.TestAllTypes.factory,org.capnproto.Text.factory),6,Schemas.b_d1ec544e356e99fd, 336);
            }

            public boolean hasDefaultUser() {
                return !_pointerFieldIsNull(7);
            }
            public Test.TestUseGenerics.Reader getDefaultUser() {
                return _getPointerField(Test.TestUseGenerics.factory,7,Schemas.b_d1ec544e356e99fd, 373);
            }

            public boolean hasWrapper() {
                return !_pointerFieldIsNull(8);
            }
            public Test.TestGenericsWrapper.Reader<Test.TestAllTypes.Reader, Test.TestAnyPointer.Reader> getWrapper() {
                return _getPointerField(Test.TestGenericsWrapper.newFactory(Test.TestAllTypes.factory,Test.TestAnyPointer.factory),8,null, 0);
            }

            public boolean hasDefaultWrapper() {
                return !_pointerFieldIsNull(9);
            }
            public Test.TestGenericsWrapper.Reader<org.capnproto.Text.Reader, Test.TestAllTypes.Reader> getDefaultWrapper() {
                return _getPointerField(Test.TestGenericsWrapper.newFactory(org.capnproto.Text.factory,Test.TestAllTypes.factory),9,Schemas.b_d1ec544e356e99fd, 467);
            }

            public boolean hasDefaultWrapper2() {
                return !_pointerFieldIsNull(10);
            }
            public Test.TestGenericsWrapper2.Reader getDefaultWrapper2() {
                return _getPointerField(Test.TestGenericsWrapper2.factory,10,Schemas.b_d1ec544e356e99fd, 511);
            }

            public final boolean hasListOfGenerics() {
                return !_pointerFieldIsNull(11);
            }
            public final org.capnproto.StructList.Reader<Test.TestGenerics.Reader<Test.TestAllTypes.Reader, org.capnproto.Text.Reader>> getListOfGenerics() {
                return _getPointerField(new org.capnproto.StructList.Factory<Test.TestGenerics.Builder<Test.TestAllTypes.Builder, org.capnproto.Text.Builder>, Test.TestGenerics.Reader<Test.TestAllTypes.Reader, org.capnproto.Text.Reader>>(Test.TestGenerics.newFactory(Test.TestAllTypes.factory,org.capnproto.Text.factory)), 11, null, 0);
            }

        }

    }


    public static class TestEmptyStruct {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }
            public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
                return TestEmptyStruct.STRUCT_SIZE;
            }
            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                super(segment, data, pointers, dataSize, pointerCount);
            }
            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

        }

    }


    public static class TestConstants {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)0);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }
            public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
                return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
                return new Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
                return TestConstants.STRUCT_SIZE;
            }
            public final Reader asReader(Builder builder) {
                return builder.asReader();
            }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
                new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
                super(segment, data, pointers, dataSize, pointerCount);
            }
            public final Reader asReader() {
                return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
        }

        public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
                super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

        }

        public static final org.capnproto.Void VOID_CONST = org.capnproto.Void.VOID;
        public static final boolean BOOL_CONST = true;
        public static final byte INT8_CONST = -123;
        public static final short INT16_CONST = -12345;
        public static final int INT32_CONST = -12345678;
        public static final long INT64_CONST = -123456789012345L;
        public static final byte UINT8_CONST = -22;
        public static final short UINT16_CONST = -19858;
        public static final int UINT32_CONST = -838178284;
        public static final long UINT64_CONST = -6101065172474983726L;
        public static final float FLOAT32_CONST = 1234.5f;
        public static final double FLOAT64_CONST = -1.23e47;
        public static final org.capnproto.Text.Reader TEXT_CONST = new org.capnproto.Text.Reader(Schemas.b_f22a1ce11a118f67.buffer, 25, 3);
        public static final org.capnproto.Data.Reader DATA_CONST = new org.capnproto.Data.Reader(Schemas.b_d3cc6926f91b6aa2.buffer, 25, 3);
        public static final Test.TestAllTypes.Reader STRUCT_CONST =
                new org.capnproto.AnyPointer.Reader(Schemas.b_97f89dc7ef95ff2a,24,0x7fffffff).getAs(Test.TestAllTypes.factory);
        public static final Test.TestEnum ENUM_CONST = Test.TestEnum.CORGE;
        public static final org.capnproto.PrimitiveList.Void.Reader VOID_LIST_CONST =
                (new org.capnproto.AnyPointer.Reader(Schemas.b_db62d00e4ee0139e,28,0x7fffffff).getAs(org.capnproto.PrimitiveList.Void.factory));
        public static final org.capnproto.PrimitiveList.Boolean.Reader BOOL_LIST_CONST =
                (new org.capnproto.AnyPointer.Reader(Schemas.b_810e6d9223a601eb,28,0x7fffffff).getAs(org.capnproto.PrimitiveList.Boolean.factory));
        public static final org.capnproto.PrimitiveList.Byte.Reader INT8_LIST_CONST =
                (new org.capnproto.AnyPointer.Reader(Schemas.b_98a7f62c2cd81ca4,28,0x7fffffff).getAs(org.capnproto.PrimitiveList.Byte.factory));
        public static final org.capnproto.PrimitiveList.Short.Reader INT16_LIST_CONST =
                (new org.capnproto.AnyPointer.Reader(Schemas.b_a855dfc33557b545,28,0x7fffffff).getAs(org.capnproto.PrimitiveList.Short.factory));
        public static final org.capnproto.PrimitiveList.Int.Reader INT32_LIST_CONST =
                (new org.capnproto.AnyPointer.Reader(Schemas.b_ea7a412cb73aeaf9,28,0x7fffffff).getAs(org.capnproto.PrimitiveList.Int.factory));
        public static final org.capnproto.PrimitiveList.Long.Reader INT64_LIST_CONST =
                (new org.capnproto.AnyPointer.Reader(Schemas.b_9c62a28ea479f4d6,28,0x7fffffff).getAs(org.capnproto.PrimitiveList.Long.factory));
        public static final org.capnproto.PrimitiveList.Byte.Reader UINT8_LIST_CONST =
                (new org.capnproto.AnyPointer.Reader(Schemas.b_ba6411c2fa3b0647,28,0x7fffffff).getAs(org.capnproto.PrimitiveList.Byte.factory));
        public static final org.capnproto.PrimitiveList.Short.Reader UINT16_LIST_CONST =
                (new org.capnproto.AnyPointer.Reader(Schemas.b_dfe97451a88a9a9f,29,0x7fffffff).getAs(org.capnproto.PrimitiveList.Short.factory));
        public static final org.capnproto.PrimitiveList.Int.Reader UINT32_LIST_CONST =
                (new org.capnproto.AnyPointer.Reader(Schemas.b_f5a94c7841e8f5c0,29,0x7fffffff).getAs(org.capnproto.PrimitiveList.Int.factory));
        public static final org.capnproto.PrimitiveList.Long.Reader UINT64_LIST_CONST =
                (new org.capnproto.AnyPointer.Reader(Schemas.b_ec8636a9fa084372,29,0x7fffffff).getAs(org.capnproto.PrimitiveList.Long.factory));
        public static final org.capnproto.PrimitiveList.Float.Reader FLOAT32_LIST_CONST =
                (new org.capnproto.AnyPointer.Reader(Schemas.b_82df939abbe32952,29,0x7fffffff).getAs(org.capnproto.PrimitiveList.Float.factory));
        public static final org.capnproto.PrimitiveList.Double.Reader FLOAT64_LIST_CONST =
                (new org.capnproto.AnyPointer.Reader(Schemas.b_8b96d4ad472f653c,29,0x7fffffff).getAs(org.capnproto.PrimitiveList.Double.factory));
        public static final org.capnproto.TextList.Reader TEXT_LIST_CONST =
                (new org.capnproto.AnyPointer.Reader(Schemas.b_bd1464b64f4fcf4b,28,0x7fffffff).getAs(org.capnproto.TextList.factory));
        public static final org.capnproto.DataList.Reader DATA_LIST_CONST =
                (new org.capnproto.AnyPointer.Reader(Schemas.b_adb4e0015b76502a,28,0x7fffffff).getAs(org.capnproto.DataList.factory));
        public static final org.capnproto.StructList.Reader<Test.TestAllTypes.Reader> STRUCT_LIST_CONST =
                (new org.capnproto.AnyPointer.Reader(Schemas.b_88dfca8a4ba6b3cb,29,0x7fffffff).getAs(Test.TestAllTypes.listFactory));
        public static final org.capnproto.EnumList.Reader<Test.TestEnum> ENUM_LIST_CONST =
                (new org.capnproto.AnyPointer.Reader(Schemas.b_b7be855ba17af79f,28,0x7fffffff).getAs(new org.capnproto.EnumList.Factory<Test.TestEnum>(Test.TestEnum.values())));
    }


    public static final int GLOBAL_INT = 12345;

    public static final class Schemas {
        public static final org.capnproto.SegmentReader b_fec9621807ad4d1b =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u001b\u004d\u00ad\u0007\u0018\u0062\u00c9\u00fe" +
                                "\u000b\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00a2\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0019\u0000\u0000\u0000\u00c7\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0045" +
                                "\u006e\u0075\u006d\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0020\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0059\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0051\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0049\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0041\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0039\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0031\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0061\u0072\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0061\u007a\u0000\u0000\u0000\u0000\u0000" +
                                "\u0071\u0075\u0078\u0000\u0000\u0000\u0000\u0000" +
                                "\u0071\u0075\u0075\u0078\u0000\u0000\u0000\u0000" +
                                "\u0063\u006f\u0072\u0067\u0065\u0000\u0000\u0000" +
                                "\u0067\u0072\u0061\u0075\u006c\u0074\u0000\u0000" +
                                "\u0067\u0061\u0072\u0070\u006c\u0079\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_a0af4a1714b100a7 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u000b\u0000\u0000\u0000\u0001\u0000\u0006\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u0013\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00c2\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0019\u0000\u0000\u0000\u003f\u0007\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0041" +
                                "\u006c\u006c\u0054\u0079\u0070\u0065\u0073\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0084\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u008d\u0003\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u008c\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0098\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0095\u0003\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0094\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00a0\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009d\u0003\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009c\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00a8\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a5\u0003\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a4\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00b0\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ad\u0003\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ac\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00b8\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b5\u0003\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b4\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00c0\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00bd\u0003\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00bc\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00c8\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0007\u0000\u0000\u0000\u0009\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00c5\u0003\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00c4\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00d0\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00cd\u0003\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00cc\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00d8\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0009\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0009\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d5\u0003\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d4\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00e0\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\n\u0000\u0000\u0000\u0008\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\n\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00dd\u0003\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00dc\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00e8\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000b\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u000b\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e5\u0003\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e4\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00f0\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u000c\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ed\u0003\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ec\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00f8\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\r\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f5\u0003\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f4\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0000\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u000e\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00fd\u0003\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00fc\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0008\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000f\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u000f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0004\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0010\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0004\u0000\u0000\u007a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0018\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0011\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0011\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0004\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0014\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0030\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0012\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0004\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002c\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0048\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0013\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0013\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0045\u0004\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0044\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0060\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0006\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0014\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u005d\u0004\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\\\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0078\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0015\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0015\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0004\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0090\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0016\u0000\u0000\u0000\u0008\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0016\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u008d\u0004\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u008c\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00a8\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0017\u0000\u0000\u0000\u0009\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0017\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a5\u0004\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a4\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00c0\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0018\u0000\u0000\u0000\n\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0018\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00bd\u0004\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00bc\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00d8\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0019\u0000\u0000\u0000\u000b\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0019\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d5\u0004\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d4\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00f0\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u001a\u0000\u0000\u0000\u000c\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ed\u0004\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ec\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0008\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u001b\u0000\u0000\u0000\r\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001b\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0005\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0005\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0020\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u001c\u0000\u0000\u0000\u000e\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001c\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0005\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001c\u0005\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0038\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u001d\u0000\u0000\u0000\u000f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001d\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0035\u0005\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0034\u0005\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0050\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u001e\u0000\u0000\u0000\u0010\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001e\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004d\u0005\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004c\u0005\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0068\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u001f\u0000\u0000\u0000\u0011\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u0005\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0005\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0080\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0020\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0020\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007d\u0005\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007c\u0005\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0098\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0076\u006f\u0069\u0064\u0046\u0069\u0065\u006c" +
                                "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u006f\u006f\u006c\u0046\u0069\u0065\u006c" +
                                "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0038\u0046\u0069\u0065\u006c" +
                                "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0031\u0036\u0046\u0069\u0065" +
                                "\u006c\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0033\u0032\u0046\u0069\u0065" +
                                "\u006c\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0036\u0034\u0046\u0069\u0065" +
                                "\u006c\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0049\u006e\u0074\u0038\u0046\u0069\u0065" +
                                "\u006c\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0049\u006e\u0074\u0031\u0036\u0046\u0069" +
                                "\u0065\u006c\u0064\u0000\u0000\u0000\u0000\u0000" +
                                "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0049\u006e\u0074\u0033\u0032\u0046\u0069" +
                                "\u0065\u006c\u0064\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0049\u006e\u0074\u0036\u0034\u0046\u0069" +
                                "\u0065\u006c\u0064\u0000\u0000\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0066\u006c\u006f\u0061\u0074\u0033\u0032\u0046" +
                                "\u0069\u0065\u006c\u0064\u0000\u0000\u0000\u0000" +
                                "\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0066\u006c\u006f\u0061\u0074\u0036\u0034\u0046" +
                                "\u0069\u0065\u006c\u0064\u0000\u0000\u0000\u0000" +
                                "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c" +
                                "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c" +
                                "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0074\u0072\u0075\u0063\u0074\u0046\u0069" +
                                "\u0065\u006c\u0064\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u006e\u0075\u006d\u0046\u0069\u0065\u006c" +
                                "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001b\u004d\u00ad\u0007\u0018\u0062\u00c9\u00fe" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063" +
                                "\u0065\u0046\u0069\u0065\u006c\u0064\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0076\u006f\u0069\u0064\u004c\u0069\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u006f\u006f\u006c\u004c\u0069\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0038\u004c\u0069\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0031\u0036\u004c\u0069\u0073" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0033\u0032\u004c\u0069\u0073" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0036\u0034\u004c\u0069\u0073" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0049\u006e\u0074\u0038\u004c\u0069\u0073" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0049\u006e\u0074\u0031\u0036\u004c\u0069" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0049\u006e\u0074\u0033\u0032\u004c\u0069" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0049\u006e\u0074\u0036\u0034\u004c\u0069" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0066\u006c\u006f\u0061\u0074\u0033\u0032\u004c" +
                                "\u0069\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0066\u006c\u006f\u0061\u0074\u0036\u0034\u004c" +
                                "\u0069\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0078\u0074\u004c\u0069\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0061\u0074\u0061\u004c\u0069\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0074\u0072\u0075\u0063\u0074\u004c\u0069" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u006e\u0075\u006d\u004c\u0069\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001b\u004d\u00ad\u0007\u0018\u0062\u00c9\u00fe" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_e37a20a013e0cd99 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0099\u00cd\u00e0\u0013\u00a0\u0020\u007a\u00e3" +
                                "\u000b\u0000\u0000\u0000\u0001\u0000\u0006\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u0014\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00c2\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0019\u0000\u0000\u0000\u0077\u0007\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0044" +
                                "\u0065\u0066\u0061\u0075\u006c\u0074\u0073\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0088\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a9\u0003\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a8\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00b4\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b1\u0003\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b0\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00bc\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b9\u0003\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b8\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00c4\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00c1\u0003\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00c0\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00cc\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00c9\u0003\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00c8\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00d4\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d1\u0003\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d0\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00dc\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0006\u0000\u0000\u0000\u0010\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d9\u0003\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d8\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00e4\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0007\u0000\u0000\u0000\u0009\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e1\u0003\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e0\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00ec\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e9\u0003\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e8\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00f4\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0009\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0009\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f1\u0003\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f0\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00fc\u0003\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\n\u0000\u0000\u0000\u0008\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\n\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f9\u0003\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f8\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0004\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000b\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u000b\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0004\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000c\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u000c\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0009\u0004\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\r\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\r\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0004\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0014\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0020\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u000e\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0021\u0004\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000f\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u000f\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004d\u0007\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004c\u0007\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0058\u0007\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0010\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0055\u0007\u0000\u0000\u007a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0054\u0007\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0060\u0007\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0011\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0011\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u005d\u0007\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\\\u0007\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0078\u0007\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0012\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0012\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0007\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0007\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0090\u0007\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0013\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0013\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0091\u0007\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0090\u0007\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00ac\u0007\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0006\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0014\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ad\u0007\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ac\u0007\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00c8\u0007\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0015\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0015\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00c9\u0007\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00c8\u0007\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00e4\u0007\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0016\u0000\u0000\u0000\u0008\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0016\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e5\u0007\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e4\u0007\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0000\u0008\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0017\u0000\u0000\u0000\u0009\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0017\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0008\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0008\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0020\u0008\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0018\u0000\u0000\u0000\n\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0018\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0021\u0008\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0008\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u003c\u0008\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0019\u0000\u0000\u0000\u000b\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0019\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u003d\u0008\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u003c\u0008\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0058\u0008\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u001a\u0000\u0000\u0000\u000c\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001a\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0059\u0008\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0058\u0008\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0074\u0008\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u001b\u0000\u0000\u0000\r\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001b\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0008\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0008\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0090\u0008\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u001c\u0000\u0000\u0000\u000e\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001c\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0095\u0008\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0094\u0008\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00b0\u0008\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u001d\u0000\u0000\u0000\u000f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001d\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00bd\u0008\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00bc\u0008\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00d8\u0008\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u001e\u0000\u0000\u0000\u0010\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001e\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ed\u0008\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ec\u0008\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0008\u0009\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u001f\u0000\u0000\u0000\u0011\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001f\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0021\u0009\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0009\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u003c\u0009\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0020\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0020\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0081\n\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0080\n\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u009c\n\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0021\u0000\u0000\u0000\u0013\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0021\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009d\n\u0000\u0000\u0072\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009c\n\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00b8\n\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0076\u006f\u0069\u0064\u0046\u0069\u0065\u006c" +
                                "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u006f\u006f\u006c\u0046\u0069\u0065\u006c" +
                                "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0038\u0046\u0069\u0065\u006c" +
                                "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u0085\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0031\u0036\u0046\u0069\u0065" +
                                "\u006c\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u00c7\u00cf\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0033\u0032\u0046\u0069\u0065" +
                                "\u006c\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u00b2\u009e\u0043\u00ff" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0036\u0034\u0046\u0069\u0065" +
                                "\u006c\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0087\u0020\u00f2\u0079\u00b7\u008f\u00ff\u00ff" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0049\u006e\u0074\u0038\u0046\u0069\u0065" +
                                "\u006c\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u00ea\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0049\u006e\u0074\u0031\u0036\u0046\u0069" +
                                "\u0065\u006c\u0064\u0000\u0000\u0000\u0000\u0000" +
                                "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0007\u0000\u006e\u00b2\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0049\u006e\u0074\u0033\u0032\u0046\u0069" +
                                "\u0065\u006c\u0064\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0014\u006a\n\u00ce" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0049\u006e\u0074\u0036\u0034\u0046\u0069" +
                                "\u0065\u006c\u0064\u0000\u0000\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d2\n\u001f\u00eb\u008c\u00a9\u0054\u00ab" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0066\u006c\u006f\u0061\u0074\u0033\u0032\u0046" +
                                "\u0069\u0065\u006c\u0064\u0000\u0000\u0000\u0000" +
                                "\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\n\u0000\u0000\u0000\u0000\u0050\u009a\u0044" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0066\u006c\u006f\u0061\u0074\u0036\u0034\u0046" +
                                "\u0069\u0065\u006c\u0064\u0000\u0000\u0000\u0000" +
                                "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u00bb\u00e0\u00c0\u0082\u008b\u00b5\u00c9" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c" +
                                "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c" +
                                "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
                                "\u0062\u0061\u0072\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0074\u0072\u0075\u0063\u0074\u0046\u0069" +
                                "\u0065\u006c\u0064\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0006\u0000\u0013\u0000" +
                                "\u0001\u00f4\u0080\r\u000e\u0010\u004c\u00fb" +
                                "\u004e\u0073\u00e8\u0038\u00a6\u0033\u0000\u0000" +
                                "\u005a\u0000\u00d2\u0004\u0014\u0088\u0062\u0003" +
                                "\u00d2\n\u006f\u0012\u0021\u0019\u00cc\u0004" +
                                "\u005f\u0070\u0009\u00af\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0090\u0075\u0040" +
                                "\u0049\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0049\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
                                "\u0048\u0000\u0000\u0000\u0006\u0000\u0013\u0000" +
                                "\u0019\u0001\u0000\u0000\u0018\u0000\u0000\u0000" +
                                "\u0015\u0001\u0000\u0000\u0029\u0000\u0000\u0000" +
                                "\u0015\u0001\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0015\u0001\u0000\u0000\u0023\u0000\u0000\u0000" +
                                "\u0015\u0001\u0000\u0000\u0024\u0000\u0000\u0000" +
                                "\u0019\u0001\u0000\u0000\u0025\u0000\u0000\u0000" +
                                "\u0025\u0001\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0025\u0001\u0000\u0000\u0023\u0000\u0000\u0000" +
                                "\u0025\u0001\u0000\u0000\u0024\u0000\u0000\u0000" +
                                "\u0029\u0001\u0000\u0000\u0025\u0000\u0000\u0000" +
                                "\u0035\u0001\u0000\u0000\u0034\u0000\u0000\u0000" +
                                "\u003d\u0001\u0000\u0000\u0035\u0000\u0000\u0000" +
                                "\u0051\u0001\u0000\u0000\u001e\u0000\u0000\u0000" +
                                "\u0065\u0001\u0000\u0000\u001e\u0000\u0000\u0000" +
                                "\u0079\u0001\u0000\u0000\u005f\u0002\u0000\u0000" +
                                "\u00bd\u0002\u0000\u0000\u001b\u0000\u0000\u0000" +
                                "\u0062\u0061\u007a\u0000\u0000\u0000\u0000\u0000" +
                                "\u0071\u0075\u0078\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0049\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0044\u0000\u0000\u0000\u0006\u0000\u0013\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006e\u0065\u0073\u0074\u0065\u0064\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0049\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0072\u0065\u0061\u006c\u006c\u0079\u0020\u006e" +
                                "\u0065\u0073\u0074\u0065\u0064\u0000\u0000\u0000" +
                                "\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u00de\u0080\u007f\u0000\u0000\u0000\u0000" +
                                "\u00d2\u0004\u00d2\u00e9\u0000\u0080\u00ff\u007f" +
                                "\u004e\u0061\u00bc\u0000\u0040\u00d3\u00a0\u00fa" +
                                "\u0000\u0000\u0000\u0080\u00ff\u00ff\u00ff\u007f" +
                                "\u0079\u00df\r\u0086\u0048\u0070\u0000\u0000" +
                                "\u002e\u0075\u0013\u00fd\u008a\u0096\u00fd\u00ff" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0080" +
                                "\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u007f" +
                                "\u000c\"\u0000\u00ff\u0000\u0000\u0000\u0000" +
                                "\u00d2\u0004\u002e\u0016\u0000\u0000\u00ff\u00ff" +
                                "\u004e\u0061\u00bc\u0000\u00c0\u002c\u005f\u0005" +
                                "\u0000\u0000\u0000\u0000\u00ff\u00ff\u00ff\u00ff" +
                                "\u0079\u00df\r\u0086\u0048\u0070\u0000\u0000" +
                                "\u00d2\u008a\u00ec\u0002\u0075\u0069\u0002\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff" +
                                "\u0000\u0000\u0000\u0000\u0038\u00b4\u0096\u0049" +
                                "\u00c2\u00bd\u00f0\u007c\u00c2\u00bd\u00f0\u00fc" +
                                "\u00ea\u001c\u0008\u0002\u00ea\u001c\u0008\u0082" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0040\u00de\u0077\u0083\u0021\u0012\u00dc\u0042" +
                                "\u0029\u0090\u0023\u00ca\u00e5\u00c8\u0076\u007f" +
                                "\u0029\u0090\u0023\u00ca\u00e5\u00c8\u0076\u00ff" +
                                "\u0091\u00f7\u0050\u0037\u009e\u0078\u0066\u0000" +
                                "\u0091\u00f7\u0050\u0037\u009e\u0078\u0066\u0080" +
                                "\u0009\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0071\u0075\u0075\u0078\u0000\u0000\u0000\u0000" +
                                "\u0063\u006f\u0072\u0067\u0065\u0000\u0000\u0000" +
                                "\u0067\u0072\u0061\u0075\u006c\u0074\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0067\u0061\u0072\u0070\u006c\u0079\u0000\u0000" +
                                "\u0077\u0061\u006c\u0064\u006f\u0000\u0000\u0000" +
                                "\u0066\u0072\u0065\u0064\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0006\u0000\u0013\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0011\u0001\u0000\u0000\u007a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b5\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0059\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0078\u0020\u0073\u0074\u0072\u0075\u0063\u0074" +
                                "\u006c\u0069\u0073\u0074\u0020\u0031\u0000\u0000" +
                                "\u0078\u0020\u0073\u0074\u0072\u0075\u0063\u0074" +
                                "\u006c\u0069\u0073\u0074\u0020\u0032\u0000\u0000" +
                                "\u0078\u0020\u0073\u0074\u0072\u0075\u0063\u0074" +
                                "\u006c\u0069\u0073\u0074\u0020\u0033\u0000\u0000" +
                                "\u0003\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
                                "\u0065\u006e\u0075\u006d\u0046\u0069\u0065\u006c" +
                                "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001b\u004d\u00ad\u0007\u0018\u0062\u00c9\u00fe" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000f\u0000\u0005\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063" +
                                "\u0065\u0046\u0069\u0065\u006c\u0064\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0076\u006f\u0069\u0064\u004c\u0069\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0030\u0000\u0000\u0000" +
                                "\u0062\u006f\u006f\u006c\u004c\u0069\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0021\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0038\u004c\u0069\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u006f\u0091\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0031\u0036\u004c\u0069\u0073" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000" +
                                "\u0067\u002b\u0099\u00d4\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0033\u0032\u004c\u0069\u0073" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0014\u0000\u0000\u0000" +
                                "\u00c7\u006b\u009f\u0006\u0039\u0094\u0060\u00f9" +
                                "\u0069\u006e\u0074\u0036\u0034\u004c\u0069\u0073" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0015\u0000\u0000\u0000" +
                                "\u00c7\u0071\u00c4\u002b\u00ab\u0075\u006b\u000f" +
                                "\u0039\u008e\u003b\u00d4\u0054\u008a\u0094\u00f0" +
                                "\u0075\u0049\u006e\u0074\u0038\u004c\u0069\u0073" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u006f\u00de\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0049\u006e\u0074\u0031\u0036\u004c\u0069" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000" +
                                "\u0035\u0082\u009c\u00ad\u0000\u0000\u0000\u0000" +
                                "\u0075\u0049\u006e\u0074\u0033\u0032\u004c\u0069" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u000c\u0000\u0000\u0000" +
                                "\u0055\u00a1\u00ae\u00c6\u0000\u0000\u0000\u0000" +
                                "\u0075\u0049\u006e\u0074\u0036\u0034\u004c\u0069" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\r\u0000\u0000\u0000" +
                                "\u00c7\u0071\u00ac\u00b5\u00af\u0098\u0032\u009a" +
                                "\u0066\u006c\u006f\u0061\u0074\u0033\u0032\u004c" +
                                "\u0069\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0024\u0000\u0000\u0000" +
                                "\u0000\u009c\u00ad\u0045\u0000\u0000\u0080\u007f" +
                                "\u0000\u0000\u0080\u00ff\u0000\u0000\u00c0\u007f" +
                                "\u0066\u006c\u006f\u0061\u0074\u0036\u0034\u004c" +
                                "\u0069\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0025\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u00c0\u0061\u00be\u0040" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u00f0\u007f" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u00f0\u00ff" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u00f8\u007f" +
                                "\u0074\u0065\u0078\u0074\u004c\u0069\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u001e\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0070\u006c\u0075\u0067\u0068\u0000\u0000\u0000" +
                                "\u0078\u0079\u007a\u007a\u0079\u0000\u0000\u0000" +
                                "\u0074\u0068\u0075\u0064\u0000\u0000\u0000\u0000" +
                                "\u0064\u0061\u0074\u0061\u004c\u0069\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u001e\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u006f\u006f\u0070\u0073\u0000\u0000\u0000\u0000" +
                                "\u0065\u0078\u0068\u0061\u0075\u0073\u0074\u0065" +
                                "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0072\u0066\u0063\u0033\u0030\u0039\u0032\u0000" +
                                "\u0073\u0074\u0072\u0075\u0063\u0074\u004c\u0069" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u005f\u0002\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0006\u0000\u0013\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0011\u0001\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b5\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0059\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0074\u0072\u0075\u0063\u0074\u006c\u0069" +
                                "\u0073\u0074\u0020\u0031\u0000\u0000\u0000\u0000" +
                                "\u0073\u0074\u0072\u0075\u0063\u0074\u006c\u0069" +
                                "\u0073\u0074\u0020\u0032\u0000\u0000\u0000\u0000" +
                                "\u0073\u0074\u0072\u0075\u0063\u0074\u006c\u0069" +
                                "\u0073\u0074\u0020\u0033\u0000\u0000\u0000\u0000" +
                                "\u0065\u006e\u0075\u006d\u004c\u0069\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001b\u004d\u00ad\u0007\u0018\u0062\u00c9\u00fe" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063" +
                                "\u0065\u004c\u0069\u0073\u0074\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_89dcbc901a007c27 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0027\u007c\u0000\u001a\u0090\u00bc\u00dc\u0089" +
                                "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0041" +
                                "\u006e\u0079\u0050\u006f\u0069\u006e\u0074\u0065" +
                                "\u0072\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0061\u006e\u0079\u0050\u006f\u0069\u006e\u0074" +
                                "\u0065\u0072\u0046\u0069\u0065\u006c\u0064\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_d492da5e899de702 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0002\u00e7\u009d\u0089\u005e\u00da\u0092\u00d4" +
                                "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u0009\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u00ff\u0001\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004f" +
                                "\u0075\u0074\u004f\u0066\u004f\u0072\u0064\u0065" +
                                "\u0072\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ed\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00f4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f1\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ec\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00f8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f5\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00fc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f9\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0000\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00fd\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0004\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0001\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00fc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0008\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0006\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0007\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0009\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0008\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0001\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0071\u0075\u0078\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0067\u0072\u0061\u0075\u006c\u0074\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0061\u0072\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0063\u006f\u0072\u0067\u0065\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0077\u0061\u006c\u0064\u006f\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0071\u0075\u0075\u0078\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0067\u0061\u0072\u0070\u006c\u0079\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0061\u007a\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_f4c75879897a4674 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0074\u0046\u007a\u0089\u0079\u0058\u00c7\u00f4" +
                                "\u000b\u0000\u0000\u0000\u0001\u0000\u0008\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00aa\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0019\u0000\u0000\u0000\u00a7\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0055" +
                                "\u006e\u0069\u006f\u006e\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0030\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u002f\u0077\u004f\u00fb\u0016\u0080\u0009\u00c2" +
                                "\u0041\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u002a\u0091\u00f5\u007b\u00ae\u008f\u001c\u00a9" +
                                "\u0029\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0074\u00e3\u005b\u00e3\u0052\u00a3\u007b\u008b" +
                                "\u0011\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u004b\u007d\u00e0\u0068\u00ac\u00fe\u0093\u00e9" +
                                "\u00f9\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0080\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e1\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00dc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00e8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0027\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e5\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00ec\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0083\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0028\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e9\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00f0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0005\u0000\u0000\u0000\u0084\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0029\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ed\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00f4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0006\u0000\u0000\u0000\u0085\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f1\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ec\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00f8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0007\u0000\u0000\u0000\u0086\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u002b\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f5\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00fc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0087\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u002c\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f9\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0000\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000b\u0000\u0000\u0000\u0023\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0031\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00fd\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0004\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0075\u006e\u0069\u006f\u006e\u0030\u0000\u0000" +
                                "\u0075\u006e\u0069\u006f\u006e\u0031\u0000\u0000" +
                                "\u0075\u006e\u0069\u006f\u006e\u0032\u0000\u0000" +
                                "\u0075\u006e\u0069\u006f\u006e\u0033\u0000\u0000" +
                                "\u0062\u0069\u0074\u0030\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0069\u0074\u0032\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0069\u0074\u0033\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0069\u0074\u0034\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0069\u0074\u0035\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0069\u0074\u0036\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0069\u0074\u0037\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0079\u0074\u0065\u0030\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_c2098016fb4f772f =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u002f\u0077\u004f\u00fb\u0016\u0080\u0009\u00c2" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0008\u0000" +
                                "\u0074\u0046\u007a\u0089\u0079\u0058\u00c7\u00f4" +
                                "\u0002\u0000\u0007\u0000\u0001\u0000\u000e\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00e2\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0019\u0000\u0000\u0000\u0017\u0003\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0055" +
                                "\u006e\u0069\u006f\u006e\u002e\u0075\u006e\u0069" +
                                "\u006f\u006e\u0030\u0000\u0000\u0000\u0000\u0000" +
                                "\u0038\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0079\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0080\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u00fe\u00ff\u0040\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007d\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0078\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0084\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u00fd\u00ff\u0008\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0081\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0088\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u00fc\u00ff\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0085\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0080\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u008c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0004\u0000\u00fb\u00ff\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0089\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0084\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0090\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0005\u0000\u00fa\u00ff\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0009\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u008d\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0088\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0094\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0006\u0000\u00f9\u00ff\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\n\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0091\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u008c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0098\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0007\u0000\u00f8\u00ff\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u000b\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0095\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0090\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u009c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0008\u0000\u00f7\u00ff\u0040\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u000c\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0099\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0094\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00a0\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0009\u0000\u00f6\u00ff\u0008\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\r\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009d\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0098\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00a4\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\n\u0000\u00f5\u00ff\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u000e\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a1\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00a8\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000b\u0000\u00f4\u00ff\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u000f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a5\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a0\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00ac\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000c\u0000\u00f3\u00ff\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0010\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a9\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a4\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00b0\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\r\u0000\u00f2\u00ff\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0011\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ad\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a8\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00b4\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0075\u0030\u0066\u0030\u0073\u0030\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0030\u0066\u0030\u0073\u0031\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0030\u0066\u0030\u0073\u0038\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0030\u0066\u0030\u0073\u0031\u0036\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0030\u0066\u0030\u0073\u0033\u0032\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0030\u0066\u0030\u0073\u0036\u0034\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0030\u0066\u0030\u0073\u0070\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0030\u0066\u0031\u0073\u0030\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0030\u0066\u0031\u0073\u0031\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0030\u0066\u0031\u0073\u0038\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0030\u0066\u0031\u0073\u0031\u0036\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0030\u0066\u0031\u0073\u0033\u0032\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0030\u0066\u0031\u0073\u0036\u0034\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0030\u0066\u0031\u0073\u0070\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_a91c8fae7bf5912a =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u002a\u0091\u00f5\u007b\u00ae\u008f\u001c\u00a9" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0008\u0000" +
                                "\u0074\u0046\u007a\u0089\u0079\u0058\u00c7\u00f4" +
                                "\u0002\u0000\u0007\u0000\u0001\u0000\u0014\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00e2\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0019\u0000\u0000\u0000\u0067\u0004\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0055" +
                                "\u006e\u0069\u006f\u006e\u002e\u0075\u006e\u0069" +
                                "\u006f\u006e\u0031\u0000\u0000\u0000\u0000\u0000" +
                                "\u0050\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0013\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0021\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001c\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0028\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u00fe\u00ff\u0081\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0014\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0025\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u00fd\u00ff\u0081\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0015\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0030\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u00fc\u00ff\u0011\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0016\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0028\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0034\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0004\u0000\u00fb\u00ff\u0011\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0017\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0031\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002c\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0038\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0005\u0000\u00fa\u00ff\u0009\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0018\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0035\u0002\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0030\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u003c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0006\u0000\u00f9\u00ff\u0009\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0019\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0039\u0002\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0034\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0040\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0007\u0000\u00f8\u00ff\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u003d\u0002\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0038\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0044\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0008\u0000\u00f7\u00ff\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001b\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0041\u0002\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u003c\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0048\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0009\u0000\u00f6\u00ff\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001c\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0045\u0002\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0040\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u004c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\n\u0000\u00f5\u00ff\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001d\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0049\u0002\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0044\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0050\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000b\u0000\u00f4\u00ff\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001e\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004d\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0048\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0054\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000c\u0000\u00f3\u00ff\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u001f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0051\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004c\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0058\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\r\u0000\u00f2\u00ff\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0020\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0055\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0050\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\\\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000e\u0000\u00f1\u00ff\u0081\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0021\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0059\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0054\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0060\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000f\u0000\u00f0\u00ff\u0011\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u005d\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0058\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0064\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0010\u0000\u00ef\u00ff\u0009\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0023\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0061\u0002\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\\\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0068\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0011\u0000\u00ee\u00ff\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0024\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u0002\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0060\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u006c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0012\u0000\u00ed\u00ff\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0025\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u0002\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0070\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0013\u0000\u00ec\u00ff\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0026\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006d\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0068\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0074\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0075\u0031\u0066\u0030\u0073\u0030\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0030\u0073\u0031\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0031\u0073\u0031\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0030\u0073\u0038\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0031\u0073\u0038\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0030\u0073\u0031\u0036\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0031\u0073\u0031\u0036\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0030\u0073\u0033\u0032\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0031\u0073\u0033\u0032\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0030\u0073\u0036\u0034\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0031\u0073\u0036\u0034\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0030\u0073\u0070\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0031\u0073\u0070\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0032\u0073\u0030\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0032\u0073\u0031\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0032\u0073\u0038\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0032\u0073\u0031\u0036\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0032\u0073\u0033\u0032\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0032\u0073\u0036\u0034\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0031\u0066\u0032\u0073\u0070\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_8b7ba352e35be374 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0074\u00e3\u005b\u00e3\u0052\u00a3\u007b\u008b" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0008\u0000" +
                                "\u0074\u0046\u007a\u0089\u0079\u0058\u00c7\u00f4" +
                                "\u0002\u0000\u0007\u0000\u0001\u0000\u0005\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00e2\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0019\u0000\u0000\u0000\u001f\u0001\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0055" +
                                "\u006e\u0069\u006f\u006e\u002e\u0075\u006e\u0069" +
                                "\u006f\u006e\u0032\u0000\u0000\u0000\u0000\u0000" +
                                "\u0014\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0004\u0000\u00ff\u00ff\u0000\u0001\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u002d\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u00fe\u00ff\u0021\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u002f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0081\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0088\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u00fd\u00ff\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0085\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0080\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u00fc\u00ff\n\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0034\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0089\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0084\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0090\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u00fb\u00ff\u0006\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0036\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u008d\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0088\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0094\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0075\u0032\u0066\u0030\u0073\u0031\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0032\u0066\u0030\u0073\u0038\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0032\u0066\u0030\u0073\u0031\u0036\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0032\u0066\u0030\u0073\u0033\u0032\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0032\u0066\u0030\u0073\u0036\u0034\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_e993feac68e07d4b =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u004b\u007d\u00e0\u0068\u00ac\u00fe\u0093\u00e9" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0008\u0000" +
                                "\u0074\u0046\u007a\u0089\u0079\u0058\u00c7\u00f4" +
                                "\u0002\u0000\u0007\u0000\u0001\u0000\u0005\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00e2\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0019\u0000\u0000\u0000\u001f\u0001\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0055" +
                                "\u006e\u0069\u006f\u006e\u002e\u0075\u006e\u0069" +
                                "\u006f\u006e\u0033\u0000\u0000\u0000\u0000\u0000" +
                                "\u0014\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0004\u0000\u00ff\u00ff\u0001\u0001\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u002e\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u00fe\u00ff\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0030\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0081\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0088\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u00fd\u00ff\u0013\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0033\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0085\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0080\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u00fc\u00ff\u000b\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0035\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0089\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0084\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0090\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u00fb\u00ff\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0037\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u008d\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0088\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0094\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0075\u0033\u0066\u0030\u0073\u0031\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0033\u0066\u0030\u0073\u0038\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0033\u0066\u0030\u0073\u0031\u0036\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0033\u0066\u0030\u0073\u0033\u0032\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0033\u0066\u0030\u0073\u0036\u0034\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_c90975a7a55e7035 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0035\u0070\u005e\u00a5\u00a7\u0075\u0009\u00c9" +
                                "\u000b\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00b2\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0019\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
                                "\u0072\u006f\u0075\u0070\u0073\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b9\u00b5\u00a9\u0010\u00eb\u004e\u00ec\u00f5" +
                                "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0067\u0072\u006f\u0075\u0070\u0073\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_f5ec4eeb10a9b5b9 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00b9\u00b5\u00a9\u0010\u00eb\u004e\u00ec\u00f5" +
                                "\u0016\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
                                "\u0035\u0070\u005e\u00a5\u00a7\u0075\u0009\u00c9" +
                                "\u0002\u0000\u0007\u0000\u0001\u0000\u0003\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0019\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
                                "\u0072\u006f\u0075\u0070\u0073\u002e\u0067\u0072" +
                                "\u006f\u0075\u0070\u0073\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\n\u00a1\u0013\u00f4\u00c4\u005b\u005b\u0082" +
                                "\u0045\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d9\u000f\u00ab\u00d9\u00bb\u003b\u007a\u00c1" +
                                "\u002d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u00fd\u00ff\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0023\u0026\u00ee\u009c\u0051\u0000\u007c\u0095" +
                                "\u0015\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0061\u007a\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0061\u0072\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_825b5bc4f413a10a =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\n\u00a1\u0013\u00f4\u00c4\u005b\u005b\u0082" +
                                "\u001d\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
                                "\u00b9\u00b5\u00a9\u0010\u00eb\u004e\u00ec\u00f5" +
                                "\u0002\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\n\u0001\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
                                "\u0072\u006f\u0075\u0070\u0073\u002e\u0067\u0072" +
                                "\u006f\u0075\u0070\u0073\u002e\u0066\u006f\u006f" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0061\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\\\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0068\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0060\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u006c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0070\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0009\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0063\u006f\u0072\u0067\u0065\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0067\u0072\u0061\u0075\u006c\u0074\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0067\u0061\u0072\u0070\u006c\u0079\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0071\u0075\u0075\u0078\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_c17a3bbbd9ab0fd9 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00d9\u000f\u00ab\u00d9\u00bb\u003b\u007a\u00c1" +
                                "\u001d\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
                                "\u00b9\u00b5\u00a9\u0010\u00eb\u004e\u00ec\u00f5" +
                                "\u0002\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\n\u0001\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
                                "\u0072\u006f\u0075\u0070\u0073\u002e\u0067\u0072" +
                                "\u006f\u0075\u0070\u0073\u002e\u0062\u0061\u007a" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0045\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0049\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0063\u006f\u0072\u0067\u0065\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0067\u0072\u0061\u0075\u006c\u0074\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0067\u0061\u0072\u0070\u006c\u0079\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_957c00519cee2623 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0023\u0026\u00ee\u009c\u0051\u0000\u007c\u0095" +
                                "\u001d\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
                                "\u00b9\u00b5\u00a9\u0010\u00eb\u004e\u00ec\u00f5" +
                                "\u0002\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\n\u0001\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
                                "\u0072\u006f\u0075\u0070\u0073\u002e\u0067\u0072" +
                                "\u006f\u0075\u0070\u0073\u002e\u0062\u0061\u0072" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0045\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0049\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0063\u006f\u0072\u0067\u0065\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0067\u0072\u0061\u0075\u006c\u0074\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0067\u0061\u0072\u0070\u006c\u0079\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_e7fb063c7e1b4fb0 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00b0\u004f\u001b\u007e\u003c\u0006\u00fb\u00e7" +
                                "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u000c\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00aa\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e9\u0000\u0000\u0000\u00a7\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004c" +
                                "\u0069\u0073\u0074\u0073\u0000\u0000\u0000\u0000" +
                                "\u0038\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0017\u006b\u0096\u0077\u0069\u0050\u0069\u00d0" +
                                "\u0069\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0079\u007e\u008b\u00e7\u0067\u0034\u0011\u00d6" +
                                "\u0065\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u003c\u00e9\u00b3\u003d\u0081\u0069\u003a\u00e4" +
                                "\u0061\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0095\u0081\u0013\u0038\u009e\u00fa\u0011\u0098" +
                                "\u005d\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u007b\u00f7\u0025\r\u00b3\u0039\u0020\u00a6" +
                                "\u005d\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0042\u0059\u00fd\u00d3\u0016\u006a\u008a\u008b" +
                                "\u005d\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0008\u0051\u00fb\u003d\u00f4\u0076\u00d9\u00ea" +
                                "\u005d\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0067\u0005\u00ba\u00ca\u00bd\u0007\u0091\u00ea" +
                                "\u0059\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0066\u0005\u0010\u00b4\u00f9\"\u0027\u00a5" +
                                "\u0059\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u00bb\u00ef\u00ac\u0009\u006d\u003e\u0015\u00e6" +
                                "\u0059\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u00df\u00aa\u00fd\u0013\u00e8\u00f8\u00a5\u0094" +
                                "\u0059\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u00f4\u0045\u001e\u00d7\u0063\u0030\u002e\u00f8" +
                                "\u0059\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u00e3\u00c4\u0030\u00b9\u004d\u004b\u00fe\u00d3" +
                                "\u0059\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\"\u0000\u0086\u001f\u0062\u00bf\u007d\u00a7" +
                                "\u0059\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0053\u0074\u0072\u0075\u0063\u0074\u0030\u0000" +
                                "\u0053\u0074\u0072\u0075\u0063\u0074\u0031\u0000" +
                                "\u0053\u0074\u0072\u0075\u0063\u0074\u0038\u0000" +
                                "\u0053\u0074\u0072\u0075\u0063\u0074\u0031\u0036" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0053\u0074\u0072\u0075\u0063\u0074\u0033\u0032" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0053\u0074\u0072\u0075\u0063\u0074\u0036\u0034" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0000" +
                                "\u0053\u0074\u0072\u0075\u0063\u0074\u0030\u0063" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0053\u0074\u0072\u0075\u0063\u0074\u0031\u0063" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0053\u0074\u0072\u0075\u0063\u0074\u0038\u0063" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0053\u0074\u0072\u0075\u0063\u0074\u0031\u0036" +
                                "\u0063\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0053\u0074\u0072\u0075\u0063\u0074\u0033\u0032" +
                                "\u0063\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0053\u0074\u0072\u0075\u0063\u0074\u0036\u0034" +
                                "\u0063\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0063" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0030\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0041\u0001\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u003c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0058\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0055\u0001\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0050\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u006c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u0001\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0080\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007d\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0078\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0094\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0091\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u008c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00a8\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0005\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a5\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a0\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00bc\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b9\u0001\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b4\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00d0\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0007\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00cd\u0001\u0000\u0000\u0072\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00cc\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00f8\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0008\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f5\u0001\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00f4\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0020\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0009\u0000\u0000\u0000\u0009\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0009\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0002\u0000\u0000\u007a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001c\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0048\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\n\u0000\u0000\u0000\n\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\n\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0045\u0002\u0000\u0000\u008a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0048\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0084\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000b\u0000\u0000\u0000\u000b\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u000b\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0081\u0002\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0080\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00ac\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u006c\u0069\u0073\u0074\u0030\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0017\u006b\u0096\u0077\u0069\u0050\u0069\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006c\u0069\u0073\u0074\u0031\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0079\u007e\u008b\u00e7\u0067\u0034\u0011\u00d6" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006c\u0069\u0073\u0074\u0038\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u003c\u00e9\u00b3\u003d\u0081\u0069\u003a\u00e4" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006c\u0069\u0073\u0074\u0031\u0036\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0095\u0081\u0013\u0038\u009e\u00fa\u0011\u0098" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006c\u0069\u0073\u0074\u0033\u0032\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007b\u00f7\u0025\r\u00b3\u0039\u0020\u00a6" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006c\u0069\u0073\u0074\u0036\u0034\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0042\u0059\u00fd\u00d3\u0016\u006a\u008a\u008b" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006c\u0069\u0073\u0074\u0050\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0051\u00fb\u003d\u00f4\u0076\u00d9\u00ea" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0033\u0032\u004c\u0069\u0073" +
                                "\u0074\u004c\u0069\u0073\u0074\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0078\u0074\u004c\u0069\u0073\u0074" +
                                "\u004c\u0069\u0073\u0074\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0074\u0072\u0075\u0063\u0074\u004c\u0069" +
                                "\u0073\u0074\u004c\u0069\u0073\u0074\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u006f\u006f\u006c\u004c\u0069\u0073\u0074" +
                                "\u004c\u0069\u0073\u0074\u004c\u0069\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u006e\u0075\u006d\u004c\u0069\u0073\u0074" +
                                "\u004c\u0069\u0073\u0074\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001b\u004d\u00ad\u0007\u0018\u0062\u00c9\u00fe" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_d069506977966b17 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0017\u006b\u0096\u0077\u0069\u0050\u0069\u00d0" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u00b0\u004f\u001b\u007e\u003c\u0006\u00fb\u00e7" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004c" +
                                "\u0069\u0073\u0074\u0073\u002e\u0053\u0074\u0072" +
                                "\u0075\u0063\u0074\u0030\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_d6113467e78b7e79 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0079\u007e\u008b\u00e7\u0067\u0034\u0011\u00d6" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u00b0\u004f\u001b\u007e\u003c\u0006\u00fb\u00e7" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004c" +
                                "\u0069\u0073\u0074\u0073\u002e\u0053\u0074\u0072" +
                                "\u0075\u0063\u0074\u0031\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_e43a69813db3e93c =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u003c\u00e9\u00b3\u003d\u0081\u0069\u003a\u00e4" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u00b0\u004f\u001b\u007e\u003c\u0006\u00fb\u00e7" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004c" +
                                "\u0069\u0073\u0074\u0073\u002e\u0053\u0074\u0072" +
                                "\u0075\u0063\u0074\u0038\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_9811fa9e38138195 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0095\u0081\u0013\u0038\u009e\u00fa\u0011\u0098" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u00b0\u004f\u001b\u007e\u003c\u0006\u00fb\u00e7" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004c" +
                                "\u0069\u0073\u0074\u0073\u002e\u0053\u0074\u0072" +
                                "\u0075\u0063\u0074\u0031\u0036\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_a62039b30d25f77b =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u007b\u00f7\u0025\r\u00b3\u0039\u0020\u00a6" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u00b0\u004f\u001b\u007e\u003c\u0006\u00fb\u00e7" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004c" +
                                "\u0069\u0073\u0074\u0073\u002e\u0053\u0074\u0072" +
                                "\u0075\u0063\u0074\u0033\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_8b8a6a16d3fd5942 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0042\u0059\u00fd\u00d3\u0016\u006a\u008a\u008b" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u00b0\u004f\u001b\u007e\u003c\u0006\u00fb\u00e7" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004c" +
                                "\u0069\u0073\u0074\u0073\u002e\u0053\u0074\u0072" +
                                "\u0075\u0063\u0074\u0036\u0034\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_ead976f43dfb5108 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0008\u0051\u00fb\u003d\u00f4\u0076\u00d9\u00ea" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u00b0\u004f\u001b\u007e\u003c\u0006\u00fb\u00e7" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004c" +
                                "\u0069\u0073\u0074\u0073\u002e\u0053\u0074\u0072" +
                                "\u0075\u0063\u0074\u0050\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_ea9107bdcaba0567 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0067\u0005\u00ba\u00ca\u00bd\u0007\u0091\u00ea" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u00b0\u004f\u001b\u007e\u003c\u0006\u00fb\u00e7" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004c" +
                                "\u0069\u0073\u0074\u0073\u002e\u0053\u0074\u0072" +
                                "\u0075\u0063\u0074\u0030\u0063\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0070\u0061\u0064\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_a52722f9b4100566 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0066\u0005\u0010\u00b4\u00f9\"\u0027\u00a5" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u00b0\u004f\u001b\u007e\u003c\u0006\u00fb\u00e7" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004c" +
                                "\u0069\u0073\u0074\u0073\u002e\u0053\u0074\u0072" +
                                "\u0075\u0063\u0074\u0031\u0063\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0070\u0061\u0064\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_e6153e6d09acefbb =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00bb\u00ef\u00ac\u0009\u006d\u003e\u0015\u00e6" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u00b0\u004f\u001b\u007e\u003c\u0006\u00fb\u00e7" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004c" +
                                "\u0069\u0073\u0074\u0073\u002e\u0053\u0074\u0072" +
                                "\u0075\u0063\u0074\u0038\u0063\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0070\u0061\u0064\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_94a5f8e813fdaadf =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00df\u00aa\u00fd\u0013\u00e8\u00f8\u00a5\u0094" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u00b0\u004f\u001b\u007e\u003c\u0006\u00fb\u00e7" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00fa\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004c" +
                                "\u0069\u0073\u0074\u0073\u002e\u0053\u0074\u0072" +
                                "\u0075\u0063\u0074\u0031\u0036\u0063\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0070\u0061\u0064\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_f82e3063d71e45f4 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00f4\u0045\u001e\u00d7\u0063\u0030\u002e\u00f8" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u00b0\u004f\u001b\u007e\u003c\u0006\u00fb\u00e7" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00fa\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004c" +
                                "\u0069\u0073\u0074\u0073\u002e\u0053\u0074\u0072" +
                                "\u0075\u0063\u0074\u0033\u0032\u0063\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0070\u0061\u0064\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_d3fe4b4db930c4e3 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00e3\u00c4\u0030\u00b9\u004d\u004b\u00fe\u00d3" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u00b0\u004f\u001b\u007e\u003c\u0006\u00fb\u00e7" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00fa\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004c" +
                                "\u0069\u0073\u0074\u0073\u002e\u0053\u0074\u0072" +
                                "\u0075\u0063\u0074\u0036\u0034\u0063\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0070\u0061\u0064\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_a77dbf621f860022 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\"\u0000\u0086\u001f\u0062\u00bf\u007d\u00a7" +
                                "\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u00b0\u004f\u001b\u007e\u003c\u0006\u00fb\u00e7" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004c" +
                                "\u0069\u0073\u0074\u0073\u002e\u0053\u0074\u0072" +
                                "\u0075\u0063\u0074\u0050\u0063\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0070\u0061\u0064\u0000\u0000\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_80550b0c102a9204 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0004\u0092\u002a\u0010\u000c\u000b\u0055\u0080" +
                                "\u000b\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0046" +
                                "\u0069\u0065\u006c\u0064\u005a\u0065\u0072\u006f" +
                                "\u0049\u0073\u0042\u0069\u0074\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0045\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0049\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0051\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0062\u0069\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0065\u0063\u006f\u006e\u0064\u0042\u0069" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0068\u0069\u0072\u0064\u0046\u0069\u0065" +
                                "\u006c\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u007b\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_b780846710da43b3 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00b3\u0043\u00da\u0010\u0067\u0084\u0080\u00b7" +
                                "\u000b\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004f" +
                                "\u006c\u0064\u0056\u0065\u0072\u0073\u0069\u006f" +
                                "\u006e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0049\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u006f\u006c\u0064\u0031\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006f\u006c\u0064\u0032\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006f\u006c\u0064\u0033\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b3\u0043\u00da\u0010\u0067\u0084\u0080\u00b7" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_b8891e9f3d7630e0 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00e0\u0030\u0076\u003d\u009f\u001e\u0089\u00b8" +
                                "\u000b\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u001f\u0001\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u004e" +
                                "\u0065\u0077\u0056\u0065\u0072\u0073\u0069\u006f" +
                                "\u006e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0014\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0081\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u007c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0088\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0085\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0080\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0089\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0084\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0090\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u008d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0088\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0094\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u006f\u006c\u0064\u0031\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006f\u006c\u0064\u0032\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006f\u006c\u0064\u0033\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00e0\u0030\u0076\u003d\u009f\u001e\u0089\u00b8" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006e\u0065\u0077\u0031\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00db\u0003\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006e\u0065\u0077\u0032\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0062\u0061\u007a\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_b32d3ef2e630cc9e =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u0004\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00c2\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0031\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00bd\u0001\u0000\u0000\u0017\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
                                "\u0065\u006e\u0065\u0072\u0069\u0063\u0073\u0000" +
                                "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0032\u0074\u00b3\u005f\u00b2\u008a\u003d\u00b5" +
                                "\u0009\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0091\u00b3\u00b1\u00b5\u0030\u0063\u00ac\u00b7" +
                                "\u0005\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0049\u006e\u006e\u0065\u0072\u0000\u0000\u0000" +
                                "\u0049\u006e\u006e\u0065\u0072\u0032\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0061\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\\\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0068\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0060\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u006c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00b8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b5\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0014\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0061\u0072\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0072\u0065\u0076\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0075\u0062\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0005\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0046\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
                                "\u0042\u0061\u0072\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_b53d8ab25fb37432 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0032\u0074\u00b3\u005f\u00b2\u008a\u003d\u00b5" +
                                "\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
                                "\u0065\u006e\u0065\u0072\u0069\u0063\u0073\u002e" +
                                "\u0049\u006e\u006e\u0065\u0072\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0061\u0072\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_b7ac6330b5b1b391 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0091\u00b3\u00b1\u00b5\u0030\u0063\u00ac\u00b7" +
                                "\u0018\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0004\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00fa\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u002d\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0035\u0001\u0000\u0000\u000f\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
                                "\u0065\u006e\u0065\u0072\u0069\u0063\u0073\u002e" +
                                "\u0049\u006e\u006e\u0065\u0072\u0032\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u00db\u00d8\u002f\u009b\u00d1\u00a5\u0020\u00b9" +
                                "\u0001\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\u0044\u0065\u0065\u0070\u004e\u0065\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0061\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\\\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0068\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0060\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u006c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0088\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0085\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0084\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0090\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0062\u0061\u0072\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0061\u007a\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0091\u00b3\u00b1\u00b5\u0030\u0063\u00ac\u00b7" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u006e\u0065\u0072\u0042\u006f\u0075" +
                                "\u006e\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0032\u0074\u00b3\u005f\u00b2\u008a\u003d\u00b5" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u006e\u0065\u0072\u0055\u006e\u0062" +
                                "\u006f\u0075\u006e\u0064\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0032\u0074\u00b3\u005f\u00b2\u008a\u003d\u00b5" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0042\u0061\u007a\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_b920a5d19b2fd8db =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00db\u00d8\u002f\u009b\u00d1\u00a5\u0020\u00b9" +
                                "\u001f\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0091\u00b3\u00b1\u00b5\u0030\u0063\u00ac\u00b7" +
                                "\u0004\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0042\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0001\u0000\u0000\u000f\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
                                "\u0065\u006e\u0065\u0072\u0069\u0063\u0073\u002e" +
                                "\u0049\u006e\u006e\u0065\u0072\u0032\u002e\u0044" +
                                "\u0065\u0065\u0070\u004e\u0065\u0073\u0074\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0061\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\\\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0068\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0060\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u006c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0070\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0061\u0072\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u0061\u007a\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0091\u00b3\u00b1\u00b5\u0030\u0063\u00ac\u00b7" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0071\u0075\u0078\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00db\u00d8\u002f\u009b\u00d1\u00a5\u0020\u00b9" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0051\u0075\u0078\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_f0e4457e7c8a3afa =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00fa\u003a\u008a\u007c\u007e\u0045\u00e4\u00f0" +
                                "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00fa\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009d\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
                                "\u0065\u006e\u0065\u0072\u0069\u0063\u0073\u0057" +
                                "\u0072\u0061\u0070\u0070\u0065\u0072\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0076\u0061\u006c\u0075\u0065\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00fa\u003a\u008a\u007c\u007e\u0045\u00e4\u00f0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u00fa\u003a\u008a\u007c\u007e\u0045\u00e4\u00f0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0005\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0046\u006f\u006f\u0000\u0000\u0000\u0000\u0000" +
                                "\u0042\u0061\u0072\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_e055125671a5f056 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0056\u00f0\u00a5\u0071\u0056\u0012\u0055\u00e0" +
                                "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0002\u0001\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0047" +
                                "\u0065\u006e\u0065\u0072\u0069\u0063\u0073\u0057" +
                                "\u0072\u0061\u0070\u0070\u0065\u0072\u0032\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0076\u0061\u006c\u0075\u0065\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00fa\u003a\u008a\u007c\u007e\u0045\u00e4\u00f0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u00fa\u003a\u008a\u007c\u007e\u0045\u00e4\u00f0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_d1ec544e356e99fd =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00fd\u0099\u006e\u0035\u004e\u0054\u00ec\u00d1" +
                                "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u000c\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00da\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u00a7\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0055" +
                                "\u0073\u0065\u0047\u0065\u006e\u0065\u0072\u0069" +
                                "\u0063\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0030\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0041\u0001\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u003c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0090\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u008d\u0001\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0088\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00dc\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d9\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d4\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0050\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004d\u0002\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u004c\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0058\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0055\u0002\u0000\u0000\u008a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0058\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0094\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0006\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0091\u0002\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u008c\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00e0\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0007\u0000\u0000\u0000\u0006\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d9\u0003\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d8\u0003\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0099\u0004\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0098\u0004\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00a4\u0004\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0005\u0000\u0000\u0000\u0008\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0045\u0005\u0000\u0000\u0042\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0040\u0005\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0094\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0009\u0000\u0000\u0000\u0009\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u0009\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0091\u0005\u0000\u0000\u007a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0090\u0005\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u00e4\u0005\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\n\u0000\u0000\u0000\n\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\n\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006d\u0006\u0000\u0000\u0082\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006c\u0006\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0078\u0006\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u000b\u0000\u0000\u0000\u000b\u0000\u0000\u0000" +
                                "\u0000\u0000\u0001\u0000\u000b\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0007\u0000\u0000\u007a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0007\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0068\u0007\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0062\u0061\u0073\u0069\u0063\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0027\u007c\u0000\u001a\u0090\u00bc\u00dc\u0089" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u006e\u0065\u0072\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0032\u0074\u00b3\u005f\u00b2\u008a\u003d\u00b5" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0027\u007c\u0000\u001a\u0090\u00bc\u00dc\u0089" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u006e\u0065\u0072\u0032\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0091\u00b3\u00b1\u00b5\u0030\u0063\u00ac\u00b7" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0037\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0091\u00b3\u00b1\u00b5\u0030\u0063\u00ac\u00b7" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0027\u007c\u0000\u001a\u0090\u00bc\u00dc\u0089" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u006e\u0073\u0070\u0065\u0063\u0069\u0066" +
                                "\u0069\u0065\u0064\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u006e\u0073\u0070\u0065\u0063\u0069\u0066" +
                                "\u0069\u0065\u0064\u0049\u006e\u006e\u0065\u0072" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0091\u00b3\u00b1\u00b5\u0030\u0063\u00ac\u00b7" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0091\u00b3\u00b1\u00b5\u0030\u0063\u00ac\u00b7" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000" +
                                "\u000c\u0000\u0000\u0000\u0006\u0000\u0013\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0068\u0000\u0000\u0000\u0000\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u007b\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0078\u0074\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0006\u0000\u0013\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0041\u0001\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0049" +
                                "\u006e\u006e\u0065\u0072\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0032\u0074\u00b3\u005f\u00b2\u008a\u003d\u00b5" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000" +
                                "\u0004\u0000\u0000\u0000\u0006\u0000\u0013\u0000" +
                                "\u0065\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u007b\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0078\u0074\u0000\u0000\u0000\u0000" +
                                "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0055" +
                                "\u0073\u0065\u0072\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00fd\u0099\u006e\u0035\u004e\u0054\u00ec\u00d1" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u000c\u0000" +
                                "\u002c\u0000\u0000\u0000\u0000\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0006\u0000\u0013\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u007b\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0077\u0072\u0061\u0070\u0070\u0065\u0072\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00fa\u003a\u008a\u007c\u007e\u0045\u00e4\u00f0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u00fa\u003a\u008a\u007c\u007e\u0045\u00e4\u00f0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0027\u007c\u0000\u001a\u0090\u00bc\u00dc\u0089" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0057" +
                                "\u0072\u0061\u0070\u0070\u0065\u0072\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00fa\u003a\u008a\u007c\u007e\u0045\u00e4\u00f0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u00fa\u003a\u008a\u007c\u007e\u0045\u00e4\u00f0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000" +
                                "\r\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0078\u0074\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0006\u0000\u0013\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0041\u0001\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0057" +
                                "\u0072\u0061\u0070\u0070\u0065\u0072\u0032\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0056\u00f0\u00a5\u0071\u0056\u0012\u0055\u00e0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000" +
                                "\r\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0004\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0078\u0074\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0006\u0000\u0013\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0041\u0001\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006c\u0069\u0073\u0074\u004f\u0066\u0047\u0065" +
                                "\u006e\u0065\u0072\u0069\u0063\u0073\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u009e\u00cc\u0030\u00e6\u00f2\u003e\u002d\u00b3" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_9bb77fc9017eed97 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0097\u00ed\u007e\u0001\u00c9\u007f\u00b7\u009b" +
                                "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00da\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0045" +
                                "\u006d\u0070\u0074\u0079\u0053\u0074\u0072\u0075" +
                                "\u0063\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" + "");
        public static final org.capnproto.SegmentReader b_d0e124839cb74e9e =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u000b\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00ca\u0000\u0000\u0000" +
                                "\u0021\u0000\u0000\u0000\u0007\u0002\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0080\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0039\u0024\u00e0\u00d9\u00e4\u0031\u0083\u00c9" +
                                "\u00f9\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u00a0\u002e\u0077\u00c2\\\u00ad\u0065\u00bb" +
                                "\u00f9\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u0038\u002a\u005a\u0044\u000c\u0038\u0039\u00f8" +
                                "\u00f9\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u005d\u00ec\u00b4\u00d6\u00ad\u006d\u00a0\u00bd" +
                                "\u00f9\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0063\u00e7\u002d\u00b6\u0013\u00a0\u00b4\u00cd" +
                                "\u00f9\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u0039\u0008\u0045\u009d\u004d\u00e9\u004f\u00c7" +
                                "\u00f9\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u00ca\u0018\u0012\u0064\u0079\u00f4\u00c0\u00ca" +
                                "\u00f9\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
                                "\u006d\u0088\u00d4\u0054\u0094\u00bc\u005b\u0090" +
                                "\u00f9\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0045\u0059\u00b6\u00b1\u0086\u0025\u00ef\u00d5" +
                                "\u00f9\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u00e1\u00d4\u007b\u00b9\u00a7\u002d\u0053\u008f" +
                                "\u00f9\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u00b0\u00c5\u00f9\u00a4\u00f4\u0086\u0038\u0099" +
                                "\u00f9\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0040\u00fa\u0058\u0035\u001e\u0019\u008d\u00d4" +
                                "\u00f9\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0067\u008f\u0011\u001a\u00e1\u001c\u002a\u00f2" +
                                "\u00f9\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u00a2\u006a\u001b\u00f9\u0026\u0069\u00cc\u00d3" +
                                "\u00f9\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u002a\u00ff\u0095\u00ef\u00c7\u009d\u00f8\u0097" +
                                "\u00f9\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
                                "\u0063\u0083\u0088\u006d\u004e\u0040\u00df\u00ee" +
                                "\u00f9\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
                                "\u009e\u0013\u00e0\u004e\u000e\u00d0\u0062\u00db" +
                                "\u00f9\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
                                "\u00eb\u0001\u00a6\u0023\u0092\u006d\u000e\u0081" +
                                "\u00f9\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
                                "\u00a4\u001c\u00d8\u002c\u002c\u00f6\u00a7\u0098" +
                                "\u00f9\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
                                "\u0045\u00b5\u0057\u0035\u00c3\u00df\u0055\u00a8" +
                                "\u00f9\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
                                "\u00f9\u00ea\u003a\u00b7\u002c\u0041\u007a\u00ea" +
                                "\u00f9\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
                                "\u00d6\u00f4\u0079\u00a4\u008e\u00a2\u0062\u009c" +
                                "\u00f9\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
                                "\u0047\u0006\u003b\u00fa\u00c2\u0011\u0064\u00ba" +
                                "\u00f9\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
                                "\u009f\u009a\u008a\u00a8\u0051\u0074\u00e9\u00df" +
                                "\u00f9\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
                                "\u00c0\u00f5\u00e8\u0041\u0078\u004c\u00a9\u00f5" +
                                "\u00f9\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
                                "\u0072\u0043\u0008\u00fa\u00a9\u0036\u0086\u00ec" +
                                "\u00f9\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
                                "\u0052\u0029\u00e3\u00bb\u009a\u0093\u00df\u0082" +
                                "\u00f9\u0000\u0000\u0000\u008a\u0000\u0000\u0000" +
                                "\u003c\u0065\u002f\u0047\u00ad\u00d4\u0096\u008b" +
                                "\u00fd\u0000\u0000\u0000\u008a\u0000\u0000\u0000" +
                                "\u004b\u00cf\u004f\u004f\u00b6\u0064\u0014\u00bd" +
                                "\u0001\u0001\u0000\u0000\u0072\u0000\u0000\u0000" +
                                "\u002a\u0050\u0076\u005b\u0001\u00e0\u00b4\u00ad" +
                                "\u0001\u0001\u0000\u0000\u0072\u0000\u0000\u0000" +
                                "\u00cb\u00b3\u00a6\u004b\u008a\u00ca\u00df\u0088" +
                                "\u0001\u0001\u0000\u0000\u0082\u0000\u0000\u0000" +
                                "\u009f\u00f7\u007a\u00a1\u005b\u0085\u00be\u00b7" +
                                "\u0001\u0001\u0000\u0000\u0072\u0000\u0000\u0000" +
                                "\u0076\u006f\u0069\u0064\u0043\u006f\u006e\u0073" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0062\u006f\u006f\u006c\u0043\u006f\u006e\u0073" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0038\u0043\u006f\u006e\u0073" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0031\u0036\u0043\u006f\u006e" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0033\u0032\u0043\u006f\u006e" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0036\u0034\u0043\u006f\u006e" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0069\u006e\u0074\u0038\u0043\u006f\u006e" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0069\u006e\u0074\u0031\u0036\u0043\u006f" +
                                "\u006e\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0069\u006e\u0074\u0033\u0032\u0043\u006f" +
                                "\u006e\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\u0075\u0069\u006e\u0074\u0036\u0034\u0043\u006f" +
                                "\u006e\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\u0066\u006c\u006f\u0061\u0074\u0033\u0032\u0043" +
                                "\u006f\u006e\u0073\u0074\u0000\u0000\u0000\u0000" +
                                "\u0066\u006c\u006f\u0061\u0074\u0036\u0034\u0043" +
                                "\u006f\u006e\u0073\u0074\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0078\u0074\u0043\u006f\u006e\u0073" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0064\u0061\u0074\u0061\u0043\u006f\u006e\u0073" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0074\u0072\u0075\u0063\u0074\u0043\u006f" +
                                "\u006e\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\u0065\u006e\u0075\u006d\u0043\u006f\u006e\u0073" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0076\u006f\u0069\u0064\u004c\u0069\u0073\u0074" +
                                "\u0043\u006f\u006e\u0073\u0074\u0000\u0000\u0000" +
                                "\u0062\u006f\u006f\u006c\u004c\u0069\u0073\u0074" +
                                "\u0043\u006f\u006e\u0073\u0074\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0038\u004c\u0069\u0073\u0074" +
                                "\u0043\u006f\u006e\u0073\u0074\u0000\u0000\u0000" +
                                "\u0069\u006e\u0074\u0031\u0036\u004c\u0069\u0073" +
                                "\u0074\u0043\u006f\u006e\u0073\u0074\u0000\u0000" +
                                "\u0069\u006e\u0074\u0033\u0032\u004c\u0069\u0073" +
                                "\u0074\u0043\u006f\u006e\u0073\u0074\u0000\u0000" +
                                "\u0069\u006e\u0074\u0036\u0034\u004c\u0069\u0073" +
                                "\u0074\u0043\u006f\u006e\u0073\u0074\u0000\u0000" +
                                "\u0075\u0069\u006e\u0074\u0038\u004c\u0069\u0073" +
                                "\u0074\u0043\u006f\u006e\u0073\u0074\u0000\u0000" +
                                "\u0075\u0069\u006e\u0074\u0031\u0036\u004c\u0069" +
                                "\u0073\u0074\u0043\u006f\u006e\u0073\u0074\u0000" +
                                "\u0075\u0069\u006e\u0074\u0033\u0032\u004c\u0069" +
                                "\u0073\u0074\u0043\u006f\u006e\u0073\u0074\u0000" +
                                "\u0075\u0069\u006e\u0074\u0036\u0034\u004c\u0069" +
                                "\u0073\u0074\u0043\u006f\u006e\u0073\u0074\u0000" +
                                "\u0066\u006c\u006f\u0061\u0074\u0033\u0032\u004c" +
                                "\u0069\u0073\u0074\u0043\u006f\u006e\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0066\u006c\u006f\u0061\u0074\u0036\u0034\u004c" +
                                "\u0069\u0073\u0074\u0043\u006f\u006e\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0078\u0074\u004c\u0069\u0073\u0074" +
                                "\u0043\u006f\u006e\u0073\u0074\u0000\u0000\u0000" +
                                "\u0064\u0061\u0074\u0061\u004c\u0069\u0073\u0074" +
                                "\u0043\u006f\u006e\u0073\u0074\u0000\u0000\u0000" +
                                "\u0073\u0074\u0072\u0075\u0063\u0074\u004c\u0069" +
                                "\u0073\u0074\u0043\u006f\u006e\u0073\u0074\u0000" +
                                "\u0065\u006e\u0075\u006d\u004c\u0069\u0073\u0074" +
                                "\u0043\u006f\u006e\u0073\u0074\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_c98331e4d9e02439 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0039\u0024\u00e0\u00d9\u00e4\u0031\u0083\u00c9" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u001a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0076\u006f\u0069\u0064\u0043\u006f\u006e" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_bb65ad5cc2772ea0 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00a0\u002e\u0077\u00c2\\\u00ad\u0065\u00bb" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u001a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0062\u006f\u006f\u006c\u0043\u006f\u006e" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_f839380c445a2a38 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0038\u002a\u005a\u0044\u000c\u0038\u0039\u00f8" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u001a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0069\u006e\u0074\u0038\u0043\u006f\u006e" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0002\u0000\u0085\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_bda06dadd6b4ec5d =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u005d\u00ec\u00b4\u00d6\u00ad\u006d\u00a0\u00bd" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\"\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0069\u006e\u0074\u0031\u0036\u0043\u006f" +
                                "\u006e\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0003\u0000\u00c7\u00cf\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_cdb4a013b62de763 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0063\u00e7\u002d\u00b6\u0013\u00a0\u00b4\u00cd" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\"\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0069\u006e\u0074\u0033\u0032\u0043\u006f" +
                                "\u006e\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0004\u0000\u0000\u0000\u00b2\u009e\u0043\u00ff" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_c74fe94d9d450839 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0039\u0008\u0045\u009d\u004d\u00e9\u004f\u00c7" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\"\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0069\u006e\u0074\u0036\u0034\u0043\u006f" +
                                "\u006e\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0087\u0020\u00f2\u0079\u00b7\u008f\u00ff\u00ff" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_cac0f479641218ca =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00ca\u0018\u0012\u0064\u0079\u00f4\u00c0\u00ca" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\"\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0075\u0069\u006e\u0074\u0038\u0043\u006f" +
                                "\u006e\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0006\u0000\u00ea\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_905bbc9454d4886d =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u006d\u0088\u00d4\u0054\u0094\u00bc\u005b\u0090" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0075\u0069\u006e\u0074\u0031\u0036\u0043" +
                                "\u006f\u006e\u0073\u0074\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0007\u0000\u006e\u00b2\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_d5ef2586b1b65945 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0045\u0059\u00b6\u00b1\u0086\u0025\u00ef\u00d5" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0075\u0069\u006e\u0074\u0033\u0032\u0043" +
                                "\u006f\u006e\u0073\u0074\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0014\u006a\n\u00ce" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_8f532da7b97bd4e1 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00e1\u00d4\u007b\u00b9\u00a7\u002d\u0053\u008f" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0075\u0069\u006e\u0074\u0036\u0034\u0043" +
                                "\u006f\u006e\u0073\u0074\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00d2\n\u001f\u00eb\u008c\u00a9\u0054\u00ab" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_993886f4a4f9c5b0 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00b0\u00c5\u00f9\u00a4\u00f4\u0086\u0038\u0099" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0032\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0066\u006c\u006f\u0061\u0074\u0033\u0032" +
                                "\u0043\u006f\u006e\u0073\u0074\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\n\u0000\u0000\u0000\u0000\u0050\u009a\u0044" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_d48d191e3558fa40 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0040\u00fa\u0058\u0035\u001e\u0019\u008d\u00d4" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0032\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0066\u006c\u006f\u0061\u0074\u0036\u0034" +
                                "\u0043\u006f\u006e\u0073\u0074\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u00bb\u00e0\u00c0\u0082\u008b\u00b5\u00c9" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_f22a1ce11a118f67 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0067\u008f\u0011\u001a\u00e1\u001c\u002a\u00f2" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u001a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0074\u0065\u0078\u0074\u0043\u006f\u006e" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0066\u006f\u006f\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_d3cc6926f91b6aa2 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00a2\u006a\u001b\u00f9\u0026\u0069\u00cc\u00d3" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u001a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0064\u0061\u0074\u0061\u0043\u006f\u006e" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
                                "\u0062\u0061\u0072\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_97f89dc7ef95ff2a =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u002a\u00ff\u0095\u00ef\u00c7\u009d\u00f8\u0097" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0073\u0074\u0072\u0075\u0063\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0006\u0000\u0013\u0000" +
                                "\u0001\u00f4\u0080\r\u000e\u0010\u004c\u00fb" +
                                "\u004e\u0073\u00e8\u0038\u00a6\u0033\u0000\u0000" +
                                "\u005a\u0000\u00d2\u0004\u0014\u0088\u0062\u0003" +
                                "\u00d2\n\u006f\u0012\u0021\u0019\u00cc\u0004" +
                                "\u005f\u0070\u0009\u00af\u0002\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0090\u0075\u0040" +
                                "\u0049\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0049\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
                                "\u0048\u0000\u0000\u0000\u0006\u0000\u0013\u0000" +
                                "\u0019\u0001\u0000\u0000\u0018\u0000\u0000\u0000" +
                                "\u0015\u0001\u0000\u0000\u0029\u0000\u0000\u0000" +
                                "\u0015\u0001\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0015\u0001\u0000\u0000\u0023\u0000\u0000\u0000" +
                                "\u0015\u0001\u0000\u0000\u0024\u0000\u0000\u0000" +
                                "\u0019\u0001\u0000\u0000\u0025\u0000\u0000\u0000" +
                                "\u0025\u0001\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0025\u0001\u0000\u0000\u0023\u0000\u0000\u0000" +
                                "\u0025\u0001\u0000\u0000\u0024\u0000\u0000\u0000" +
                                "\u0029\u0001\u0000\u0000\u0025\u0000\u0000\u0000" +
                                "\u0035\u0001\u0000\u0000\u0034\u0000\u0000\u0000" +
                                "\u003d\u0001\u0000\u0000\u0035\u0000\u0000\u0000" +
                                "\u0051\u0001\u0000\u0000\u001e\u0000\u0000\u0000" +
                                "\u0065\u0001\u0000\u0000\u001e\u0000\u0000\u0000" +
                                "\u0079\u0001\u0000\u0000\u005f\u0002\u0000\u0000" +
                                "\u00bd\u0002\u0000\u0000\u001b\u0000\u0000\u0000" +
                                "\u0062\u0061\u007a\u0000\u0000\u0000\u0000\u0000" +
                                "\u0071\u0075\u0078\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0049\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0044\u0000\u0000\u0000\u0006\u0000\u0013\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u006e\u0065\u0073\u0074\u0065\u0064\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0049\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0072\u0065\u0061\u006c\u006c\u0079\u0020\u006e" +
                                "\u0065\u0073\u0074\u0065\u0064\u0000\u0000\u0000" +
                                "\u001a\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000c\u00de\u0080\u007f\u0000\u0000\u0000\u0000" +
                                "\u00d2\u0004\u00d2\u00e9\u0000\u0080\u00ff\u007f" +
                                "\u004e\u0061\u00bc\u0000\u0040\u00d3\u00a0\u00fa" +
                                "\u0000\u0000\u0000\u0080\u00ff\u00ff\u00ff\u007f" +
                                "\u0079\u00df\r\u0086\u0048\u0070\u0000\u0000" +
                                "\u002e\u0075\u0013\u00fd\u008a\u0096\u00fd\u00ff" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0080" +
                                "\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u007f" +
                                "\u000c\"\u0000\u00ff\u0000\u0000\u0000\u0000" +
                                "\u00d2\u0004\u002e\u0016\u0000\u0000\u00ff\u00ff" +
                                "\u004e\u0061\u00bc\u0000\u00c0\u002c\u005f\u0005" +
                                "\u0000\u0000\u0000\u0000\u00ff\u00ff\u00ff\u00ff" +
                                "\u0079\u00df\r\u0086\u0048\u0070\u0000\u0000" +
                                "\u00d2\u008a\u00ec\u0002\u0075\u0069\u0002\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff" +
                                "\u0000\u0000\u0000\u0000\u0038\u00b4\u0096\u0049" +
                                "\u00c2\u00bd\u00f0\u007c\u00c2\u00bd\u00f0\u00fc" +
                                "\u00ea\u001c\u0008\u0002\u00ea\u001c\u0008\u0082" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0040\u00de\u0077\u0083\u0021\u0012\u00dc\u0042" +
                                "\u0029\u0090\u0023\u00ca\u00e5\u00c8\u0076\u007f" +
                                "\u0029\u0090\u0023\u00ca\u00e5\u00c8\u0076\u00ff" +
                                "\u0091\u00f7\u0050\u0037\u009e\u0078\u0066\u0000" +
                                "\u0091\u00f7\u0050\u0037\u009e\u0078\u0066\u0080" +
                                "\u0009\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u0071\u0075\u0075\u0078\u0000\u0000\u0000\u0000" +
                                "\u0063\u006f\u0072\u0067\u0065\u0000\u0000\u0000" +
                                "\u0067\u0072\u0061\u0075\u006c\u0074\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0067\u0061\u0072\u0070\u006c\u0079\u0000\u0000" +
                                "\u0077\u0061\u006c\u0064\u006f\u0000\u0000\u0000" +
                                "\u0066\u0072\u0065\u0064\u0000\u0000\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0006\u0000\u0013\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0011\u0001\u0000\u0000\u007a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b5\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0059\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0078\u0020\u0073\u0074\u0072\u0075\u0063\u0074" +
                                "\u006c\u0069\u0073\u0074\u0020\u0031\u0000\u0000" +
                                "\u0078\u0020\u0073\u0074\u0072\u0075\u0063\u0074" +
                                "\u006c\u0069\u0073\u0074\u0020\u0032\u0000\u0000" +
                                "\u0078\u0020\u0073\u0074\u0072\u0075\u0063\u0074" +
                                "\u006c\u0069\u0073\u0074\u0020\u0033\u0000\u0000" +
                                "\u0003\u0000\u0001\u0000\u0006\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_eedf404e6d888363 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0063\u0083\u0088\u006d\u004e\u0040\u00df\u00ee" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u001a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u002c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0065\u006e\u0075\u006d\u0043\u006f\u006e" +
                                "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001b\u004d\u00ad\u0007\u0018\u0062\u00c9\u00fe" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000f\u0000\u0005\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_db62d00e4ee0139e =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u009e\u0013\u00e0\u004e\u000e\u00d0\u0062\u00db" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u003a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0076\u006f\u0069\u0064\u004c\u0069\u0073" +
                                "\u0074\u0043\u006f\u006e\u0073\u0074\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0030\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_810e6d9223a601eb =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00eb\u0001\u00a6\u0023\u0092\u006d\u000e\u0081" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u003a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0062\u006f\u006f\u006c\u004c\u0069\u0073" +
                                "\u0074\u0043\u006f\u006e\u0073\u0074\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0021\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_98a7f62c2cd81ca4 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00a4\u001c\u00d8\u002c\u002c\u00f6\u00a7\u0098" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u003a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0069\u006e\u0074\u0038\u004c\u0069\u0073" +
                                "\u0074\u0043\u006f\u006e\u0073\u0074\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u006f\u0091\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_a855dfc33557b545 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0045\u00b5\u0057\u0035\u00c3\u00df\u0055\u00a8" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0042\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0069\u006e\u0074\u0031\u0036\u004c\u0069" +
                                "\u0073\u0074\u0043\u006f\u006e\u0073\u0074\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000" +
                                "\u0067\u002b\u0099\u00d4\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_ea7a412cb73aeaf9 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00f9\u00ea\u003a\u00b7\u002c\u0041\u007a\u00ea" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0042\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0069\u006e\u0074\u0033\u0032\u004c\u0069" +
                                "\u0073\u0074\u0043\u006f\u006e\u0073\u0074\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0014\u0000\u0000\u0000" +
                                "\u00c7\u006b\u009f\u0006\u0039\u0094\u0060\u00f9" + "");
        public static final org.capnproto.SegmentReader b_9c62a28ea479f4d6 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00d6\u00f4\u0079\u00a4\u008e\u00a2\u0062\u009c" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0042\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0069\u006e\u0074\u0036\u0034\u004c\u0069" +
                                "\u0073\u0074\u0043\u006f\u006e\u0073\u0074\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0015\u0000\u0000\u0000" +
                                "\u00c7\u0071\u00c4\u002b\u00ab\u0075\u006b\u000f" +
                                "\u0039\u008e\u003b\u00d4\u0054\u008a\u0094\u00f0" + "");
        public static final org.capnproto.SegmentReader b_ba6411c2fa3b0647 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0047\u0006\u003b\u00fa\u00c2\u0011\u0064\u00ba" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0042\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0075\u0069\u006e\u0074\u0038\u004c\u0069" +
                                "\u0073\u0074\u0043\u006f\u006e\u0073\u0074\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0012\u0000\u0000\u0000" +
                                "\u006f\u00de\u0000\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_dfe97451a88a9a9f =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u009f\u009a\u008a\u00a8\u0051\u0074\u00e9\u00df" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u004a\u0001\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0040\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0075\u0069\u006e\u0074\u0031\u0036\u004c" +
                                "\u0069\u0073\u0074\u0043\u006f\u006e\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000" +
                                "\u0035\u0082\u009c\u00ad\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_f5a94c7841e8f5c0 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00c0\u00f5\u00e8\u0041\u0078\u004c\u00a9\u00f5" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u004a\u0001\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0040\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0075\u0069\u006e\u0074\u0033\u0032\u004c" +
                                "\u0069\u0073\u0074\u0043\u006f\u006e\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u000c\u0000\u0000\u0000" +
                                "\u0055\u00a1\u00ae\u00c6\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_ec8636a9fa084372 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0072\u0043\u0008\u00fa\u00a9\u0036\u0086\u00ec" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u004a\u0001\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0040\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0075\u0069\u006e\u0074\u0036\u0034\u004c" +
                                "\u0069\u0073\u0074\u0043\u006f\u006e\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\r\u0000\u0000\u0000" +
                                "\u00c7\u0071\u00ac\u00b5\u00af\u0098\u0032\u009a" + "");
        public static final org.capnproto.SegmentReader b_82df939abbe32952 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0052\u0029\u00e3\u00bb\u009a\u0093\u00df\u0082" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0040\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0066\u006c\u006f\u0061\u0074\u0033\u0032" +
                                "\u004c\u0069\u0073\u0074\u0043\u006f\u006e\u0073" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0024\u0000\u0000\u0000" +
                                "\u0000\u009c\u00ad\u0045\u0000\u0000\u0080\u007f" +
                                "\u0000\u0000\u0080\u00ff\u0000\u0000\u00c0\u007f" + "");
        public static final org.capnproto.SegmentReader b_8b96d4ad472f653c =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u003c\u0065\u002f\u0047\u00ad\u00d4\u0096\u008b" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0040\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0066\u006c\u006f\u0061\u0074\u0036\u0034" +
                                "\u004c\u0069\u0073\u0074\u0043\u006f\u006e\u0073" +
                                "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0025\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u00c0\u0061\u00be\u0040" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u00f0\u007f" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u00f0\u00ff" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u00f8\u007f" + "");
        public static final org.capnproto.SegmentReader b_bd1464b64f4fcf4b =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u004b\u00cf\u004f\u004f\u00b6\u0064\u0014\u00bd" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u003a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0074\u0065\u0078\u0074\u004c\u0069\u0073" +
                                "\u0074\u0043\u006f\u006e\u0073\u0074\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u001e\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
                                "\u0070\u006c\u0075\u0067\u0068\u0000\u0000\u0000" +
                                "\u0078\u0079\u007a\u007a\u0079\u0000\u0000\u0000" +
                                "\u0074\u0068\u0075\u0064\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_adb4e0015b76502a =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u002a\u0050\u0076\u005b\u0001\u00e0\u00b4\u00ad" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u003a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0064\u0061\u0074\u0061\u004c\u0069\u0073" +
                                "\u0074\u0043\u006f\u006e\u0073\u0074\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u001e\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\"\u0000\u0000\u0000" +
                                "\u0009\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
                                "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
                                "\u006f\u006f\u0070\u0073\u0000\u0000\u0000\u0000" +
                                "\u0065\u0078\u0068\u0061\u0075\u0073\u0074\u0065" +
                                "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0072\u0066\u0063\u0033\u0030\u0039\u0032\u0000" + "");
        public static final org.capnproto.SegmentReader b_88dfca8a4ba6b3cb =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u00cb\u00b3\u00a6\u004b\u008a\u00ca\u00df\u0088" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u004a\u0001\u0000\u0000" +
                                "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0040\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0073\u0074\u0072\u0075\u0063\u0074\u004c" +
                                "\u0069\u0073\u0074\u0043\u006f\u006e\u0073\u0074" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00a7\u0000\u00b1\u0014\u0017\u004a\u00af\u00a0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u005f\u0002\u0000\u0000" +
                                "\u000c\u0000\u0000\u0000\u0006\u0000\u0013\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0011\u0001\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u00b5\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0059\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0073\u0074\u0072\u0075\u0063\u0074\u006c\u0069" +
                                "\u0073\u0074\u0020\u0031\u0000\u0000\u0000\u0000" +
                                "\u0073\u0074\u0072\u0075\u0063\u0074\u006c\u0069" +
                                "\u0073\u0074\u0020\u0032\u0000\u0000\u0000\u0000" +
                                "\u0073\u0074\u0072\u0075\u0063\u0074\u006c\u0069" +
                                "\u0073\u0074\u0020\u0033\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_b7be855ba17af79f =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u009f\u00f7\u007a\u00a1\u005b\u0085\u00be\u00b7" +
                                "\u0019\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u009e\u004e\u00b7\u009c\u0083\u0024\u00e1\u00d0" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u003a\u0001\u0000\u0000" +
                                "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0054\u0065\u0073\u0074\u0043" +
                                "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0073" +
                                "\u002e\u0065\u006e\u0075\u006d\u004c\u0069\u0073" +
                                "\u0074\u0043\u006f\u006e\u0073\u0074\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u001b\u004d\u00ad\u0007\u0018\u0062\u00c9\u00fe" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0001\u0000\u0000\u0000\u0013\u0000\u0000\u0000" +
                                "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" + "");
        public static final org.capnproto.SegmentReader b_b065cee96e9fe413 =
                org.capnproto.GeneratedClassSupport.decodeRawBytes(
                        "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
                                "\u0013\u00e4\u009f\u006e\u00e9\u00ce\u0065\u00b0" +
                                "\u000b\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
                                "\u0051\u007f\u007a\u0055\u00a9\u00cb\u00ec\u00d6" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0015\u0000\u0000\u0000\u00aa\u0000\u0000\u0000" +
                                "\u001d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0018\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
                                "\u0024\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0074\u0065\u0073\u0074\u002e\u0063\u0061\u0070" +
                                "\u006e\u0070\u003a\u0067\u006c\u006f\u0062\u0061" +
                                "\u006c\u0049\u006e\u0074\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
                                "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0008\u0000\u0000\u0000\u0039\u0030\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
                                "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
    }
}


