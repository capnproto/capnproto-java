// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: rpc.capnp

package org.capnproto;

public final class RpcProtocol {
  public static class Message {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Message.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(0)) {
          case 0 : return Which.UNIMPLEMENTED;
          case 1 : return Which.ABORT;
          case 2 : return Which.CALL;
          case 3 : return Which.RETURN;
          case 4 : return Which.FINISH;
          case 5 : return Which.RESOLVE;
          case 6 : return Which.RELEASE;
          case 7 : return Which.OBSOLETE_SAVE;
          case 8 : return Which.BOOTSTRAP;
          case 9 : return Which.OBSOLETE_DELETE;
          case 10 : return Which.PROVIDE;
          case 11 : return Which.ACCEPT;
          case 12 : return Which.JOIN;
          case 13 : return Which.DISEMBARGO;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean isUnimplemented() {
        return which() == Message.Which.UNIMPLEMENTED;
      }
      public final org.capnproto.RpcProtocol.Message.Builder getUnimplemented() {
        assert which() == Message.Which.UNIMPLEMENTED:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Message.factory, 0, null, 0);
      }
      public final void setUnimplemented(org.capnproto.RpcProtocol.Message.Reader value) {
        _setShortField(0, (short)Message.Which.UNIMPLEMENTED.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.Message.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.Message.Builder initUnimplemented() {
        _setShortField(0, (short)Message.Which.UNIMPLEMENTED.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.Message.factory,0, 0);
      }
      public final boolean isAbort() {
        return which() == Message.Which.ABORT;
      }
      public final org.capnproto.RpcProtocol.Exception.Builder getAbort() {
        assert which() == Message.Which.ABORT:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Exception.factory, 0, null, 0);
      }
      public final void setAbort(org.capnproto.RpcProtocol.Exception.Reader value) {
        _setShortField(0, (short)Message.Which.ABORT.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.Exception.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.Exception.Builder initAbort() {
        _setShortField(0, (short)Message.Which.ABORT.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.Exception.factory,0, 0);
      }
      public final boolean isCall() {
        return which() == Message.Which.CALL;
      }
      public final org.capnproto.RpcProtocol.Call.Builder getCall() {
        assert which() == Message.Which.CALL:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Call.factory, 0, null, 0);
      }
      public final void setCall(org.capnproto.RpcProtocol.Call.Reader value) {
        _setShortField(0, (short)Message.Which.CALL.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.Call.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.Call.Builder initCall() {
        _setShortField(0, (short)Message.Which.CALL.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.Call.factory,0, 0);
      }
      public final boolean isReturn() {
        return which() == Message.Which.RETURN;
      }
      public final org.capnproto.RpcProtocol.Return.Builder getReturn() {
        assert which() == Message.Which.RETURN:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Return.factory, 0, null, 0);
      }
      public final void setReturn(org.capnproto.RpcProtocol.Return.Reader value) {
        _setShortField(0, (short)Message.Which.RETURN.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.Return.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.Return.Builder initReturn() {
        _setShortField(0, (short)Message.Which.RETURN.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.Return.factory,0, 0);
      }
      public final boolean isFinish() {
        return which() == Message.Which.FINISH;
      }
      public final org.capnproto.RpcProtocol.Finish.Builder getFinish() {
        assert which() == Message.Which.FINISH:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Finish.factory, 0, null, 0);
      }
      public final void setFinish(org.capnproto.RpcProtocol.Finish.Reader value) {
        _setShortField(0, (short)Message.Which.FINISH.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.Finish.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.Finish.Builder initFinish() {
        _setShortField(0, (short)Message.Which.FINISH.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.Finish.factory,0, 0);
      }
      public final boolean isResolve() {
        return which() == Message.Which.RESOLVE;
      }
      public final org.capnproto.RpcProtocol.Resolve.Builder getResolve() {
        assert which() == Message.Which.RESOLVE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Resolve.factory, 0, null, 0);
      }
      public final void setResolve(org.capnproto.RpcProtocol.Resolve.Reader value) {
        _setShortField(0, (short)Message.Which.RESOLVE.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.Resolve.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.Resolve.Builder initResolve() {
        _setShortField(0, (short)Message.Which.RESOLVE.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.Resolve.factory,0, 0);
      }
      public final boolean isRelease() {
        return which() == Message.Which.RELEASE;
      }
      public final org.capnproto.RpcProtocol.Release.Builder getRelease() {
        assert which() == Message.Which.RELEASE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Release.factory, 0, null, 0);
      }
      public final void setRelease(org.capnproto.RpcProtocol.Release.Reader value) {
        _setShortField(0, (short)Message.Which.RELEASE.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.Release.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.Release.Builder initRelease() {
        _setShortField(0, (short)Message.Which.RELEASE.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.Release.factory,0, 0);
      }
      public final boolean isObsoleteSave() {
        return which() == Message.Which.OBSOLETE_SAVE;
      }
      public final boolean hasObsoleteSave() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Builder getObsoleteSave() {
        assert which() == Message.Which.OBSOLETE_SAVE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public org.capnproto.AnyPointer.Builder initObsoleteSave() {
        _setShortField(0, (short)Message.Which.OBSOLETE_SAVE.ordinal());
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, 0);
      }
      public org.capnproto.AnyPointer.Builder initObsoleteSave(int size) {
        _setShortField(0, (short)Message.Which.OBSOLETE_SAVE.ordinal());
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, size);
      }

      public final boolean isBootstrap() {
        return which() == Message.Which.BOOTSTRAP;
      }
      public final org.capnproto.RpcProtocol.Bootstrap.Builder getBootstrap() {
        assert which() == Message.Which.BOOTSTRAP:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Bootstrap.factory, 0, null, 0);
      }
      public final void setBootstrap(org.capnproto.RpcProtocol.Bootstrap.Reader value) {
        _setShortField(0, (short)Message.Which.BOOTSTRAP.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.Bootstrap.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.Bootstrap.Builder initBootstrap() {
        _setShortField(0, (short)Message.Which.BOOTSTRAP.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.Bootstrap.factory,0, 0);
      }
      public final boolean isObsoleteDelete() {
        return which() == Message.Which.OBSOLETE_DELETE;
      }
      public final boolean hasObsoleteDelete() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Builder getObsoleteDelete() {
        assert which() == Message.Which.OBSOLETE_DELETE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public org.capnproto.AnyPointer.Builder initObsoleteDelete() {
        _setShortField(0, (short)Message.Which.OBSOLETE_DELETE.ordinal());
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, 0);
      }
      public org.capnproto.AnyPointer.Builder initObsoleteDelete(int size) {
        _setShortField(0, (short)Message.Which.OBSOLETE_DELETE.ordinal());
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, size);
      }

      public final boolean isProvide() {
        return which() == Message.Which.PROVIDE;
      }
      public final org.capnproto.RpcProtocol.Provide.Builder getProvide() {
        assert which() == Message.Which.PROVIDE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Provide.factory, 0, null, 0);
      }
      public final void setProvide(org.capnproto.RpcProtocol.Provide.Reader value) {
        _setShortField(0, (short)Message.Which.PROVIDE.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.Provide.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.Provide.Builder initProvide() {
        _setShortField(0, (short)Message.Which.PROVIDE.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.Provide.factory,0, 0);
      }
      public final boolean isAccept() {
        return which() == Message.Which.ACCEPT;
      }
      public final org.capnproto.RpcProtocol.Accept.Builder getAccept() {
        assert which() == Message.Which.ACCEPT:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Accept.factory, 0, null, 0);
      }
      public final void setAccept(org.capnproto.RpcProtocol.Accept.Reader value) {
        _setShortField(0, (short)Message.Which.ACCEPT.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.Accept.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.Accept.Builder initAccept() {
        _setShortField(0, (short)Message.Which.ACCEPT.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.Accept.factory,0, 0);
      }
      public final boolean isJoin() {
        return which() == Message.Which.JOIN;
      }
      public final org.capnproto.RpcProtocol.Join.Builder getJoin() {
        assert which() == Message.Which.JOIN:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Join.factory, 0, null, 0);
      }
      public final void setJoin(org.capnproto.RpcProtocol.Join.Reader value) {
        _setShortField(0, (short)Message.Which.JOIN.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.Join.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.Join.Builder initJoin() {
        _setShortField(0, (short)Message.Which.JOIN.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.Join.factory,0, 0);
      }
      public final boolean isDisembargo() {
        return which() == Message.Which.DISEMBARGO;
      }
      public final org.capnproto.RpcProtocol.Disembargo.Builder getDisembargo() {
        assert which() == Message.Which.DISEMBARGO:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Disembargo.factory, 0, null, 0);
      }
      public final void setDisembargo(org.capnproto.RpcProtocol.Disembargo.Reader value) {
        _setShortField(0, (short)Message.Which.DISEMBARGO.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.Disembargo.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.Disembargo.Builder initDisembargo() {
        _setShortField(0, (short)Message.Which.DISEMBARGO.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.Disembargo.factory,0, 0);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(0)) {
          case 0 : return Which.UNIMPLEMENTED;
          case 1 : return Which.ABORT;
          case 2 : return Which.CALL;
          case 3 : return Which.RETURN;
          case 4 : return Which.FINISH;
          case 5 : return Which.RESOLVE;
          case 6 : return Which.RELEASE;
          case 7 : return Which.OBSOLETE_SAVE;
          case 8 : return Which.BOOTSTRAP;
          case 9 : return Which.OBSOLETE_DELETE;
          case 10 : return Which.PROVIDE;
          case 11 : return Which.ACCEPT;
          case 12 : return Which.JOIN;
          case 13 : return Which.DISEMBARGO;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final boolean isUnimplemented() {
        return which() == Message.Which.UNIMPLEMENTED;
      }
      public boolean hasUnimplemented() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.Message.Reader getUnimplemented() {
        assert which() == Message.Which.UNIMPLEMENTED:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Message.factory,0,null, 0);
      }

      public final boolean isAbort() {
        return which() == Message.Which.ABORT;
      }
      public boolean hasAbort() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.Exception.Reader getAbort() {
        assert which() == Message.Which.ABORT:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Exception.factory,0,null, 0);
      }

      public final boolean isCall() {
        return which() == Message.Which.CALL;
      }
      public boolean hasCall() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.Call.Reader getCall() {
        assert which() == Message.Which.CALL:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Call.factory,0,null, 0);
      }

      public final boolean isReturn() {
        return which() == Message.Which.RETURN;
      }
      public boolean hasReturn() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.Return.Reader getReturn() {
        assert which() == Message.Which.RETURN:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Return.factory,0,null, 0);
      }

      public final boolean isFinish() {
        return which() == Message.Which.FINISH;
      }
      public boolean hasFinish() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.Finish.Reader getFinish() {
        assert which() == Message.Which.FINISH:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Finish.factory,0,null, 0);
      }

      public final boolean isResolve() {
        return which() == Message.Which.RESOLVE;
      }
      public boolean hasResolve() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.Resolve.Reader getResolve() {
        assert which() == Message.Which.RESOLVE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Resolve.factory,0,null, 0);
      }

      public final boolean isRelease() {
        return which() == Message.Which.RELEASE;
      }
      public boolean hasRelease() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.Release.Reader getRelease() {
        assert which() == Message.Which.RELEASE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Release.factory,0,null, 0);
      }

      public final boolean isObsoleteSave() {
        return which() == Message.Which.OBSOLETE_SAVE;
      }
      public boolean hasObsoleteSave() {
        if (which() != Message.Which.OBSOLETE_SAVE) return false;
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Reader getObsoleteSave() {
        assert which() == Message.Which.OBSOLETE_SAVE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public final boolean isBootstrap() {
        return which() == Message.Which.BOOTSTRAP;
      }
      public boolean hasBootstrap() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.Bootstrap.Reader getBootstrap() {
        assert which() == Message.Which.BOOTSTRAP:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Bootstrap.factory,0,null, 0);
      }

      public final boolean isObsoleteDelete() {
        return which() == Message.Which.OBSOLETE_DELETE;
      }
      public boolean hasObsoleteDelete() {
        if (which() != Message.Which.OBSOLETE_DELETE) return false;
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Reader getObsoleteDelete() {
        assert which() == Message.Which.OBSOLETE_DELETE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public final boolean isProvide() {
        return which() == Message.Which.PROVIDE;
      }
      public boolean hasProvide() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.Provide.Reader getProvide() {
        assert which() == Message.Which.PROVIDE:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Provide.factory,0,null, 0);
      }

      public final boolean isAccept() {
        return which() == Message.Which.ACCEPT;
      }
      public boolean hasAccept() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.Accept.Reader getAccept() {
        assert which() == Message.Which.ACCEPT:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Accept.factory,0,null, 0);
      }

      public final boolean isJoin() {
        return which() == Message.Which.JOIN;
      }
      public boolean hasJoin() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.Join.Reader getJoin() {
        assert which() == Message.Which.JOIN:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Join.factory,0,null, 0);
      }

      public final boolean isDisembargo() {
        return which() == Message.Which.DISEMBARGO;
      }
      public boolean hasDisembargo() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.Disembargo.Reader getDisembargo() {
        assert which() == Message.Which.DISEMBARGO:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Disembargo.factory,0,null, 0);
      }

    }

    public enum Which {
      UNIMPLEMENTED,
      ABORT,
      CALL,
      RETURN,
      FINISH,
      RESOLVE,
      RELEASE,
      OBSOLETE_SAVE,
      BOOTSTRAP,
      OBSOLETE_DELETE,
      PROVIDE,
      ACCEPT,
      JOIN,
      DISEMBARGO,
      _NOT_IN_SCHEMA,
    }
  }


  public static class Bootstrap {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Bootstrap.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final int getQuestionId() {
        return _getIntField(0);
      }
      public final void setQuestionId(int value) {
        _setIntField(0, value);
      }

      public final boolean hasDeprecatedObjectId() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Builder getDeprecatedObjectId() {
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public org.capnproto.AnyPointer.Builder initDeprecatedObjectId() {
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, 0);
      }
      public org.capnproto.AnyPointer.Builder initDeprecatedObjectId(int size) {
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, size);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final int getQuestionId() {
        return _getIntField(0);
      }

      public boolean hasDeprecatedObjectId() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Reader getDeprecatedObjectId() {
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
    }

  }


  public static class Call {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)3);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Call.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final int getQuestionId() {
        return _getIntField(0);
      }
      public final void setQuestionId(int value) {
        _setIntField(0, value);
      }

      public final org.capnproto.RpcProtocol.MessageTarget.Builder getTarget() {
        return _getPointerField(org.capnproto.RpcProtocol.MessageTarget.factory, 0, null, 0);
      }
      public final void setTarget(org.capnproto.RpcProtocol.MessageTarget.Reader value) {
        _setPointerField(org.capnproto.RpcProtocol.MessageTarget.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.MessageTarget.Builder initTarget() {
        return _initPointerField(org.capnproto.RpcProtocol.MessageTarget.factory,0, 0);
      }
      public final long getInterfaceId() {
        return _getLongField(1);
      }
      public final void setInterfaceId(long value) {
        _setLongField(1, value);
      }

      public final short getMethodId() {
        return _getShortField(2);
      }
      public final void setMethodId(short value) {
        _setShortField(2, value);
      }

      public final org.capnproto.RpcProtocol.Payload.Builder getParams() {
        return _getPointerField(org.capnproto.RpcProtocol.Payload.factory, 1, null, 0);
      }
      public final void setParams(org.capnproto.RpcProtocol.Payload.Reader value) {
        _setPointerField(org.capnproto.RpcProtocol.Payload.factory,1, value);
      }
      public final org.capnproto.RpcProtocol.Payload.Builder initParams() {
        return _initPointerField(org.capnproto.RpcProtocol.Payload.factory,1, 0);
      }
      public final SendResultsTo.Builder getSendResultsTo() {
        return new Call.SendResultsTo.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final SendResultsTo.Builder initSendResultsTo() {
        _setShortField(3,(short)0);
        _clearPointerField(2);
  return new Call.SendResultsTo.Builder(segment, data, pointers, dataSize, pointerCount);
      }

      public final boolean getAllowThirdPartyTailCall() {
        return _getBooleanField(128);
      }
      public final void setAllowThirdPartyTailCall(boolean value) {
        _setBooleanField(128, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final int getQuestionId() {
        return _getIntField(0);
      }

      public boolean hasTarget() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.MessageTarget.Reader getTarget() {
        return _getPointerField(org.capnproto.RpcProtocol.MessageTarget.factory,0,null, 0);
      }

      public final long getInterfaceId() {
        return _getLongField(1);
      }

      public final short getMethodId() {
        return _getShortField(2);
      }

      public boolean hasParams() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.RpcProtocol.Payload.Reader getParams() {
        return _getPointerField(org.capnproto.RpcProtocol.Payload.factory,1,null, 0);
      }

      public SendResultsTo.Reader getSendResultsTo() {
        return new Call.SendResultsTo.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final boolean getAllowThirdPartyTailCall() {
        return _getBooleanField(128);
      }

    }

    public static class SendResultsTo {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)3);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Call.SendResultsTo.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(3)) {
            case 0 : return Which.CALLER;
            case 1 : return Which.YOURSELF;
            case 2 : return Which.THIRD_PARTY;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean isCaller() {
          return which() == Call.SendResultsTo.Which.CALLER;
        }
        public final org.capnproto.Void getCaller() {
          assert which() == Call.SendResultsTo.Which.CALLER:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }
        public final void setCaller(org.capnproto.Void value) {
          _setShortField(3, (short)Call.SendResultsTo.Which.CALLER.ordinal());
        }

        public final boolean isYourself() {
          return which() == Call.SendResultsTo.Which.YOURSELF;
        }
        public final org.capnproto.Void getYourself() {
          assert which() == Call.SendResultsTo.Which.YOURSELF:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }
        public final void setYourself(org.capnproto.Void value) {
          _setShortField(3, (short)Call.SendResultsTo.Which.YOURSELF.ordinal());
        }

        public final boolean isThirdParty() {
          return which() == Call.SendResultsTo.Which.THIRD_PARTY;
        }
        public final boolean hasThirdParty() {
          return !_pointerFieldIsNull(2);
        }
        public org.capnproto.AnyPointer.Builder getThirdParty() {
          assert which() == Call.SendResultsTo.Which.THIRD_PARTY:
                      "Must check which() before get()ing a union member.";
          return _getPointerField(org.capnproto.AnyPointer.factory, 2);
        }
        public org.capnproto.AnyPointer.Builder initThirdParty() {
          _setShortField(3, (short)Call.SendResultsTo.Which.THIRD_PARTY.ordinal());
          return _initPointerField(org.capnproto.AnyPointer.factory, 2, 0);
        }
        public org.capnproto.AnyPointer.Builder initThirdParty(int size) {
          _setShortField(3, (short)Call.SendResultsTo.Which.THIRD_PARTY.ordinal());
          return _initPointerField(org.capnproto.AnyPointer.factory, 2, size);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(3)) {
            case 0 : return Which.CALLER;
            case 1 : return Which.YOURSELF;
            case 2 : return Which.THIRD_PARTY;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final boolean isCaller() {
          return which() == Call.SendResultsTo.Which.CALLER;
        }
        public final org.capnproto.Void getCaller() {
          assert which() == Call.SendResultsTo.Which.CALLER:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }

        public final boolean isYourself() {
          return which() == Call.SendResultsTo.Which.YOURSELF;
        }
        public final org.capnproto.Void getYourself() {
          assert which() == Call.SendResultsTo.Which.YOURSELF:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }

        public final boolean isThirdParty() {
          return which() == Call.SendResultsTo.Which.THIRD_PARTY;
        }
        public boolean hasThirdParty() {
          if (which() != Call.SendResultsTo.Which.THIRD_PARTY) return false;
          return !_pointerFieldIsNull(2);
        }
        public org.capnproto.AnyPointer.Reader getThirdParty() {
          assert which() == Call.SendResultsTo.Which.THIRD_PARTY:
                      "Must check which() before get()ing a union member.";
          return _getPointerField(org.capnproto.AnyPointer.factory, 2);
        }
      }

      public enum Which {
        CALLER,
        YOURSELF,
        THIRD_PARTY,
        _NOT_IN_SCHEMA,
      }
    }


  }


  public static class Return {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Return.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(3)) {
          case 0 : return Which.RESULTS;
          case 1 : return Which.EXCEPTION;
          case 2 : return Which.CANCELED;
          case 3 : return Which.RESULTS_SENT_ELSEWHERE;
          case 4 : return Which.TAKE_FROM_OTHER_QUESTION;
          case 5 : return Which.ACCEPT_FROM_THIRD_PARTY;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final int getAnswerId() {
        return _getIntField(0);
      }
      public final void setAnswerId(int value) {
        _setIntField(0, value);
      }

      public final boolean getReleaseParamCaps() {
        return _getBooleanField(32, (boolean)true);
      }
      public final void setReleaseParamCaps(boolean value) {
        _setBooleanField(32, value, (boolean)true);
      }

      public final boolean isResults() {
        return which() == Return.Which.RESULTS;
      }
      public final org.capnproto.RpcProtocol.Payload.Builder getResults() {
        assert which() == Return.Which.RESULTS:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Payload.factory, 0, null, 0);
      }
      public final void setResults(org.capnproto.RpcProtocol.Payload.Reader value) {
        _setShortField(3, (short)Return.Which.RESULTS.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.Payload.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.Payload.Builder initResults() {
        _setShortField(3, (short)Return.Which.RESULTS.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.Payload.factory,0, 0);
      }
      public final boolean isException() {
        return which() == Return.Which.EXCEPTION;
      }
      public final org.capnproto.RpcProtocol.Exception.Builder getException() {
        assert which() == Return.Which.EXCEPTION:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Exception.factory, 0, null, 0);
      }
      public final void setException(org.capnproto.RpcProtocol.Exception.Reader value) {
        _setShortField(3, (short)Return.Which.EXCEPTION.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.Exception.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.Exception.Builder initException() {
        _setShortField(3, (short)Return.Which.EXCEPTION.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.Exception.factory,0, 0);
      }
      public final boolean isCanceled() {
        return which() == Return.Which.CANCELED;
      }
      public final org.capnproto.Void getCanceled() {
        assert which() == Return.Which.CANCELED:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setCanceled(org.capnproto.Void value) {
        _setShortField(3, (short)Return.Which.CANCELED.ordinal());
      }

      public final boolean isResultsSentElsewhere() {
        return which() == Return.Which.RESULTS_SENT_ELSEWHERE;
      }
      public final org.capnproto.Void getResultsSentElsewhere() {
        assert which() == Return.Which.RESULTS_SENT_ELSEWHERE:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setResultsSentElsewhere(org.capnproto.Void value) {
        _setShortField(3, (short)Return.Which.RESULTS_SENT_ELSEWHERE.ordinal());
      }

      public final boolean isTakeFromOtherQuestion() {
        return which() == Return.Which.TAKE_FROM_OTHER_QUESTION;
      }
      public final int getTakeFromOtherQuestion() {
        assert which() == Return.Which.TAKE_FROM_OTHER_QUESTION:
                    "Must check which() before get()ing a union member.";
        return _getIntField(2);
      }
      public final void setTakeFromOtherQuestion(int value) {
        _setShortField(3, (short)Return.Which.TAKE_FROM_OTHER_QUESTION.ordinal());
        _setIntField(2, value);
      }

      public final boolean isAcceptFromThirdParty() {
        return which() == Return.Which.ACCEPT_FROM_THIRD_PARTY;
      }
      public final boolean hasAcceptFromThirdParty() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Builder getAcceptFromThirdParty() {
        assert which() == Return.Which.ACCEPT_FROM_THIRD_PARTY:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public org.capnproto.AnyPointer.Builder initAcceptFromThirdParty() {
        _setShortField(3, (short)Return.Which.ACCEPT_FROM_THIRD_PARTY.ordinal());
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, 0);
      }
      public org.capnproto.AnyPointer.Builder initAcceptFromThirdParty(int size) {
        _setShortField(3, (short)Return.Which.ACCEPT_FROM_THIRD_PARTY.ordinal());
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, size);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(3)) {
          case 0 : return Which.RESULTS;
          case 1 : return Which.EXCEPTION;
          case 2 : return Which.CANCELED;
          case 3 : return Which.RESULTS_SENT_ELSEWHERE;
          case 4 : return Which.TAKE_FROM_OTHER_QUESTION;
          case 5 : return Which.ACCEPT_FROM_THIRD_PARTY;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final int getAnswerId() {
        return _getIntField(0);
      }

      public final boolean getReleaseParamCaps() {
        return _getBooleanField(32, (boolean)true);
      }

      public final boolean isResults() {
        return which() == Return.Which.RESULTS;
      }
      public boolean hasResults() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.Payload.Reader getResults() {
        assert which() == Return.Which.RESULTS:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Payload.factory,0,null, 0);
      }

      public final boolean isException() {
        return which() == Return.Which.EXCEPTION;
      }
      public boolean hasException() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.Exception.Reader getException() {
        assert which() == Return.Which.EXCEPTION:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Exception.factory,0,null, 0);
      }

      public final boolean isCanceled() {
        return which() == Return.Which.CANCELED;
      }
      public final org.capnproto.Void getCanceled() {
        assert which() == Return.Which.CANCELED:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isResultsSentElsewhere() {
        return which() == Return.Which.RESULTS_SENT_ELSEWHERE;
      }
      public final org.capnproto.Void getResultsSentElsewhere() {
        assert which() == Return.Which.RESULTS_SENT_ELSEWHERE:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isTakeFromOtherQuestion() {
        return which() == Return.Which.TAKE_FROM_OTHER_QUESTION;
      }
      public final int getTakeFromOtherQuestion() {
        assert which() == Return.Which.TAKE_FROM_OTHER_QUESTION:
                    "Must check which() before get()ing a union member.";
        return _getIntField(2);
      }

      public final boolean isAcceptFromThirdParty() {
        return which() == Return.Which.ACCEPT_FROM_THIRD_PARTY;
      }
      public boolean hasAcceptFromThirdParty() {
        if (which() != Return.Which.ACCEPT_FROM_THIRD_PARTY) return false;
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Reader getAcceptFromThirdParty() {
        assert which() == Return.Which.ACCEPT_FROM_THIRD_PARTY:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
    }

    public enum Which {
      RESULTS,
      EXCEPTION,
      CANCELED,
      RESULTS_SENT_ELSEWHERE,
      TAKE_FROM_OTHER_QUESTION,
      ACCEPT_FROM_THIRD_PARTY,
      _NOT_IN_SCHEMA,
    }
  }


  public static class Finish {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Finish.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final int getQuestionId() {
        return _getIntField(0);
      }
      public final void setQuestionId(int value) {
        _setIntField(0, value);
      }

      public final boolean getReleaseResultCaps() {
        return _getBooleanField(32, (boolean)true);
      }
      public final void setReleaseResultCaps(boolean value) {
        _setBooleanField(32, value, (boolean)true);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final int getQuestionId() {
        return _getIntField(0);
      }

      public final boolean getReleaseResultCaps() {
        return _getBooleanField(32, (boolean)true);
      }

    }

  }


  public static class Resolve {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Resolve.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(2)) {
          case 0 : return Which.CAP;
          case 1 : return Which.EXCEPTION;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final int getPromiseId() {
        return _getIntField(0);
      }
      public final void setPromiseId(int value) {
        _setIntField(0, value);
      }

      public final boolean isCap() {
        return which() == Resolve.Which.CAP;
      }
      public final org.capnproto.RpcProtocol.CapDescriptor.Builder getCap() {
        assert which() == Resolve.Which.CAP:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.CapDescriptor.factory, 0, null, 0);
      }
      public final void setCap(org.capnproto.RpcProtocol.CapDescriptor.Reader value) {
        _setShortField(2, (short)Resolve.Which.CAP.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.CapDescriptor.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.CapDescriptor.Builder initCap() {
        _setShortField(2, (short)Resolve.Which.CAP.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.CapDescriptor.factory,0, 0);
      }
      public final boolean isException() {
        return which() == Resolve.Which.EXCEPTION;
      }
      public final org.capnproto.RpcProtocol.Exception.Builder getException() {
        assert which() == Resolve.Which.EXCEPTION:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Exception.factory, 0, null, 0);
      }
      public final void setException(org.capnproto.RpcProtocol.Exception.Reader value) {
        _setShortField(2, (short)Resolve.Which.EXCEPTION.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.Exception.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.Exception.Builder initException() {
        _setShortField(2, (short)Resolve.Which.EXCEPTION.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.Exception.factory,0, 0);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(2)) {
          case 0 : return Which.CAP;
          case 1 : return Which.EXCEPTION;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final int getPromiseId() {
        return _getIntField(0);
      }

      public final boolean isCap() {
        return which() == Resolve.Which.CAP;
      }
      public boolean hasCap() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.CapDescriptor.Reader getCap() {
        assert which() == Resolve.Which.CAP:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.CapDescriptor.factory,0,null, 0);
      }

      public final boolean isException() {
        return which() == Resolve.Which.EXCEPTION;
      }
      public boolean hasException() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.Exception.Reader getException() {
        assert which() == Resolve.Which.EXCEPTION:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.Exception.factory,0,null, 0);
      }

    }

    public enum Which {
      CAP,
      EXCEPTION,
      _NOT_IN_SCHEMA,
    }
  }


  public static class Release {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Release.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final int getId() {
        return _getIntField(0);
      }
      public final void setId(int value) {
        _setIntField(0, value);
      }

      public final int getReferenceCount() {
        return _getIntField(1);
      }
      public final void setReferenceCount(int value) {
        _setIntField(1, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final int getId() {
        return _getIntField(0);
      }

      public final int getReferenceCount() {
        return _getIntField(1);
      }

    }

  }


  public static class Disembargo {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Disembargo.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final org.capnproto.RpcProtocol.MessageTarget.Builder getTarget() {
        return _getPointerField(org.capnproto.RpcProtocol.MessageTarget.factory, 0, null, 0);
      }
      public final void setTarget(org.capnproto.RpcProtocol.MessageTarget.Reader value) {
        _setPointerField(org.capnproto.RpcProtocol.MessageTarget.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.MessageTarget.Builder initTarget() {
        return _initPointerField(org.capnproto.RpcProtocol.MessageTarget.factory,0, 0);
      }
      public final Context.Builder getContext() {
        return new Disembargo.Context.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final Context.Builder initContext() {
        _setIntField(0,0);
        _setShortField(2,(short)0);
  return new Disembargo.Context.Builder(segment, data, pointers, dataSize, pointerCount);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasTarget() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.MessageTarget.Reader getTarget() {
        return _getPointerField(org.capnproto.RpcProtocol.MessageTarget.factory,0,null, 0);
      }

      public Context.Reader getContext() {
        return new Disembargo.Context.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

    }

    public static class Context {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Disembargo.Context.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(2)) {
            case 0 : return Which.SENDER_LOOPBACK;
            case 1 : return Which.RECEIVER_LOOPBACK;
            case 2 : return Which.ACCEPT;
            case 3 : return Which.PROVIDE;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean isSenderLoopback() {
          return which() == Disembargo.Context.Which.SENDER_LOOPBACK;
        }
        public final int getSenderLoopback() {
          assert which() == Disembargo.Context.Which.SENDER_LOOPBACK:
                      "Must check which() before get()ing a union member.";
          return _getIntField(0);
        }
        public final void setSenderLoopback(int value) {
          _setShortField(2, (short)Disembargo.Context.Which.SENDER_LOOPBACK.ordinal());
          _setIntField(0, value);
        }

        public final boolean isReceiverLoopback() {
          return which() == Disembargo.Context.Which.RECEIVER_LOOPBACK;
        }
        public final int getReceiverLoopback() {
          assert which() == Disembargo.Context.Which.RECEIVER_LOOPBACK:
                      "Must check which() before get()ing a union member.";
          return _getIntField(0);
        }
        public final void setReceiverLoopback(int value) {
          _setShortField(2, (short)Disembargo.Context.Which.RECEIVER_LOOPBACK.ordinal());
          _setIntField(0, value);
        }

        public final boolean isAccept() {
          return which() == Disembargo.Context.Which.ACCEPT;
        }
        public final org.capnproto.Void getAccept() {
          assert which() == Disembargo.Context.Which.ACCEPT:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }
        public final void setAccept(org.capnproto.Void value) {
          _setShortField(2, (short)Disembargo.Context.Which.ACCEPT.ordinal());
        }

        public final boolean isProvide() {
          return which() == Disembargo.Context.Which.PROVIDE;
        }
        public final int getProvide() {
          assert which() == Disembargo.Context.Which.PROVIDE:
                      "Must check which() before get()ing a union member.";
          return _getIntField(0);
        }
        public final void setProvide(int value) {
          _setShortField(2, (short)Disembargo.Context.Which.PROVIDE.ordinal());
          _setIntField(0, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(2)) {
            case 0 : return Which.SENDER_LOOPBACK;
            case 1 : return Which.RECEIVER_LOOPBACK;
            case 2 : return Which.ACCEPT;
            case 3 : return Which.PROVIDE;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final boolean isSenderLoopback() {
          return which() == Disembargo.Context.Which.SENDER_LOOPBACK;
        }
        public final int getSenderLoopback() {
          assert which() == Disembargo.Context.Which.SENDER_LOOPBACK:
                      "Must check which() before get()ing a union member.";
          return _getIntField(0);
        }

        public final boolean isReceiverLoopback() {
          return which() == Disembargo.Context.Which.RECEIVER_LOOPBACK;
        }
        public final int getReceiverLoopback() {
          assert which() == Disembargo.Context.Which.RECEIVER_LOOPBACK:
                      "Must check which() before get()ing a union member.";
          return _getIntField(0);
        }

        public final boolean isAccept() {
          return which() == Disembargo.Context.Which.ACCEPT;
        }
        public final org.capnproto.Void getAccept() {
          assert which() == Disembargo.Context.Which.ACCEPT:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }

        public final boolean isProvide() {
          return which() == Disembargo.Context.Which.PROVIDE;
        }
        public final int getProvide() {
          assert which() == Disembargo.Context.Which.PROVIDE:
                      "Must check which() before get()ing a union member.";
          return _getIntField(0);
        }

      }

      public enum Which {
        SENDER_LOOPBACK,
        RECEIVER_LOOPBACK,
        ACCEPT,
        PROVIDE,
        _NOT_IN_SCHEMA,
      }
    }


  }


  public static class Provide {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Provide.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final int getQuestionId() {
        return _getIntField(0);
      }
      public final void setQuestionId(int value) {
        _setIntField(0, value);
      }

      public final org.capnproto.RpcProtocol.MessageTarget.Builder getTarget() {
        return _getPointerField(org.capnproto.RpcProtocol.MessageTarget.factory, 0, null, 0);
      }
      public final void setTarget(org.capnproto.RpcProtocol.MessageTarget.Reader value) {
        _setPointerField(org.capnproto.RpcProtocol.MessageTarget.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.MessageTarget.Builder initTarget() {
        return _initPointerField(org.capnproto.RpcProtocol.MessageTarget.factory,0, 0);
      }
      public final boolean hasRecipient() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.AnyPointer.Builder getRecipient() {
        return _getPointerField(org.capnproto.AnyPointer.factory, 1);
      }
      public org.capnproto.AnyPointer.Builder initRecipient() {
        return _initPointerField(org.capnproto.AnyPointer.factory, 1, 0);
      }
      public org.capnproto.AnyPointer.Builder initRecipient(int size) {
        return _initPointerField(org.capnproto.AnyPointer.factory, 1, size);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final int getQuestionId() {
        return _getIntField(0);
      }

      public boolean hasTarget() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.MessageTarget.Reader getTarget() {
        return _getPointerField(org.capnproto.RpcProtocol.MessageTarget.factory,0,null, 0);
      }

      public boolean hasRecipient() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.AnyPointer.Reader getRecipient() {
        return _getPointerField(org.capnproto.AnyPointer.factory, 1);
      }
    }

  }


  public static class Accept {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Accept.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final int getQuestionId() {
        return _getIntField(0);
      }
      public final void setQuestionId(int value) {
        _setIntField(0, value);
      }

      public final boolean hasProvision() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Builder getProvision() {
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public org.capnproto.AnyPointer.Builder initProvision() {
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, 0);
      }
      public org.capnproto.AnyPointer.Builder initProvision(int size) {
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, size);
      }

      public final boolean getEmbargo() {
        return _getBooleanField(32);
      }
      public final void setEmbargo(boolean value) {
        _setBooleanField(32, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final int getQuestionId() {
        return _getIntField(0);
      }

      public boolean hasProvision() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Reader getProvision() {
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public final boolean getEmbargo() {
        return _getBooleanField(32);
      }

    }

  }


  public static class Join {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Join.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final int getQuestionId() {
        return _getIntField(0);
      }
      public final void setQuestionId(int value) {
        _setIntField(0, value);
      }

      public final org.capnproto.RpcProtocol.MessageTarget.Builder getTarget() {
        return _getPointerField(org.capnproto.RpcProtocol.MessageTarget.factory, 0, null, 0);
      }
      public final void setTarget(org.capnproto.RpcProtocol.MessageTarget.Reader value) {
        _setPointerField(org.capnproto.RpcProtocol.MessageTarget.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.MessageTarget.Builder initTarget() {
        return _initPointerField(org.capnproto.RpcProtocol.MessageTarget.factory,0, 0);
      }
      public final boolean hasKeyPart() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.AnyPointer.Builder getKeyPart() {
        return _getPointerField(org.capnproto.AnyPointer.factory, 1);
      }
      public org.capnproto.AnyPointer.Builder initKeyPart() {
        return _initPointerField(org.capnproto.AnyPointer.factory, 1, 0);
      }
      public org.capnproto.AnyPointer.Builder initKeyPart(int size) {
        return _initPointerField(org.capnproto.AnyPointer.factory, 1, size);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final int getQuestionId() {
        return _getIntField(0);
      }

      public boolean hasTarget() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.MessageTarget.Reader getTarget() {
        return _getPointerField(org.capnproto.RpcProtocol.MessageTarget.factory,0,null, 0);
      }

      public boolean hasKeyPart() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.AnyPointer.Reader getKeyPart() {
        return _getPointerField(org.capnproto.AnyPointer.factory, 1);
      }
    }

  }


  public static class MessageTarget {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return MessageTarget.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(2)) {
          case 0 : return Which.IMPORTED_CAP;
          case 1 : return Which.PROMISED_ANSWER;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean isImportedCap() {
        return which() == MessageTarget.Which.IMPORTED_CAP;
      }
      public final int getImportedCap() {
        assert which() == MessageTarget.Which.IMPORTED_CAP:
                    "Must check which() before get()ing a union member.";
        return _getIntField(0);
      }
      public final void setImportedCap(int value) {
        _setShortField(2, (short)MessageTarget.Which.IMPORTED_CAP.ordinal());
        _setIntField(0, value);
      }

      public final boolean isPromisedAnswer() {
        return which() == MessageTarget.Which.PROMISED_ANSWER;
      }
      public final org.capnproto.RpcProtocol.PromisedAnswer.Builder getPromisedAnswer() {
        assert which() == MessageTarget.Which.PROMISED_ANSWER:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.PromisedAnswer.factory, 0, null, 0);
      }
      public final void setPromisedAnswer(org.capnproto.RpcProtocol.PromisedAnswer.Reader value) {
        _setShortField(2, (short)MessageTarget.Which.PROMISED_ANSWER.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.PromisedAnswer.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.PromisedAnswer.Builder initPromisedAnswer() {
        _setShortField(2, (short)MessageTarget.Which.PROMISED_ANSWER.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.PromisedAnswer.factory,0, 0);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(2)) {
          case 0 : return Which.IMPORTED_CAP;
          case 1 : return Which.PROMISED_ANSWER;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final boolean isImportedCap() {
        return which() == MessageTarget.Which.IMPORTED_CAP;
      }
      public final int getImportedCap() {
        assert which() == MessageTarget.Which.IMPORTED_CAP:
                    "Must check which() before get()ing a union member.";
        return _getIntField(0);
      }

      public final boolean isPromisedAnswer() {
        return which() == MessageTarget.Which.PROMISED_ANSWER;
      }
      public boolean hasPromisedAnswer() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.PromisedAnswer.Reader getPromisedAnswer() {
        assert which() == MessageTarget.Which.PROMISED_ANSWER:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.PromisedAnswer.factory,0,null, 0);
      }

    }

    public enum Which {
      IMPORTED_CAP,
      PROMISED_ANSWER,
      _NOT_IN_SCHEMA,
    }
  }


  public static class Payload {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Payload.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasContent() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Builder getContent() {
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public org.capnproto.AnyPointer.Builder initContent() {
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, 0);
      }
      public org.capnproto.AnyPointer.Builder initContent(int size) {
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, size);
      }

      public final boolean hasCapTable() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.RpcProtocol.CapDescriptor.Builder> getCapTable() {
        return _getPointerField(org.capnproto.RpcProtocol.CapDescriptor.listFactory, 1, null, 0);
      }
      public final void setCapTable(org.capnproto.StructList.Reader<org.capnproto.RpcProtocol.CapDescriptor.Reader> value) {
        _setPointerField(org.capnproto.RpcProtocol.CapDescriptor.listFactory, 1, value);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.RpcProtocol.CapDescriptor.Builder> initCapTable(int size) {
        return _initPointerField(org.capnproto.RpcProtocol.CapDescriptor.listFactory, 1, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasContent() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Reader getContent() {
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public final boolean hasCapTable() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Reader<org.capnproto.RpcProtocol.CapDescriptor.Reader> getCapTable() {
        return _getPointerField(org.capnproto.RpcProtocol.CapDescriptor.listFactory, 1, null, 0);
      }

    }

  }


  public static class CapDescriptor {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return CapDescriptor.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(0)) {
          case 0 : return Which.NONE;
          case 1 : return Which.SENDER_HOSTED;
          case 2 : return Which.SENDER_PROMISE;
          case 3 : return Which.RECEIVER_HOSTED;
          case 4 : return Which.RECEIVER_ANSWER;
          case 5 : return Which.THIRD_PARTY_HOSTED;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean isNone() {
        return which() == CapDescriptor.Which.NONE;
      }
      public final org.capnproto.Void getNone() {
        assert which() == CapDescriptor.Which.NONE:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setNone(org.capnproto.Void value) {
        _setShortField(0, (short)CapDescriptor.Which.NONE.ordinal());
      }

      public final boolean isSenderHosted() {
        return which() == CapDescriptor.Which.SENDER_HOSTED;
      }
      public final int getSenderHosted() {
        assert which() == CapDescriptor.Which.SENDER_HOSTED:
                    "Must check which() before get()ing a union member.";
        return _getIntField(1);
      }
      public final void setSenderHosted(int value) {
        _setShortField(0, (short)CapDescriptor.Which.SENDER_HOSTED.ordinal());
        _setIntField(1, value);
      }

      public final boolean isSenderPromise() {
        return which() == CapDescriptor.Which.SENDER_PROMISE;
      }
      public final int getSenderPromise() {
        assert which() == CapDescriptor.Which.SENDER_PROMISE:
                    "Must check which() before get()ing a union member.";
        return _getIntField(1);
      }
      public final void setSenderPromise(int value) {
        _setShortField(0, (short)CapDescriptor.Which.SENDER_PROMISE.ordinal());
        _setIntField(1, value);
      }

      public final boolean isReceiverHosted() {
        return which() == CapDescriptor.Which.RECEIVER_HOSTED;
      }
      public final int getReceiverHosted() {
        assert which() == CapDescriptor.Which.RECEIVER_HOSTED:
                    "Must check which() before get()ing a union member.";
        return _getIntField(1);
      }
      public final void setReceiverHosted(int value) {
        _setShortField(0, (short)CapDescriptor.Which.RECEIVER_HOSTED.ordinal());
        _setIntField(1, value);
      }

      public final boolean isReceiverAnswer() {
        return which() == CapDescriptor.Which.RECEIVER_ANSWER;
      }
      public final org.capnproto.RpcProtocol.PromisedAnswer.Builder getReceiverAnswer() {
        assert which() == CapDescriptor.Which.RECEIVER_ANSWER:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.PromisedAnswer.factory, 0, null, 0);
      }
      public final void setReceiverAnswer(org.capnproto.RpcProtocol.PromisedAnswer.Reader value) {
        _setShortField(0, (short)CapDescriptor.Which.RECEIVER_ANSWER.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.PromisedAnswer.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.PromisedAnswer.Builder initReceiverAnswer() {
        _setShortField(0, (short)CapDescriptor.Which.RECEIVER_ANSWER.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.PromisedAnswer.factory,0, 0);
      }
      public final boolean isThirdPartyHosted() {
        return which() == CapDescriptor.Which.THIRD_PARTY_HOSTED;
      }
      public final org.capnproto.RpcProtocol.ThirdPartyCapDescriptor.Builder getThirdPartyHosted() {
        assert which() == CapDescriptor.Which.THIRD_PARTY_HOSTED:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.ThirdPartyCapDescriptor.factory, 0, null, 0);
      }
      public final void setThirdPartyHosted(org.capnproto.RpcProtocol.ThirdPartyCapDescriptor.Reader value) {
        _setShortField(0, (short)CapDescriptor.Which.THIRD_PARTY_HOSTED.ordinal());
        _setPointerField(org.capnproto.RpcProtocol.ThirdPartyCapDescriptor.factory,0, value);
      }
      public final org.capnproto.RpcProtocol.ThirdPartyCapDescriptor.Builder initThirdPartyHosted() {
        _setShortField(0, (short)CapDescriptor.Which.THIRD_PARTY_HOSTED.ordinal());
        return _initPointerField(org.capnproto.RpcProtocol.ThirdPartyCapDescriptor.factory,0, 0);
      }
      public final byte getAttachedFd() {
        return _getByteField(2, (byte)-1);
      }
      public final void setAttachedFd(byte value) {
        _setByteField(2, value, (byte)-1);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(0)) {
          case 0 : return Which.NONE;
          case 1 : return Which.SENDER_HOSTED;
          case 2 : return Which.SENDER_PROMISE;
          case 3 : return Which.RECEIVER_HOSTED;
          case 4 : return Which.RECEIVER_ANSWER;
          case 5 : return Which.THIRD_PARTY_HOSTED;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final boolean isNone() {
        return which() == CapDescriptor.Which.NONE;
      }
      public final org.capnproto.Void getNone() {
        assert which() == CapDescriptor.Which.NONE:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isSenderHosted() {
        return which() == CapDescriptor.Which.SENDER_HOSTED;
      }
      public final int getSenderHosted() {
        assert which() == CapDescriptor.Which.SENDER_HOSTED:
                    "Must check which() before get()ing a union member.";
        return _getIntField(1);
      }

      public final boolean isSenderPromise() {
        return which() == CapDescriptor.Which.SENDER_PROMISE;
      }
      public final int getSenderPromise() {
        assert which() == CapDescriptor.Which.SENDER_PROMISE:
                    "Must check which() before get()ing a union member.";
        return _getIntField(1);
      }

      public final boolean isReceiverHosted() {
        return which() == CapDescriptor.Which.RECEIVER_HOSTED;
      }
      public final int getReceiverHosted() {
        assert which() == CapDescriptor.Which.RECEIVER_HOSTED:
                    "Must check which() before get()ing a union member.";
        return _getIntField(1);
      }

      public final boolean isReceiverAnswer() {
        return which() == CapDescriptor.Which.RECEIVER_ANSWER;
      }
      public boolean hasReceiverAnswer() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.PromisedAnswer.Reader getReceiverAnswer() {
        assert which() == CapDescriptor.Which.RECEIVER_ANSWER:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.PromisedAnswer.factory,0,null, 0);
      }

      public final boolean isThirdPartyHosted() {
        return which() == CapDescriptor.Which.THIRD_PARTY_HOSTED;
      }
      public boolean hasThirdPartyHosted() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.RpcProtocol.ThirdPartyCapDescriptor.Reader getThirdPartyHosted() {
        assert which() == CapDescriptor.Which.THIRD_PARTY_HOSTED:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.RpcProtocol.ThirdPartyCapDescriptor.factory,0,null, 0);
      }

      public final byte getAttachedFd() {
        return _getByteField(2, (byte)-1);
      }

    }

    public enum Which {
      NONE,
      SENDER_HOSTED,
      SENDER_PROMISE,
      RECEIVER_HOSTED,
      RECEIVER_ANSWER,
      THIRD_PARTY_HOSTED,
      _NOT_IN_SCHEMA,
    }
  }


  public static class PromisedAnswer {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return PromisedAnswer.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final int getQuestionId() {
        return _getIntField(0);
      }
      public final void setQuestionId(int value) {
        _setIntField(0, value);
      }

      public final boolean hasTransform() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.RpcProtocol.PromisedAnswer.Op.Builder> getTransform() {
        return _getPointerField(org.capnproto.RpcProtocol.PromisedAnswer.Op.listFactory, 0, null, 0);
      }
      public final void setTransform(org.capnproto.StructList.Reader<org.capnproto.RpcProtocol.PromisedAnswer.Op.Reader> value) {
        _setPointerField(org.capnproto.RpcProtocol.PromisedAnswer.Op.listFactory, 0, value);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.RpcProtocol.PromisedAnswer.Op.Builder> initTransform(int size) {
        return _initPointerField(org.capnproto.RpcProtocol.PromisedAnswer.Op.listFactory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final int getQuestionId() {
        return _getIntField(0);
      }

      public final boolean hasTransform() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.StructList.Reader<org.capnproto.RpcProtocol.PromisedAnswer.Op.Reader> getTransform() {
        return _getPointerField(org.capnproto.RpcProtocol.PromisedAnswer.Op.listFactory, 0, null, 0);
      }

    }

    public static class Op {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return PromisedAnswer.Op.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(0)) {
            case 0 : return Which.NOOP;
            case 1 : return Which.GET_POINTER_FIELD;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean isNoop() {
          return which() == PromisedAnswer.Op.Which.NOOP;
        }
        public final org.capnproto.Void getNoop() {
          assert which() == PromisedAnswer.Op.Which.NOOP:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }
        public final void setNoop(org.capnproto.Void value) {
          _setShortField(0, (short)PromisedAnswer.Op.Which.NOOP.ordinal());
        }

        public final boolean isGetPointerField() {
          return which() == PromisedAnswer.Op.Which.GET_POINTER_FIELD;
        }
        public final short getGetPointerField() {
          assert which() == PromisedAnswer.Op.Which.GET_POINTER_FIELD:
                      "Must check which() before get()ing a union member.";
          return _getShortField(1);
        }
        public final void setGetPointerField(short value) {
          _setShortField(0, (short)PromisedAnswer.Op.Which.GET_POINTER_FIELD.ordinal());
          _setShortField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(0)) {
            case 0 : return Which.NOOP;
            case 1 : return Which.GET_POINTER_FIELD;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final boolean isNoop() {
          return which() == PromisedAnswer.Op.Which.NOOP;
        }
        public final org.capnproto.Void getNoop() {
          assert which() == PromisedAnswer.Op.Which.NOOP:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }

        public final boolean isGetPointerField() {
          return which() == PromisedAnswer.Op.Which.GET_POINTER_FIELD;
        }
        public final short getGetPointerField() {
          assert which() == PromisedAnswer.Op.Which.GET_POINTER_FIELD:
                      "Must check which() before get()ing a union member.";
          return _getShortField(1);
        }

      }

      public enum Which {
        NOOP,
        GET_POINTER_FIELD,
        _NOT_IN_SCHEMA,
      }
    }


  }


  public static class ThirdPartyCapDescriptor {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return ThirdPartyCapDescriptor.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasId() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Builder getId() {
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public org.capnproto.AnyPointer.Builder initId() {
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, 0);
      }
      public org.capnproto.AnyPointer.Builder initId(int size) {
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, size);
      }

      public final int getVineId() {
        return _getIntField(0);
      }
      public final void setVineId(int value) {
        _setIntField(0, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasId() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Reader getId() {
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public final int getVineId() {
        return _getIntField(0);
      }

    }

  }


  public static class Exception {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Exception.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasReason() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getReason() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setReason(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setReason(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initReason(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final boolean getObsoleteIsCallersFault() {
        return _getBooleanField(0);
      }
      public final void setObsoleteIsCallersFault(boolean value) {
        _setBooleanField(0, value);
      }

      public final short getObsoleteDurability() {
        return _getShortField(1);
      }
      public final void setObsoleteDurability(short value) {
        _setShortField(1, value);
      }

      public final org.capnproto.RpcProtocol.Exception.Type getType() {
        switch(_getShortField(2)) {
          case 0 : return org.capnproto.RpcProtocol.Exception.Type.FAILED;
          case 1 : return org.capnproto.RpcProtocol.Exception.Type.OVERLOADED;
          case 2 : return org.capnproto.RpcProtocol.Exception.Type.DISCONNECTED;
          case 3 : return org.capnproto.RpcProtocol.Exception.Type.UNIMPLEMENTED;
          default: return org.capnproto.RpcProtocol.Exception.Type._NOT_IN_SCHEMA;
        }
      }
      public final void setType(org.capnproto.RpcProtocol.Exception.Type value) {
        _setShortField(2, (short)value.ordinal());
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasReason() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getReason() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public final boolean getObsoleteIsCallersFault() {
        return _getBooleanField(0);
      }

      public final short getObsoleteDurability() {
        return _getShortField(1);
      }

      public final org.capnproto.RpcProtocol.Exception.Type getType() {
        switch(_getShortField(2)) {
          case 0 : return org.capnproto.RpcProtocol.Exception.Type.FAILED;
          case 1 : return org.capnproto.RpcProtocol.Exception.Type.OVERLOADED;
          case 2 : return org.capnproto.RpcProtocol.Exception.Type.DISCONNECTED;
          case 3 : return org.capnproto.RpcProtocol.Exception.Type.UNIMPLEMENTED;
          default: return org.capnproto.RpcProtocol.Exception.Type._NOT_IN_SCHEMA;
        }
      }

    }

    public enum Type {
      FAILED,
      OVERLOADED,
      DISCONNECTED,
      UNIMPLEMENTED,
      _NOT_IN_SCHEMA,
    }

  }



public static final class Schemas {
public static final org.capnproto.SegmentReader b_91b79f1f808db032 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0032\u00b0\u008d\u0080\u001f\u009f\u00b7\u0091" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u000e\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00b2\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0017\u0003\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u004d\u0065" +
   "\u0073\u0073\u0061\u0067\u0065\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0038\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0079\u0001\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0078\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0084\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0081\u0001\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0088\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00fd\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0085\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0080\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u008c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u00fc\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0089\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0084\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0090\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u00fb\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008d\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0088\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0094\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u00fa\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0091\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0098\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u00f9\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0095\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0090\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u009c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0009\u0000\u00f8\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0099\u0001\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0098\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a4\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00f7\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0001\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a0\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ac\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\n\u0000\u00f6\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0009\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a9\u0001\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a8\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b4\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000b\u0000\u00f5\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\n\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b1\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ac\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b8\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000c\u0000\u00f4\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000b\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b5\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00bc\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\r\u0000\u00f3\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000c\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b4\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c0\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0008\u0000\u00f2\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\r\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00bd\u0001\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00bc\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c8\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0075\u006e\u0069\u006d\u0070\u006c\u0065\u006d" +
   "\u0065\u006e\u0074\u0065\u0064\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0032\u00b0\u008d\u0080\u001f\u009f\u00b7\u0091" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0062\u006f\u0072\u0074\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001a\u0069\u00cf\u003a\u0006\u00b7\u0025\u00d6" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0061\u006c\u006c\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d4\u004c\u009d\u0078\u00ce\u0053\u006a\u0083" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0074\u0075\u0072\u006e\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003a\u0057\u00b3\u003d\u008d\u00b2\u0019\u009e" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u006e\u0069\u0073\u0068\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u000e\u00f8\u00c2\u00b2\u002e\u007d\u00d3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0073\u006f\u006c\u0076\u0065\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u0008\u0089\u00fa\u0055\u0096\u00c2\u00bb" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u006c\u0065\u0061\u0073\u0065\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0097\u0074\u00d0\u007d\r\u006c\u001a\u00ad" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u0062\u0073\u006f\u006c\u0065\u0074\u0065" +
   "\u0053\u0061\u0076\u0065\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u006f\u006f\u0074\u0073\u0074\u0072\u0061" +
   "\u0070\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c4\u006e\u0017\u0031\u0080\u00cf\u004c\u00e9" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u0062\u0073\u006f\u006c\u0065\u0074\u0065" +
   "\u0044\u0065\u006c\u0065\u0074\u0065\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u005a\u00ac\u00c1\u00fb\u006b\u0004\u006a\u009c" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0063\u0063\u0065\u0070\u0074\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0016\u0040\u0055\u0090\u0062\u00b5\u00c9\u00d4" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006a\u006f\u0069\u006e\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00af\u0001\u00e0\u0090\u0004\u0098\u00e1\u00fb" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0069\u0073\u0065\u006d\u0062\u0061\u0072" +
   "\u0067\u006f\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0037\u00bd\u000f\u008b\u0036\u0064\u00f9" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_e94ccf8031176ec4 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00c4\u006e\u0017\u0031\u0080\u00cf\u004c\u00e9" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00c2\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0042\u006f" +
   "\u006f\u0074\u0073\u0074\u0072\u0061\u0070\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u009a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0034\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0040\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e" +
   "\u0049\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0065\u0070\u0072\u0065\u0063\u0061\u0074" +
   "\u0065\u0064\u004f\u0062\u006a\u0065\u0063\u0074" +
   "\u0049\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_836a53ce789d4cd4 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00d4\u004c\u009d\u0078\u00ce\u0053\u006a\u0083" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u009a\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u008f\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0043\u0061" +
   "\u006c\u006c\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b5\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00bd\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c1\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00cc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c9\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d1\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00cc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0099\u005f\u00ab\u001a\u00f6\u00b0\u00e8\u00da" +
   "\u00d5\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0080\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c1\u0000\u0000\u0000\u00c2\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e" +
   "\u0049\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0072\u0067\u0065\u0074\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c1\u00fb\u0013\u0058\u0054\u0014\u00bc\u0095" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063" +
   "\u0065\u0049\u0064\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u0065\u0074\u0068\u006f\u0064\u0049\u0064" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0061\u0072\u0061\u006d\u0073\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003b\u0074\u0096\u003d\"\u0061\u000e\u009a" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0065\u006e\u0064\u0052\u0065\u0073\u0075" +
   "\u006c\u0074\u0073\u0054\u006f\u0000\u0000\u0000" +
   "\u0061\u006c\u006c\u006f\u0077\u0054\u0068\u0069" +
   "\u0072\u0064\u0050\u0061\u0072\u0074\u0079\u0054" +
   "\u0061\u0069\u006c\u0043\u0061\u006c\u006c\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_dae8b0f61aab5f99 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0099\u005f\u00ab\u001a\u00f6\u00b0\u00e8\u00da" +
   "\u0033\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u00d4\u004c\u009d\u0078\u00ce\u0053\u006a\u0083" +
   "\u0003\u0000\u0007\u0000\u0001\u0000\u0003\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\n\u0002\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0043\u0061" +
   "\u006c\u006c\u002e\u0073\u0065\u006e\u0064\u0052" +
   "\u0065\u0073\u0075\u006c\u0074\u0073\u0054\u006f" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fd\u00ff\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0061\u006c\u006c\u0065\u0072\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0079\u006f\u0075\u0072\u0073\u0065\u006c\u0066" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0068\u0069\u0072\u0064\u0050\u0061\u0072" +
   "\u0074\u0079\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9e19b28d3db3573a =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u003a\u0057\u00b3\u003d\u008d\u00b2\u0019\u009e" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0006\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00aa\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00c7\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0052\u0065" +
   "\u0074\u0075\u0072\u006e\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0020\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d1\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00dc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0020\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d9\u0000\u0000\u0000\u008a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00dc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00e8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e5\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ec\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e9\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u00fd\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f1\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00fc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u00fc\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f9\u0000\u0000\u0000\u00aa\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00fc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u00fb\u00ff\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0001\u0000\u0000\u00b2\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u00fa\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0001\u0000\u0000\u00aa\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0014\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0020\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0061\u006e\u0073\u0077\u0065\u0072\u0049\u0064" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u006c\u0065\u0061\u0073\u0065\u0050" +
   "\u0061\u0072\u0061\u006d\u0043\u0061\u0070\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003b\u0074\u0096\u003d\"\u0061\u000e\u009a" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006f" +
   "\u006e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001a\u0069\u00cf\u003a\u0006\u00b7\u0025\u00d6" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0061\u006e\u0063\u0065\u006c\u0065\u0064" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u0053" +
   "\u0065\u006e\u0074\u0045\u006c\u0073\u0065\u0077" +
   "\u0068\u0065\u0072\u0065\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u006b\u0065\u0046\u0072\u006f\u006d" +
   "\u004f\u0074\u0068\u0065\u0072\u0051\u0075\u0065" +
   "\u0073\u0074\u0069\u006f\u006e\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0063\u0063\u0065\u0070\u0074\u0046\u0072" +
   "\u006f\u006d\u0054\u0068\u0069\u0072\u0064\u0050" +
   "\u0061\u0072\u0074\u0079\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d37d2eb2c2f80e63 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0063\u000e\u00f8\u00c2\u00b2\u002e\u007d\u00d3" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00aa\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0046\u0069" +
   "\u006e\u0069\u0073\u0068\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0020\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0092\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0034\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0040\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e" +
   "\u0049\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u006c\u0065\u0061\u0073\u0065\u0052" +
   "\u0065\u0073\u0075\u006c\u0074\u0043\u0061\u0070" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_bbc29655fa89086e =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u006e\u0008\u0089\u00fa\u0055\u0096\u00c2\u00bb" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00b2\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0052\u0065" +
   "\u0073\u006f\u006c\u0076\u0065\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0070\u0072\u006f\u006d\u0069\u0073\u0065\u0049" +
   "\u0064\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0061\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u00b8\u0086\u000b\u00c4\u00dd\u0023\u0085" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006f" +
   "\u006e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001a\u0069\u00cf\u003a\u0006\u00b7\u0025\u00d6" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ad1a6c0d7dd07497 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0097\u0074\u00d0\u007d\r\u006c\u001a\u00ad" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00b2\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0052\u0065" +
   "\u006c\u0065\u0061\u0073\u0065\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063" +
   "\u0065\u0043\u006f\u0075\u006e\u0074\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_f964368b0fbd3711 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0011\u0037\u00bd\u000f\u008b\u0036\u0064\u00f9" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ca\u0001\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0069" +
   "\u0073\u0065\u006d\u0062\u0061\u0072\u0067\u006f" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u00dd\u005b\u0065\u00df\u00b4\u0062\u00d5" +
   "\u002d\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0072\u0067\u0065\u0074\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c1\u00fb\u0013\u0058\u0054\u0014\u00bc\u0095" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0000" + "");
public static final org.capnproto.SegmentReader b_d562b4df655bdd4d =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u004d\u00dd\u005b\u0065\u00df\u00b4\u0062\u00d5" +
   "\u0039\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0011\u0037\u00bd\u000f\u008b\u0036\u0064\u00f9" +
   "\u0001\u0000\u0007\u0000\u0001\u0000\u0004\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\n\u0002\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0069" +
   "\u0073\u0065\u006d\u0062\u0061\u0072\u0067\u006f" +
   "\u002e\u0063\u006f\u006e\u0074\u0065\u0078\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0060\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u006c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0000\u0000\u0000\u008a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0078\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fd\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u007c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00fc\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0079\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0080\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0065\u006e\u0064\u0065\u0072\u004c\u006f" +
   "\u006f\u0070\u0062\u0061\u0063\u006b\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0063\u0065\u0069\u0076\u0065\u0072" +
   "\u004c\u006f\u006f\u0070\u0062\u0061\u0063\u006b" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0063\u0063\u0065\u0070\u0074\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9c6a046bfbc1ac5a =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u005a\u00ac\u00c1\u00fb\u006b\u0004\u006a\u009c" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00b2\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0072" +
   "\u006f\u0076\u0069\u0064\u0065\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e" +
   "\u0049\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0072\u0067\u0065\u0074\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c1\u00fb\u0013\u0058\u0054\u0014\u00bc\u0095" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0063\u0069\u0070\u0069\u0065\u006e" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d4c9b56290554016 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0016\u0040\u0055\u0090\u0062\u00b5\u00c9\u00d4" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00aa\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0041\u0063" +
   "\u0063\u0065\u0070\u0074\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0020\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e" +
   "\u0049\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0072\u006f\u0076\u0069\u0073\u0069\u006f" +
   "\u006e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u006d\u0062\u0061\u0072\u0067\u006f\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_fbe1980490e001af =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00af\u0001\u00e0\u0090\u0004\u0098\u00e1\u00fb" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u009a\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u004a\u006f" +
   "\u0069\u006e\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e" +
   "\u0049\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0072\u0067\u0065\u0074\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c1\u00fb\u0013\u0058\u0054\u0014\u00bc\u0095" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006b\u0065\u0079\u0050\u0061\u0072\u0074\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_95bc14545813fbc1 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00c1\u00fb\u0013\u0058\u0054\u0014\u00bc\u0095" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e2\u0001\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u004d\u0065" +
   "\u0073\u0073\u0061\u0067\u0065\u0054\u0061\u0072" +
   "\u0067\u0065\u0074\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0030\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u006d\u0070\u006f\u0072\u0074\u0065\u0064" +
   "\u0043\u0061\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0072\u006f\u006d\u0069\u0073\u0065\u0064" +
   "\u0041\u006e\u0073\u0077\u0065\u0072\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a0\u001c\u006f\u00cd\u00d6\u00b1\u0000\u00d8" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9a0e61223d96743b =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u003b\u0074\u0096\u003d\"\u0061\u000e\u009a" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00b2\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0061" +
   "\u0079\u006c\u006f\u0061\u0064\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0048\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0061\u0070\u0054\u0061\u0062\u006c\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u00b8\u0086\u000b\u00c4\u00dd\u0023\u0085" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_8523ddc40b86b8b0 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b0\u00b8\u0086\u000b\u00c4\u00dd\u0023\u0085" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0006\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e2\u0001\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u008f\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0043\u0061" +
   "\u0070\u0044\u0065\u0073\u0063\u0072\u0069\u0070" +
   "\u0074\u006f\u0072\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b5\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00bc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fd\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c1\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00cc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00fc\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c9\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u00fb\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d1\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00dc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u00fa\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d9\u0000\u0000\u0000\u008a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00dc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00e8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e5\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u006f\u006e\u0065\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0065\u006e\u0064\u0065\u0072\u0048\u006f" +
   "\u0073\u0074\u0065\u0064\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0065\u006e\u0064\u0065\u0072\u0050\u0072" +
   "\u006f\u006d\u0069\u0073\u0065\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0063\u0065\u0069\u0076\u0065\u0072" +
   "\u0048\u006f\u0073\u0074\u0065\u0064\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0063\u0065\u0069\u0076\u0065\u0072" +
   "\u0041\u006e\u0073\u0077\u0065\u0072\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a0\u001c\u006f\u00cd\u00d6\u00b1\u0000\u00d8" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0068\u0069\u0072\u0064\u0050\u0061\u0072" +
   "\u0074\u0079\u0048\u006f\u0073\u0074\u0065\u0064" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007d\u0002\u00f0\u00e1\u00fd\u0007\u0070\u00d3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0074\u0074\u0061\u0063\u0068\u0065\u0064" +
   "\u0046\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0006\u0000\u00ff\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d800b1d6cd6f1ca0 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00a0\u001c\u006f\u00cd\u00d6\u00b1\u0000\u00d8" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0001\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0039\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0072" +
   "\u006f\u006d\u0069\u0073\u0065\u0064\u0041\u006e" +
   "\u0073\u0077\u0065\u0072\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0081\u0090\u0056\u0015\u0044\u0094\u0016\u00f3" +
   "\u0001\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u004f\u0070\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0030\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e" +
   "\u0049\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0072\u0061\u006e\u0073\u0066\u006f\u0072" +
   "\u006d\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0081\u0090\u0056\u0015\u0044\u0094\u0016\u00f3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_f316944415569081 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0081\u0090\u0056\u0015\u0044\u0094\u0016\u00f3" +
   "\u003d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00a0\u001c\u006f\u00cd\u00d6\u00b1\u0000\u00d8" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0002\u0002\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0072" +
   "\u006f\u006d\u0069\u0073\u0065\u0064\u0041\u006e" +
   "\u0073\u0077\u0065\u0072\u002e\u004f\u0070\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u006f\u006f\u0070\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0065\u0074\u0050\u006f\u0069\u006e\u0074" +
   "\u0065\u0072\u0046\u0069\u0065\u006c\u0064\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d37007fde1f0027d =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u007d\u0002\u00f0\u00e1\u00fd\u0007\u0070\u00d3" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0032\u0002\u0000\u0000" +
   "\u0035\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0054\u0068" +
   "\u0069\u0072\u0064\u0050\u0061\u0072\u0074\u0079" +
   "\u0043\u0061\u0070\u0044\u0065\u0073\u0063\u0072" +
   "\u0069\u0070\u0074\u006f\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0076\u0069\u006e\u0065\u0049\u0064\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d625b7063acf691a =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u001a\u0069\u00cf\u003a\u0006\u00b7\u0025\u00d6" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0050\u00a2\u0052\u0025\u001b\u0098\u0012\u00b3" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00c2\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0035\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0045\u0078" +
   "\u0063\u0065\u0070\u0074\u0069\u006f\u006e\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0058\u00bd\u004c\u003f\u00e2\u0096\u008c\u00b2" +
   "\u0001\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0054\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\\\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0068\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0000\u0000\u0000\u00ba\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\u009a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0080\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0072\u0065\u0061\u0073\u006f\u006e\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u0062\u0073\u006f\u006c\u0065\u0074\u0065" +
   "\u0049\u0073\u0043\u0061\u006c\u006c\u0065\u0072" +
   "\u0073\u0046\u0061\u0075\u006c\u0074\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u0062\u0073\u006f\u006c\u0065\u0074\u0065" +
   "\u0044\u0075\u0072\u0061\u0062\u0069\u006c\u0069" +
   "\u0074\u0079\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0058\u00bd\u004c\u003f\u00e2\u0096\u008c\u00b2" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b28c96e23f4cbd58 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0058\u00bd\u004c\u003f\u00e2\u0096\u008c\u00b2" +
   "\u0038\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u001a\u0069\u00cf\u003a\u0006\u00b7\u0025\u00d6" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0001\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0067\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0072\u0070\u0063\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0045\u0078" +
   "\u0063\u0065\u0070\u0074\u0069\u006f\u006e\u002e" +
   "\u0054\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0061\u0069\u006c\u0065\u0064\u0000\u0000" +
   "\u006f\u0076\u0065\u0072\u006c\u006f\u0061\u0064" +
   "\u0065\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0069\u0073\u0063\u006f\u006e\u006e\u0065" +
   "\u0063\u0074\u0065\u0064\u0000\u0000\u0000\u0000" +
   "\u0075\u006e\u0069\u006d\u0070\u006c\u0065\u006d" +
   "\u0065\u006e\u0074\u0065\u0064\u0000\u0000\u0000" + "");
}
}

