// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: schema.capnp

package org.capnproto;

public final class Schema {
  public static class Node {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)5,(short)6);
    public static final class Factory
        extends org.capnproto.StructFactory<Builder, Reader>
        implements org.capnproto.PipelineFactory<Pipeline> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Node.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
      public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
        return new Pipeline(promise);
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(6)) {
          case 0 : return Which.FILE;
          case 1 : return Which.STRUCT;
          case 2 : return Which.ENUM;
          case 3 : return Which.INTERFACE;
          case 4 : return Which.CONST;
          case 5 : return Which.ANNOTATION;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final long getId() {
        return _getLongField(0);
      }
      public final void setId(long value) {
        _setLongField(0, value);
      }

      public final boolean hasDisplayName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getDisplayName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setDisplayName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setDisplayName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initDisplayName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final int getDisplayNamePrefixLength() {
        return _getIntField(2);
      }
      public final void setDisplayNamePrefixLength(int value) {
        _setIntField(2, value);
      }

      public final long getScopeId() {
        return _getLongField(2);
      }
      public final void setScopeId(long value) {
        _setLongField(2, value);
      }

      public final boolean hasNestedNodes() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Node.NestedNode.Builder> getNestedNodes() {
        return _getPointerField(org.capnproto.Schema.Node.NestedNode.listFactory, 1, null, 0);
      }
      public final void setNestedNodes(org.capnproto.StructList.Reader<org.capnproto.Schema.Node.NestedNode.Reader> value) {
        _setPointerField(org.capnproto.Schema.Node.NestedNode.listFactory, 1, value);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Node.NestedNode.Builder> initNestedNodes(int size) {
        return _initPointerField(org.capnproto.Schema.Node.NestedNode.listFactory, 1, size);
      }
      public final boolean hasAnnotations() {
        return !_pointerFieldIsNull(2);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Annotation.Builder> getAnnotations() {
        return _getPointerField(org.capnproto.Schema.Annotation.listFactory, 2, null, 0);
      }
      public final void setAnnotations(org.capnproto.StructList.Reader<org.capnproto.Schema.Annotation.Reader> value) {
        _setPointerField(org.capnproto.Schema.Annotation.listFactory, 2, value);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Annotation.Builder> initAnnotations(int size) {
        return _initPointerField(org.capnproto.Schema.Annotation.listFactory, 2, size);
      }
      public final boolean isFile() {
        return which() == Node.Which.FILE;
      }
      public final org.capnproto.Void getFile() {
        assert which() == Node.Which.FILE:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setFile(org.capnproto.Void value) {
        _setShortField(6, (short)Node.Which.FILE.ordinal());
      }

      public final boolean isStruct() {
        return which() == Node.Which.STRUCT;
      }
      public final Struct.Builder getStruct() {
        return new Node.Struct.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final Struct.Builder initStruct() {
        _setShortField(6, (short)Node.Which.STRUCT.ordinal());
        _setShortField(7,(short)0);
        _setShortField(12,(short)0);
        _setShortField(13,(short)0);
        _setBooleanField(224,false);
        _setShortField(15,(short)0);
        _setIntField(8,0);
        _clearPointerField(3);
  return new Node.Struct.Builder(segment, data, pointers, dataSize, pointerCount);
      }

      public final boolean isEnum() {
        return which() == Node.Which.ENUM;
      }
      public final Enum.Builder getEnum() {
        return new Node.Enum.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final Enum.Builder initEnum() {
        _setShortField(6, (short)Node.Which.ENUM.ordinal());
        _clearPointerField(3);
  return new Node.Enum.Builder(segment, data, pointers, dataSize, pointerCount);
      }

      public final boolean isInterface() {
        return which() == Node.Which.INTERFACE;
      }
      public final Interface.Builder getInterface() {
        return new Node.Interface.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final Interface.Builder initInterface() {
        _setShortField(6, (short)Node.Which.INTERFACE.ordinal());
        _clearPointerField(3);
        _clearPointerField(4);
  return new Node.Interface.Builder(segment, data, pointers, dataSize, pointerCount);
      }

      public final boolean isConst() {
        return which() == Node.Which.CONST;
      }
      public final Const.Builder getConst() {
        return new Node.Const.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final Const.Builder initConst() {
        _setShortField(6, (short)Node.Which.CONST.ordinal());
        _clearPointerField(3);
        _clearPointerField(4);
  return new Node.Const.Builder(segment, data, pointers, dataSize, pointerCount);
      }

      public final boolean isAnnotation() {
        return which() == Node.Which.ANNOTATION;
      }
      public final Annotation.Builder getAnnotation() {
        return new Node.Annotation.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final Annotation.Builder initAnnotation() {
        _setShortField(6, (short)Node.Which.ANNOTATION.ordinal());
        _setBooleanField(112,false);
        _setBooleanField(113,false);
        _setBooleanField(114,false);
        _setBooleanField(115,false);
        _setBooleanField(116,false);
        _setBooleanField(117,false);
        _setBooleanField(118,false);
        _setBooleanField(119,false);
        _setBooleanField(120,false);
        _setBooleanField(121,false);
        _setBooleanField(122,false);
        _setBooleanField(123,false);
        _clearPointerField(3);
  return new Node.Annotation.Builder(segment, data, pointers, dataSize, pointerCount);
      }

      public final boolean hasParameters() {
        return !_pointerFieldIsNull(5);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Node.Parameter.Builder> getParameters() {
        return _getPointerField(org.capnproto.Schema.Node.Parameter.listFactory, 5, null, 0);
      }
      public final void setParameters(org.capnproto.StructList.Reader<org.capnproto.Schema.Node.Parameter.Reader> value) {
        _setPointerField(org.capnproto.Schema.Node.Parameter.listFactory, 5, value);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Node.Parameter.Builder> initParameters(int size) {
        return _initPointerField(org.capnproto.Schema.Node.Parameter.listFactory, 5, size);
      }
      public final boolean getIsGeneric() {
        return _getBooleanField(288);
      }
      public final void setIsGeneric(boolean value) {
        _setBooleanField(288, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(6)) {
          case 0 : return Which.FILE;
          case 1 : return Which.STRUCT;
          case 2 : return Which.ENUM;
          case 3 : return Which.INTERFACE;
          case 4 : return Which.CONST;
          case 5 : return Which.ANNOTATION;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final long getId() {
        return _getLongField(0);
      }

      public boolean hasDisplayName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getDisplayName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public final int getDisplayNamePrefixLength() {
        return _getIntField(2);
      }

      public final long getScopeId() {
        return _getLongField(2);
      }

      public final boolean hasNestedNodes() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Reader<org.capnproto.Schema.Node.NestedNode.Reader> getNestedNodes() {
        return _getPointerField(org.capnproto.Schema.Node.NestedNode.listFactory, 1, null, 0);
      }

      public final boolean hasAnnotations() {
        return !_pointerFieldIsNull(2);
      }
      public final org.capnproto.StructList.Reader<org.capnproto.Schema.Annotation.Reader> getAnnotations() {
        return _getPointerField(org.capnproto.Schema.Annotation.listFactory, 2, null, 0);
      }

      public final boolean isFile() {
        return which() == Node.Which.FILE;
      }
      public final org.capnproto.Void getFile() {
        assert which() == Node.Which.FILE:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isStruct() {
        return which() == Node.Which.STRUCT;
      }
      public Struct.Reader getStruct() {
        return new Node.Struct.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final boolean isEnum() {
        return which() == Node.Which.ENUM;
      }
      public Enum.Reader getEnum() {
        return new Node.Enum.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final boolean isInterface() {
        return which() == Node.Which.INTERFACE;
      }
      public Interface.Reader getInterface() {
        return new Node.Interface.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final boolean isConst() {
        return which() == Node.Which.CONST;
      }
      public Const.Reader getConst() {
        return new Node.Const.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final boolean isAnnotation() {
        return which() == Node.Which.ANNOTATION;
      }
      public Annotation.Reader getAnnotation() {
        return new Node.Annotation.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final boolean hasParameters() {
        return !_pointerFieldIsNull(5);
      }
      public final org.capnproto.StructList.Reader<org.capnproto.Schema.Node.Parameter.Reader> getParameters() {
        return _getPointerField(org.capnproto.Schema.Node.Parameter.listFactory, 5, null, 0);
      }

      public final boolean getIsGeneric() {
        return _getBooleanField(288);
      }

    }

    public enum Which {
      FILE,
      STRUCT,
      ENUM,
      INTERFACE,
      CONST,
      ANNOTATION,
      _NOT_IN_SCHEMA,
    }
    public static class Parameter {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Node.Parameter.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasName() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getName() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setName(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setName(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initName(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasName() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getName() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

      }

      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class NestedNode {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Node.NestedNode.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasName() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getName() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setName(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setName(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initName(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
        public final long getId() {
          return _getLongField(0);
        }
        public final void setId(long value) {
          _setLongField(0, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasName() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getName() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

        public final long getId() {
          return _getLongField(0);
        }

      }

      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class SourceInfo {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Node.SourceInfo.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final long getId() {
          return _getLongField(0);
        }
        public final void setId(long value) {
          _setLongField(0, value);
        }

        public final boolean hasDocComment() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getDocComment() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setDocComment(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setDocComment(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initDocComment(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
        public final boolean hasMembers() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Builder<org.capnproto.Schema.Node.SourceInfo.Member.Builder> getMembers() {
          return _getPointerField(org.capnproto.Schema.Node.SourceInfo.Member.listFactory, 1, null, 0);
        }
        public final void setMembers(org.capnproto.StructList.Reader<org.capnproto.Schema.Node.SourceInfo.Member.Reader> value) {
          _setPointerField(org.capnproto.Schema.Node.SourceInfo.Member.listFactory, 1, value);
        }
        public final org.capnproto.StructList.Builder<org.capnproto.Schema.Node.SourceInfo.Member.Builder> initMembers(int size) {
          return _initPointerField(org.capnproto.Schema.Node.SourceInfo.Member.listFactory, 1, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final long getId() {
          return _getLongField(0);
        }

        public boolean hasDocComment() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getDocComment() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

        public final boolean hasMembers() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Reader<org.capnproto.Schema.Node.SourceInfo.Member.Reader> getMembers() {
          return _getPointerField(org.capnproto.Schema.Node.SourceInfo.Member.listFactory, 1, null, 0);
        }

      }

      public static class Member {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
        public static final class Factory
            extends org.capnproto.StructFactory<Builder, Reader>
            implements org.capnproto.PipelineFactory<Pipeline> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Node.SourceInfo.Member.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
          public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
            return new Pipeline(promise);
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean hasDocComment() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getDocComment() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setDocComment(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setDocComment(String value) {
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initDocComment(int size) {
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public boolean hasDocComment() {
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getDocComment() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

        }

        public static class Pipeline extends org.capnproto.Pipeline<Reader> {
          public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
            super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
          }
        }
      }

      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class Struct {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)5,(short)6);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Node.Struct.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final short getDataWordCount() {
          return _getShortField(7);
        }
        public final void setDataWordCount(short value) {
          _setShortField(7, value);
        }

        public final short getPointerCount() {
          return _getShortField(12);
        }
        public final void setPointerCount(short value) {
          _setShortField(12, value);
        }

        public final org.capnproto.Schema.ElementSize getPreferredListEncoding() {
          switch(_getShortField(13)) {
            case 0 : return org.capnproto.Schema.ElementSize.EMPTY;
            case 1 : return org.capnproto.Schema.ElementSize.BIT;
            case 2 : return org.capnproto.Schema.ElementSize.BYTE;
            case 3 : return org.capnproto.Schema.ElementSize.TWO_BYTES;
            case 4 : return org.capnproto.Schema.ElementSize.FOUR_BYTES;
            case 5 : return org.capnproto.Schema.ElementSize.EIGHT_BYTES;
            case 6 : return org.capnproto.Schema.ElementSize.POINTER;
            case 7 : return org.capnproto.Schema.ElementSize.INLINE_COMPOSITE;
            default: return org.capnproto.Schema.ElementSize._NOT_IN_SCHEMA;
          }
        }
        public final void setPreferredListEncoding(org.capnproto.Schema.ElementSize value) {
          _setShortField(13, (short)value.ordinal());
        }

        public final boolean getIsGroup() {
          return _getBooleanField(224);
        }
        public final void setIsGroup(boolean value) {
          _setBooleanField(224, value);
        }

        public final short getDiscriminantCount() {
          return _getShortField(15);
        }
        public final void setDiscriminantCount(short value) {
          _setShortField(15, value);
        }

        public final int getDiscriminantOffset() {
          return _getIntField(8);
        }
        public final void setDiscriminantOffset(int value) {
          _setIntField(8, value);
        }

        public final boolean hasFields() {
          return !_pointerFieldIsNull(3);
        }
        public final org.capnproto.StructList.Builder<org.capnproto.Schema.Field.Builder> getFields() {
          return _getPointerField(org.capnproto.Schema.Field.listFactory, 3, null, 0);
        }
        public final void setFields(org.capnproto.StructList.Reader<org.capnproto.Schema.Field.Reader> value) {
          _setPointerField(org.capnproto.Schema.Field.listFactory, 3, value);
        }
        public final org.capnproto.StructList.Builder<org.capnproto.Schema.Field.Builder> initFields(int size) {
          return _initPointerField(org.capnproto.Schema.Field.listFactory, 3, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final short getDataWordCount() {
          return _getShortField(7);
        }

        public final short getPointerCount() {
          return _getShortField(12);
        }

        public final org.capnproto.Schema.ElementSize getPreferredListEncoding() {
          switch(_getShortField(13)) {
            case 0 : return org.capnproto.Schema.ElementSize.EMPTY;
            case 1 : return org.capnproto.Schema.ElementSize.BIT;
            case 2 : return org.capnproto.Schema.ElementSize.BYTE;
            case 3 : return org.capnproto.Schema.ElementSize.TWO_BYTES;
            case 4 : return org.capnproto.Schema.ElementSize.FOUR_BYTES;
            case 5 : return org.capnproto.Schema.ElementSize.EIGHT_BYTES;
            case 6 : return org.capnproto.Schema.ElementSize.POINTER;
            case 7 : return org.capnproto.Schema.ElementSize.INLINE_COMPOSITE;
            default: return org.capnproto.Schema.ElementSize._NOT_IN_SCHEMA;
          }
        }

        public final boolean getIsGroup() {
          return _getBooleanField(224);
        }

        public final short getDiscriminantCount() {
          return _getShortField(15);
        }

        public final int getDiscriminantOffset() {
          return _getIntField(8);
        }

        public final boolean hasFields() {
          return !_pointerFieldIsNull(3);
        }
        public final org.capnproto.StructList.Reader<org.capnproto.Schema.Field.Reader> getFields() {
          return _getPointerField(org.capnproto.Schema.Field.listFactory, 3, null, 0);
        }

      }

      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class Enum {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)5,(short)6);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Node.Enum.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasEnumerants() {
          return !_pointerFieldIsNull(3);
        }
        public final org.capnproto.StructList.Builder<org.capnproto.Schema.Enumerant.Builder> getEnumerants() {
          return _getPointerField(org.capnproto.Schema.Enumerant.listFactory, 3, null, 0);
        }
        public final void setEnumerants(org.capnproto.StructList.Reader<org.capnproto.Schema.Enumerant.Reader> value) {
          _setPointerField(org.capnproto.Schema.Enumerant.listFactory, 3, value);
        }
        public final org.capnproto.StructList.Builder<org.capnproto.Schema.Enumerant.Builder> initEnumerants(int size) {
          return _initPointerField(org.capnproto.Schema.Enumerant.listFactory, 3, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean hasEnumerants() {
          return !_pointerFieldIsNull(3);
        }
        public final org.capnproto.StructList.Reader<org.capnproto.Schema.Enumerant.Reader> getEnumerants() {
          return _getPointerField(org.capnproto.Schema.Enumerant.listFactory, 3, null, 0);
        }

      }

      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class Interface {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)5,(short)6);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Node.Interface.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasMethods() {
          return !_pointerFieldIsNull(3);
        }
        public final org.capnproto.StructList.Builder<org.capnproto.Schema.Method.Builder> getMethods() {
          return _getPointerField(org.capnproto.Schema.Method.listFactory, 3, null, 0);
        }
        public final void setMethods(org.capnproto.StructList.Reader<org.capnproto.Schema.Method.Reader> value) {
          _setPointerField(org.capnproto.Schema.Method.listFactory, 3, value);
        }
        public final org.capnproto.StructList.Builder<org.capnproto.Schema.Method.Builder> initMethods(int size) {
          return _initPointerField(org.capnproto.Schema.Method.listFactory, 3, size);
        }
        public final boolean hasSuperclasses() {
          return !_pointerFieldIsNull(4);
        }
        public final org.capnproto.StructList.Builder<org.capnproto.Schema.Superclass.Builder> getSuperclasses() {
          return _getPointerField(org.capnproto.Schema.Superclass.listFactory, 4, null, 0);
        }
        public final void setSuperclasses(org.capnproto.StructList.Reader<org.capnproto.Schema.Superclass.Reader> value) {
          _setPointerField(org.capnproto.Schema.Superclass.listFactory, 4, value);
        }
        public final org.capnproto.StructList.Builder<org.capnproto.Schema.Superclass.Builder> initSuperclasses(int size) {
          return _initPointerField(org.capnproto.Schema.Superclass.listFactory, 4, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean hasMethods() {
          return !_pointerFieldIsNull(3);
        }
        public final org.capnproto.StructList.Reader<org.capnproto.Schema.Method.Reader> getMethods() {
          return _getPointerField(org.capnproto.Schema.Method.listFactory, 3, null, 0);
        }

        public final boolean hasSuperclasses() {
          return !_pointerFieldIsNull(4);
        }
        public final org.capnproto.StructList.Reader<org.capnproto.Schema.Superclass.Reader> getSuperclasses() {
          return _getPointerField(org.capnproto.Schema.Superclass.listFactory, 4, null, 0);
        }

      }

      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class Const {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)5,(short)6);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Node.Const.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final org.capnproto.Schema.Type.Builder getType() {
          return _getPointerField(org.capnproto.Schema.Type.factory, 3, null, 0);
        }
        public final void setType(org.capnproto.Schema.Type.Reader value) {
          _setPointerField(org.capnproto.Schema.Type.factory,3, value);
        }
        public final org.capnproto.Schema.Type.Builder initType() {
          return _initPointerField(org.capnproto.Schema.Type.factory,3, 0);
        }
        public final org.capnproto.Schema.Value.Builder getValue() {
          return _getPointerField(org.capnproto.Schema.Value.factory, 4, null, 0);
        }
        public final void setValue(org.capnproto.Schema.Value.Reader value) {
          _setPointerField(org.capnproto.Schema.Value.factory,4, value);
        }
        public final org.capnproto.Schema.Value.Builder initValue() {
          return _initPointerField(org.capnproto.Schema.Value.factory,4, 0);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasType() {
          return !_pointerFieldIsNull(3);
        }
        public org.capnproto.Schema.Type.Reader getType() {
          return _getPointerField(org.capnproto.Schema.Type.factory,3,null, 0);
        }

        public boolean hasValue() {
          return !_pointerFieldIsNull(4);
        }
        public org.capnproto.Schema.Value.Reader getValue() {
          return _getPointerField(org.capnproto.Schema.Value.factory,4,null, 0);
        }

      }

      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class Annotation {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)5,(short)6);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Node.Annotation.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final org.capnproto.Schema.Type.Builder getType() {
          return _getPointerField(org.capnproto.Schema.Type.factory, 3, null, 0);
        }
        public final void setType(org.capnproto.Schema.Type.Reader value) {
          _setPointerField(org.capnproto.Schema.Type.factory,3, value);
        }
        public final org.capnproto.Schema.Type.Builder initType() {
          return _initPointerField(org.capnproto.Schema.Type.factory,3, 0);
        }
        public final boolean getTargetsFile() {
          return _getBooleanField(112);
        }
        public final void setTargetsFile(boolean value) {
          _setBooleanField(112, value);
        }

        public final boolean getTargetsConst() {
          return _getBooleanField(113);
        }
        public final void setTargetsConst(boolean value) {
          _setBooleanField(113, value);
        }

        public final boolean getTargetsEnum() {
          return _getBooleanField(114);
        }
        public final void setTargetsEnum(boolean value) {
          _setBooleanField(114, value);
        }

        public final boolean getTargetsEnumerant() {
          return _getBooleanField(115);
        }
        public final void setTargetsEnumerant(boolean value) {
          _setBooleanField(115, value);
        }

        public final boolean getTargetsStruct() {
          return _getBooleanField(116);
        }
        public final void setTargetsStruct(boolean value) {
          _setBooleanField(116, value);
        }

        public final boolean getTargetsField() {
          return _getBooleanField(117);
        }
        public final void setTargetsField(boolean value) {
          _setBooleanField(117, value);
        }

        public final boolean getTargetsUnion() {
          return _getBooleanField(118);
        }
        public final void setTargetsUnion(boolean value) {
          _setBooleanField(118, value);
        }

        public final boolean getTargetsGroup() {
          return _getBooleanField(119);
        }
        public final void setTargetsGroup(boolean value) {
          _setBooleanField(119, value);
        }

        public final boolean getTargetsInterface() {
          return _getBooleanField(120);
        }
        public final void setTargetsInterface(boolean value) {
          _setBooleanField(120, value);
        }

        public final boolean getTargetsMethod() {
          return _getBooleanField(121);
        }
        public final void setTargetsMethod(boolean value) {
          _setBooleanField(121, value);
        }

        public final boolean getTargetsParam() {
          return _getBooleanField(122);
        }
        public final void setTargetsParam(boolean value) {
          _setBooleanField(122, value);
        }

        public final boolean getTargetsAnnotation() {
          return _getBooleanField(123);
        }
        public final void setTargetsAnnotation(boolean value) {
          _setBooleanField(123, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasType() {
          return !_pointerFieldIsNull(3);
        }
        public org.capnproto.Schema.Type.Reader getType() {
          return _getPointerField(org.capnproto.Schema.Type.factory,3,null, 0);
        }

        public final boolean getTargetsFile() {
          return _getBooleanField(112);
        }

        public final boolean getTargetsConst() {
          return _getBooleanField(113);
        }

        public final boolean getTargetsEnum() {
          return _getBooleanField(114);
        }

        public final boolean getTargetsEnumerant() {
          return _getBooleanField(115);
        }

        public final boolean getTargetsStruct() {
          return _getBooleanField(116);
        }

        public final boolean getTargetsField() {
          return _getBooleanField(117);
        }

        public final boolean getTargetsUnion() {
          return _getBooleanField(118);
        }

        public final boolean getTargetsGroup() {
          return _getBooleanField(119);
        }

        public final boolean getTargetsInterface() {
          return _getBooleanField(120);
        }

        public final boolean getTargetsMethod() {
          return _getBooleanField(121);
        }

        public final boolean getTargetsParam() {
          return _getBooleanField(122);
        }

        public final boolean getTargetsAnnotation() {
          return _getBooleanField(123);
        }

      }

      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class Pipeline extends org.capnproto.Pipeline<Reader> {
      public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
        super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
      }
    }
  }

  public static class Field {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)4);
    public static final class Factory
        extends org.capnproto.StructFactory<Builder, Reader>
        implements org.capnproto.PipelineFactory<Pipeline> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Field.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
      public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
        return new Pipeline(promise);
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(4)) {
          case 0 : return Which.SLOT;
          case 1 : return Which.GROUP;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final short getCodeOrder() {
        return _getShortField(0);
      }
      public final void setCodeOrder(short value) {
        _setShortField(0, value);
      }

      public final boolean hasAnnotations() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Annotation.Builder> getAnnotations() {
        return _getPointerField(org.capnproto.Schema.Annotation.listFactory, 1, null, 0);
      }
      public final void setAnnotations(org.capnproto.StructList.Reader<org.capnproto.Schema.Annotation.Reader> value) {
        _setPointerField(org.capnproto.Schema.Annotation.listFactory, 1, value);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Annotation.Builder> initAnnotations(int size) {
        return _initPointerField(org.capnproto.Schema.Annotation.listFactory, 1, size);
      }
      public final short getDiscriminantValue() {
        return _getShortField(1, (short)-1);
      }
      public final void setDiscriminantValue(short value) {
        _setShortField(1, value, (short)-1);
      }

      public final boolean isSlot() {
        return which() == Field.Which.SLOT;
      }
      public final Slot.Builder getSlot() {
        return new Field.Slot.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final Slot.Builder initSlot() {
        _setShortField(4, (short)Field.Which.SLOT.ordinal());
        _setIntField(1,0);
        _setBooleanField(128,false);
        _clearPointerField(2);
        _clearPointerField(3);
  return new Field.Slot.Builder(segment, data, pointers, dataSize, pointerCount);
      }

      public final boolean isGroup() {
        return which() == Field.Which.GROUP;
      }
      public final Group.Builder getGroup() {
        return new Field.Group.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final Group.Builder initGroup() {
        _setShortField(4, (short)Field.Which.GROUP.ordinal());
        _setLongField(2,0L);
  return new Field.Group.Builder(segment, data, pointers, dataSize, pointerCount);
      }

      public final Ordinal.Builder getOrdinal() {
        return new Field.Ordinal.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final Ordinal.Builder initOrdinal() {
        _setShortField(5,(short)0);
        _setShortField(6,(short)0);
  return new Field.Ordinal.Builder(segment, data, pointers, dataSize, pointerCount);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(4)) {
          case 0 : return Which.SLOT;
          case 1 : return Which.GROUP;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public boolean hasName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public final short getCodeOrder() {
        return _getShortField(0);
      }

      public final boolean hasAnnotations() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Reader<org.capnproto.Schema.Annotation.Reader> getAnnotations() {
        return _getPointerField(org.capnproto.Schema.Annotation.listFactory, 1, null, 0);
      }

      public final short getDiscriminantValue() {
        return _getShortField(1, (short)-1);
      }

      public final boolean isSlot() {
        return which() == Field.Which.SLOT;
      }
      public Slot.Reader getSlot() {
        return new Field.Slot.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final boolean isGroup() {
        return which() == Field.Which.GROUP;
      }
      public Group.Reader getGroup() {
        return new Field.Group.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Ordinal.Reader getOrdinal() {
        return new Field.Ordinal.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

    }

    public enum Which {
      SLOT,
      GROUP,
      _NOT_IN_SCHEMA,
    }
    public static final short NO_DISCRIMINANT = -1;
    public static class Slot {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)4);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Field.Slot.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getOffset() {
          return _getIntField(1);
        }
        public final void setOffset(int value) {
          _setIntField(1, value);
        }

        public final org.capnproto.Schema.Type.Builder getType() {
          return _getPointerField(org.capnproto.Schema.Type.factory, 2, null, 0);
        }
        public final void setType(org.capnproto.Schema.Type.Reader value) {
          _setPointerField(org.capnproto.Schema.Type.factory,2, value);
        }
        public final org.capnproto.Schema.Type.Builder initType() {
          return _initPointerField(org.capnproto.Schema.Type.factory,2, 0);
        }
        public final org.capnproto.Schema.Value.Builder getDefaultValue() {
          return _getPointerField(org.capnproto.Schema.Value.factory, 3, null, 0);
        }
        public final void setDefaultValue(org.capnproto.Schema.Value.Reader value) {
          _setPointerField(org.capnproto.Schema.Value.factory,3, value);
        }
        public final org.capnproto.Schema.Value.Builder initDefaultValue() {
          return _initPointerField(org.capnproto.Schema.Value.factory,3, 0);
        }
        public final boolean getHadExplicitDefault() {
          return _getBooleanField(128);
        }
        public final void setHadExplicitDefault(boolean value) {
          _setBooleanField(128, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getOffset() {
          return _getIntField(1);
        }

        public boolean hasType() {
          return !_pointerFieldIsNull(2);
        }
        public org.capnproto.Schema.Type.Reader getType() {
          return _getPointerField(org.capnproto.Schema.Type.factory,2,null, 0);
        }

        public boolean hasDefaultValue() {
          return !_pointerFieldIsNull(3);
        }
        public org.capnproto.Schema.Value.Reader getDefaultValue() {
          return _getPointerField(org.capnproto.Schema.Value.factory,3,null, 0);
        }

        public final boolean getHadExplicitDefault() {
          return _getBooleanField(128);
        }

      }

      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class Group {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)4);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Field.Group.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final long getTypeId() {
          return _getLongField(2);
        }
        public final void setTypeId(long value) {
          _setLongField(2, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final long getTypeId() {
          return _getLongField(2);
        }

      }

      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class Ordinal {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)4);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Field.Ordinal.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(5)) {
            case 0 : return Which.IMPLICIT;
            case 1 : return Which.EXPLICIT;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean isImplicit() {
          return which() == Field.Ordinal.Which.IMPLICIT;
        }
        public final org.capnproto.Void getImplicit() {
          assert which() == Field.Ordinal.Which.IMPLICIT:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }
        public final void setImplicit(org.capnproto.Void value) {
          _setShortField(5, (short)Field.Ordinal.Which.IMPLICIT.ordinal());
        }

        public final boolean isExplicit() {
          return which() == Field.Ordinal.Which.EXPLICIT;
        }
        public final short getExplicit() {
          assert which() == Field.Ordinal.Which.EXPLICIT:
                      "Must check which() before get()ing a union member.";
          return _getShortField(6);
        }
        public final void setExplicit(short value) {
          _setShortField(5, (short)Field.Ordinal.Which.EXPLICIT.ordinal());
          _setShortField(6, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(5)) {
            case 0 : return Which.IMPLICIT;
            case 1 : return Which.EXPLICIT;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final boolean isImplicit() {
          return which() == Field.Ordinal.Which.IMPLICIT;
        }
        public final org.capnproto.Void getImplicit() {
          assert which() == Field.Ordinal.Which.IMPLICIT:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }

        public final boolean isExplicit() {
          return which() == Field.Ordinal.Which.EXPLICIT;
        }
        public final short getExplicit() {
          assert which() == Field.Ordinal.Which.EXPLICIT:
                      "Must check which() before get()ing a union member.";
          return _getShortField(6);
        }

      }

      public enum Which {
        IMPLICIT,
        EXPLICIT,
        _NOT_IN_SCHEMA,
      }
      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class Pipeline extends org.capnproto.Pipeline<Reader> {
      public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
        super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
      }
    }
  }

  public static class Enumerant {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
    public static final class Factory
        extends org.capnproto.StructFactory<Builder, Reader>
        implements org.capnproto.PipelineFactory<Pipeline> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Enumerant.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
      public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
        return new Pipeline(promise);
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final short getCodeOrder() {
        return _getShortField(0);
      }
      public final void setCodeOrder(short value) {
        _setShortField(0, value);
      }

      public final boolean hasAnnotations() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Annotation.Builder> getAnnotations() {
        return _getPointerField(org.capnproto.Schema.Annotation.listFactory, 1, null, 0);
      }
      public final void setAnnotations(org.capnproto.StructList.Reader<org.capnproto.Schema.Annotation.Reader> value) {
        _setPointerField(org.capnproto.Schema.Annotation.listFactory, 1, value);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Annotation.Builder> initAnnotations(int size) {
        return _initPointerField(org.capnproto.Schema.Annotation.listFactory, 1, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public final short getCodeOrder() {
        return _getShortField(0);
      }

      public final boolean hasAnnotations() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Reader<org.capnproto.Schema.Annotation.Reader> getAnnotations() {
        return _getPointerField(org.capnproto.Schema.Annotation.listFactory, 1, null, 0);
      }

    }

    public static class Pipeline extends org.capnproto.Pipeline<Reader> {
      public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
        super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
      }
    }
  }

  public static class Superclass {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory
        extends org.capnproto.StructFactory<Builder, Reader>
        implements org.capnproto.PipelineFactory<Pipeline> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Superclass.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
      public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
        return new Pipeline(promise);
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final long getId() {
        return _getLongField(0);
      }
      public final void setId(long value) {
        _setLongField(0, value);
      }

      public final org.capnproto.Schema.Brand.Builder getBrand() {
        return _getPointerField(org.capnproto.Schema.Brand.factory, 0, null, 0);
      }
      public final void setBrand(org.capnproto.Schema.Brand.Reader value) {
        _setPointerField(org.capnproto.Schema.Brand.factory,0, value);
      }
      public final org.capnproto.Schema.Brand.Builder initBrand() {
        return _initPointerField(org.capnproto.Schema.Brand.factory,0, 0);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final long getId() {
        return _getLongField(0);
      }

      public boolean hasBrand() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Schema.Brand.Reader getBrand() {
        return _getPointerField(org.capnproto.Schema.Brand.factory,0,null, 0);
      }

    }

    public static class Pipeline extends org.capnproto.Pipeline<Reader> {
      public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
        super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
      }
    }
  }

  public static class Method {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)5);
    public static final class Factory
        extends org.capnproto.StructFactory<Builder, Reader>
        implements org.capnproto.PipelineFactory<Pipeline> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Method.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
      public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
        return new Pipeline(promise);
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final short getCodeOrder() {
        return _getShortField(0);
      }
      public final void setCodeOrder(short value) {
        _setShortField(0, value);
      }

      public final long getParamStructType() {
        return _getLongField(1);
      }
      public final void setParamStructType(long value) {
        _setLongField(1, value);
      }

      public final long getResultStructType() {
        return _getLongField(2);
      }
      public final void setResultStructType(long value) {
        _setLongField(2, value);
      }

      public final boolean hasAnnotations() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Annotation.Builder> getAnnotations() {
        return _getPointerField(org.capnproto.Schema.Annotation.listFactory, 1, null, 0);
      }
      public final void setAnnotations(org.capnproto.StructList.Reader<org.capnproto.Schema.Annotation.Reader> value) {
        _setPointerField(org.capnproto.Schema.Annotation.listFactory, 1, value);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Annotation.Builder> initAnnotations(int size) {
        return _initPointerField(org.capnproto.Schema.Annotation.listFactory, 1, size);
      }
      public final org.capnproto.Schema.Brand.Builder getParamBrand() {
        return _getPointerField(org.capnproto.Schema.Brand.factory, 2, null, 0);
      }
      public final void setParamBrand(org.capnproto.Schema.Brand.Reader value) {
        _setPointerField(org.capnproto.Schema.Brand.factory,2, value);
      }
      public final org.capnproto.Schema.Brand.Builder initParamBrand() {
        return _initPointerField(org.capnproto.Schema.Brand.factory,2, 0);
      }
      public final org.capnproto.Schema.Brand.Builder getResultBrand() {
        return _getPointerField(org.capnproto.Schema.Brand.factory, 3, null, 0);
      }
      public final void setResultBrand(org.capnproto.Schema.Brand.Reader value) {
        _setPointerField(org.capnproto.Schema.Brand.factory,3, value);
      }
      public final org.capnproto.Schema.Brand.Builder initResultBrand() {
        return _initPointerField(org.capnproto.Schema.Brand.factory,3, 0);
      }
      public final boolean hasImplicitParameters() {
        return !_pointerFieldIsNull(4);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Node.Parameter.Builder> getImplicitParameters() {
        return _getPointerField(org.capnproto.Schema.Node.Parameter.listFactory, 4, null, 0);
      }
      public final void setImplicitParameters(org.capnproto.StructList.Reader<org.capnproto.Schema.Node.Parameter.Reader> value) {
        _setPointerField(org.capnproto.Schema.Node.Parameter.listFactory, 4, value);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Node.Parameter.Builder> initImplicitParameters(int size) {
        return _initPointerField(org.capnproto.Schema.Node.Parameter.listFactory, 4, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public final short getCodeOrder() {
        return _getShortField(0);
      }

      public final long getParamStructType() {
        return _getLongField(1);
      }

      public final long getResultStructType() {
        return _getLongField(2);
      }

      public final boolean hasAnnotations() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Reader<org.capnproto.Schema.Annotation.Reader> getAnnotations() {
        return _getPointerField(org.capnproto.Schema.Annotation.listFactory, 1, null, 0);
      }

      public boolean hasParamBrand() {
        return !_pointerFieldIsNull(2);
      }
      public org.capnproto.Schema.Brand.Reader getParamBrand() {
        return _getPointerField(org.capnproto.Schema.Brand.factory,2,null, 0);
      }

      public boolean hasResultBrand() {
        return !_pointerFieldIsNull(3);
      }
      public org.capnproto.Schema.Brand.Reader getResultBrand() {
        return _getPointerField(org.capnproto.Schema.Brand.factory,3,null, 0);
      }

      public final boolean hasImplicitParameters() {
        return !_pointerFieldIsNull(4);
      }
      public final org.capnproto.StructList.Reader<org.capnproto.Schema.Node.Parameter.Reader> getImplicitParameters() {
        return _getPointerField(org.capnproto.Schema.Node.Parameter.listFactory, 4, null, 0);
      }

    }

    public static class Pipeline extends org.capnproto.Pipeline<Reader> {
      public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
        super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
      }
    }
  }

  public static class Type {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)1);
    public static final class Factory
        extends org.capnproto.StructFactory<Builder, Reader>
        implements org.capnproto.PipelineFactory<Pipeline> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Type.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
      public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
        return new Pipeline(promise);
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(0)) {
          case 0 : return Which.VOID;
          case 1 : return Which.BOOL;
          case 2 : return Which.INT8;
          case 3 : return Which.INT16;
          case 4 : return Which.INT32;
          case 5 : return Which.INT64;
          case 6 : return Which.UINT8;
          case 7 : return Which.UINT16;
          case 8 : return Which.UINT32;
          case 9 : return Which.UINT64;
          case 10 : return Which.FLOAT32;
          case 11 : return Which.FLOAT64;
          case 12 : return Which.TEXT;
          case 13 : return Which.DATA;
          case 14 : return Which.LIST;
          case 15 : return Which.ENUM;
          case 16 : return Which.STRUCT;
          case 17 : return Which.INTERFACE;
          case 18 : return Which.ANY_POINTER;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean isVoid() {
        return which() == Type.Which.VOID;
      }
      public final org.capnproto.Void getVoid() {
        assert which() == Type.Which.VOID:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setVoid(org.capnproto.Void value) {
        _setShortField(0, (short)Type.Which.VOID.ordinal());
      }

      public final boolean isBool() {
        return which() == Type.Which.BOOL;
      }
      public final org.capnproto.Void getBool() {
        assert which() == Type.Which.BOOL:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setBool(org.capnproto.Void value) {
        _setShortField(0, (short)Type.Which.BOOL.ordinal());
      }

      public final boolean isInt8() {
        return which() == Type.Which.INT8;
      }
      public final org.capnproto.Void getInt8() {
        assert which() == Type.Which.INT8:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setInt8(org.capnproto.Void value) {
        _setShortField(0, (short)Type.Which.INT8.ordinal());
      }

      public final boolean isInt16() {
        return which() == Type.Which.INT16;
      }
      public final org.capnproto.Void getInt16() {
        assert which() == Type.Which.INT16:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setInt16(org.capnproto.Void value) {
        _setShortField(0, (short)Type.Which.INT16.ordinal());
      }

      public final boolean isInt32() {
        return which() == Type.Which.INT32;
      }
      public final org.capnproto.Void getInt32() {
        assert which() == Type.Which.INT32:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setInt32(org.capnproto.Void value) {
        _setShortField(0, (short)Type.Which.INT32.ordinal());
      }

      public final boolean isInt64() {
        return which() == Type.Which.INT64;
      }
      public final org.capnproto.Void getInt64() {
        assert which() == Type.Which.INT64:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setInt64(org.capnproto.Void value) {
        _setShortField(0, (short)Type.Which.INT64.ordinal());
      }

      public final boolean isUint8() {
        return which() == Type.Which.UINT8;
      }
      public final org.capnproto.Void getUint8() {
        assert which() == Type.Which.UINT8:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setUint8(org.capnproto.Void value) {
        _setShortField(0, (short)Type.Which.UINT8.ordinal());
      }

      public final boolean isUint16() {
        return which() == Type.Which.UINT16;
      }
      public final org.capnproto.Void getUint16() {
        assert which() == Type.Which.UINT16:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setUint16(org.capnproto.Void value) {
        _setShortField(0, (short)Type.Which.UINT16.ordinal());
      }

      public final boolean isUint32() {
        return which() == Type.Which.UINT32;
      }
      public final org.capnproto.Void getUint32() {
        assert which() == Type.Which.UINT32:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setUint32(org.capnproto.Void value) {
        _setShortField(0, (short)Type.Which.UINT32.ordinal());
      }

      public final boolean isUint64() {
        return which() == Type.Which.UINT64;
      }
      public final org.capnproto.Void getUint64() {
        assert which() == Type.Which.UINT64:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setUint64(org.capnproto.Void value) {
        _setShortField(0, (short)Type.Which.UINT64.ordinal());
      }

      public final boolean isFloat32() {
        return which() == Type.Which.FLOAT32;
      }
      public final org.capnproto.Void getFloat32() {
        assert which() == Type.Which.FLOAT32:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setFloat32(org.capnproto.Void value) {
        _setShortField(0, (short)Type.Which.FLOAT32.ordinal());
      }

      public final boolean isFloat64() {
        return which() == Type.Which.FLOAT64;
      }
      public final org.capnproto.Void getFloat64() {
        assert which() == Type.Which.FLOAT64:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setFloat64(org.capnproto.Void value) {
        _setShortField(0, (short)Type.Which.FLOAT64.ordinal());
      }

      public final boolean isText() {
        return which() == Type.Which.TEXT;
      }
      public final org.capnproto.Void getText() {
        assert which() == Type.Which.TEXT:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setText(org.capnproto.Void value) {
        _setShortField(0, (short)Type.Which.TEXT.ordinal());
      }

      public final boolean isData() {
        return which() == Type.Which.DATA;
      }
      public final org.capnproto.Void getData() {
        assert which() == Type.Which.DATA:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setData(org.capnproto.Void value) {
        _setShortField(0, (short)Type.Which.DATA.ordinal());
      }

      public final boolean isList() {
        return which() == Type.Which.LIST;
      }
      public final List.Builder getList() {
        return new Type.List.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final List.Builder initList() {
        _setShortField(0, (short)Type.Which.LIST.ordinal());
        _clearPointerField(0);
  return new Type.List.Builder(segment, data, pointers, dataSize, pointerCount);
      }

      public final boolean isEnum() {
        return which() == Type.Which.ENUM;
      }
      public final Enum.Builder getEnum() {
        return new Type.Enum.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final Enum.Builder initEnum() {
        _setShortField(0, (short)Type.Which.ENUM.ordinal());
        _setLongField(1,0L);
        _clearPointerField(0);
  return new Type.Enum.Builder(segment, data, pointers, dataSize, pointerCount);
      }

      public final boolean isStruct() {
        return which() == Type.Which.STRUCT;
      }
      public final Struct.Builder getStruct() {
        return new Type.Struct.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final Struct.Builder initStruct() {
        _setShortField(0, (short)Type.Which.STRUCT.ordinal());
        _setLongField(1,0L);
        _clearPointerField(0);
  return new Type.Struct.Builder(segment, data, pointers, dataSize, pointerCount);
      }

      public final boolean isInterface() {
        return which() == Type.Which.INTERFACE;
      }
      public final Interface.Builder getInterface() {
        return new Type.Interface.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final Interface.Builder initInterface() {
        _setShortField(0, (short)Type.Which.INTERFACE.ordinal());
        _setLongField(1,0L);
        _clearPointerField(0);
  return new Type.Interface.Builder(segment, data, pointers, dataSize, pointerCount);
      }

      public final boolean isAnyPointer() {
        return which() == Type.Which.ANY_POINTER;
      }
      public final AnyPointer.Builder getAnyPointer() {
        return new Type.AnyPointer.Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final AnyPointer.Builder initAnyPointer() {
        _setShortField(0, (short)Type.Which.ANY_POINTER.ordinal());
        _setShortField(4,(short)0);
        _setShortField(5,(short)0);
        _setLongField(2,0L);
  return new Type.AnyPointer.Builder(segment, data, pointers, dataSize, pointerCount);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(0)) {
          case 0 : return Which.VOID;
          case 1 : return Which.BOOL;
          case 2 : return Which.INT8;
          case 3 : return Which.INT16;
          case 4 : return Which.INT32;
          case 5 : return Which.INT64;
          case 6 : return Which.UINT8;
          case 7 : return Which.UINT16;
          case 8 : return Which.UINT32;
          case 9 : return Which.UINT64;
          case 10 : return Which.FLOAT32;
          case 11 : return Which.FLOAT64;
          case 12 : return Which.TEXT;
          case 13 : return Which.DATA;
          case 14 : return Which.LIST;
          case 15 : return Which.ENUM;
          case 16 : return Which.STRUCT;
          case 17 : return Which.INTERFACE;
          case 18 : return Which.ANY_POINTER;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final boolean isVoid() {
        return which() == Type.Which.VOID;
      }
      public final org.capnproto.Void getVoid() {
        assert which() == Type.Which.VOID:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isBool() {
        return which() == Type.Which.BOOL;
      }
      public final org.capnproto.Void getBool() {
        assert which() == Type.Which.BOOL:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isInt8() {
        return which() == Type.Which.INT8;
      }
      public final org.capnproto.Void getInt8() {
        assert which() == Type.Which.INT8:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isInt16() {
        return which() == Type.Which.INT16;
      }
      public final org.capnproto.Void getInt16() {
        assert which() == Type.Which.INT16:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isInt32() {
        return which() == Type.Which.INT32;
      }
      public final org.capnproto.Void getInt32() {
        assert which() == Type.Which.INT32:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isInt64() {
        return which() == Type.Which.INT64;
      }
      public final org.capnproto.Void getInt64() {
        assert which() == Type.Which.INT64:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isUint8() {
        return which() == Type.Which.UINT8;
      }
      public final org.capnproto.Void getUint8() {
        assert which() == Type.Which.UINT8:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isUint16() {
        return which() == Type.Which.UINT16;
      }
      public final org.capnproto.Void getUint16() {
        assert which() == Type.Which.UINT16:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isUint32() {
        return which() == Type.Which.UINT32;
      }
      public final org.capnproto.Void getUint32() {
        assert which() == Type.Which.UINT32:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isUint64() {
        return which() == Type.Which.UINT64;
      }
      public final org.capnproto.Void getUint64() {
        assert which() == Type.Which.UINT64:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isFloat32() {
        return which() == Type.Which.FLOAT32;
      }
      public final org.capnproto.Void getFloat32() {
        assert which() == Type.Which.FLOAT32:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isFloat64() {
        return which() == Type.Which.FLOAT64;
      }
      public final org.capnproto.Void getFloat64() {
        assert which() == Type.Which.FLOAT64:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isText() {
        return which() == Type.Which.TEXT;
      }
      public final org.capnproto.Void getText() {
        assert which() == Type.Which.TEXT:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isData() {
        return which() == Type.Which.DATA;
      }
      public final org.capnproto.Void getData() {
        assert which() == Type.Which.DATA:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isList() {
        return which() == Type.Which.LIST;
      }
      public List.Reader getList() {
        return new Type.List.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final boolean isEnum() {
        return which() == Type.Which.ENUM;
      }
      public Enum.Reader getEnum() {
        return new Type.Enum.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final boolean isStruct() {
        return which() == Type.Which.STRUCT;
      }
      public Struct.Reader getStruct() {
        return new Type.Struct.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final boolean isInterface() {
        return which() == Type.Which.INTERFACE;
      }
      public Interface.Reader getInterface() {
        return new Type.Interface.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final boolean isAnyPointer() {
        return which() == Type.Which.ANY_POINTER;
      }
      public AnyPointer.Reader getAnyPointer() {
        return new Type.AnyPointer.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

    }

    public enum Which {
      VOID,
      BOOL,
      INT8,
      INT16,
      INT32,
      INT64,
      UINT8,
      UINT16,
      UINT32,
      UINT64,
      FLOAT32,
      FLOAT64,
      TEXT,
      DATA,
      LIST,
      ENUM,
      STRUCT,
      INTERFACE,
      ANY_POINTER,
      _NOT_IN_SCHEMA,
    }
    public static class List {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)1);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Type.List.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final org.capnproto.Schema.Type.Builder getElementType() {
          return _getPointerField(org.capnproto.Schema.Type.factory, 0, null, 0);
        }
        public final void setElementType(org.capnproto.Schema.Type.Reader value) {
          _setPointerField(org.capnproto.Schema.Type.factory,0, value);
        }
        public final org.capnproto.Schema.Type.Builder initElementType() {
          return _initPointerField(org.capnproto.Schema.Type.factory,0, 0);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public boolean hasElementType() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Schema.Type.Reader getElementType() {
          return _getPointerField(org.capnproto.Schema.Type.factory,0,null, 0);
        }

      }

      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class Enum {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)1);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Type.Enum.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final long getTypeId() {
          return _getLongField(1);
        }
        public final void setTypeId(long value) {
          _setLongField(1, value);
        }

        public final org.capnproto.Schema.Brand.Builder getBrand() {
          return _getPointerField(org.capnproto.Schema.Brand.factory, 0, null, 0);
        }
        public final void setBrand(org.capnproto.Schema.Brand.Reader value) {
          _setPointerField(org.capnproto.Schema.Brand.factory,0, value);
        }
        public final org.capnproto.Schema.Brand.Builder initBrand() {
          return _initPointerField(org.capnproto.Schema.Brand.factory,0, 0);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final long getTypeId() {
          return _getLongField(1);
        }

        public boolean hasBrand() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Schema.Brand.Reader getBrand() {
          return _getPointerField(org.capnproto.Schema.Brand.factory,0,null, 0);
        }

      }

      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class Struct {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)1);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Type.Struct.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final long getTypeId() {
          return _getLongField(1);
        }
        public final void setTypeId(long value) {
          _setLongField(1, value);
        }

        public final org.capnproto.Schema.Brand.Builder getBrand() {
          return _getPointerField(org.capnproto.Schema.Brand.factory, 0, null, 0);
        }
        public final void setBrand(org.capnproto.Schema.Brand.Reader value) {
          _setPointerField(org.capnproto.Schema.Brand.factory,0, value);
        }
        public final org.capnproto.Schema.Brand.Builder initBrand() {
          return _initPointerField(org.capnproto.Schema.Brand.factory,0, 0);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final long getTypeId() {
          return _getLongField(1);
        }

        public boolean hasBrand() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Schema.Brand.Reader getBrand() {
          return _getPointerField(org.capnproto.Schema.Brand.factory,0,null, 0);
        }

      }

      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class Interface {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)1);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Type.Interface.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final long getTypeId() {
          return _getLongField(1);
        }
        public final void setTypeId(long value) {
          _setLongField(1, value);
        }

        public final org.capnproto.Schema.Brand.Builder getBrand() {
          return _getPointerField(org.capnproto.Schema.Brand.factory, 0, null, 0);
        }
        public final void setBrand(org.capnproto.Schema.Brand.Reader value) {
          _setPointerField(org.capnproto.Schema.Brand.factory,0, value);
        }
        public final org.capnproto.Schema.Brand.Builder initBrand() {
          return _initPointerField(org.capnproto.Schema.Brand.factory,0, 0);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final long getTypeId() {
          return _getLongField(1);
        }

        public boolean hasBrand() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Schema.Brand.Reader getBrand() {
          return _getPointerField(org.capnproto.Schema.Brand.factory,0,null, 0);
        }

      }

      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class AnyPointer {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)1);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Type.AnyPointer.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(4)) {
            case 0 : return Which.UNCONSTRAINED;
            case 1 : return Which.PARAMETER;
            case 2 : return Which.IMPLICIT_METHOD_PARAMETER;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean isUnconstrained() {
          return which() == Type.AnyPointer.Which.UNCONSTRAINED;
        }
        public final Unconstrained.Builder getUnconstrained() {
          return new Type.AnyPointer.Unconstrained.Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final Unconstrained.Builder initUnconstrained() {
          _setShortField(4, (short)Type.AnyPointer.Which.UNCONSTRAINED.ordinal());
          _setShortField(5,(short)0);
  return new Type.AnyPointer.Unconstrained.Builder(segment, data, pointers, dataSize, pointerCount);
        }

        public final boolean isParameter() {
          return which() == Type.AnyPointer.Which.PARAMETER;
        }
        public final Parameter.Builder getParameter() {
          return new Type.AnyPointer.Parameter.Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final Parameter.Builder initParameter() {
          _setShortField(4, (short)Type.AnyPointer.Which.PARAMETER.ordinal());
          _setShortField(5,(short)0);
          _setLongField(2,0L);
  return new Type.AnyPointer.Parameter.Builder(segment, data, pointers, dataSize, pointerCount);
        }

        public final boolean isImplicitMethodParameter() {
          return which() == Type.AnyPointer.Which.IMPLICIT_METHOD_PARAMETER;
        }
        public final ImplicitMethodParameter.Builder getImplicitMethodParameter() {
          return new Type.AnyPointer.ImplicitMethodParameter.Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final ImplicitMethodParameter.Builder initImplicitMethodParameter() {
          _setShortField(4, (short)Type.AnyPointer.Which.IMPLICIT_METHOD_PARAMETER.ordinal());
          _setShortField(5,(short)0);
  return new Type.AnyPointer.ImplicitMethodParameter.Builder(segment, data, pointers, dataSize, pointerCount);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(4)) {
            case 0 : return Which.UNCONSTRAINED;
            case 1 : return Which.PARAMETER;
            case 2 : return Which.IMPLICIT_METHOD_PARAMETER;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final boolean isUnconstrained() {
          return which() == Type.AnyPointer.Which.UNCONSTRAINED;
        }
        public Unconstrained.Reader getUnconstrained() {
          return new Type.AnyPointer.Unconstrained.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean isParameter() {
          return which() == Type.AnyPointer.Which.PARAMETER;
        }
        public Parameter.Reader getParameter() {
          return new Type.AnyPointer.Parameter.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean isImplicitMethodParameter() {
          return which() == Type.AnyPointer.Which.IMPLICIT_METHOD_PARAMETER;
        }
        public ImplicitMethodParameter.Reader getImplicitMethodParameter() {
          return new Type.AnyPointer.ImplicitMethodParameter.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

      }

      public enum Which {
        UNCONSTRAINED,
        PARAMETER,
        IMPLICIT_METHOD_PARAMETER,
        _NOT_IN_SCHEMA,
      }
      public static class Unconstrained {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)1);
        public static final class Factory
            extends org.capnproto.StructFactory<Builder, Reader>
            implements org.capnproto.PipelineFactory<Pipeline> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Type.AnyPointer.Unconstrained.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
          public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
            return new Pipeline(promise);
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public Which which() {
            switch(_getShortField(5)) {
              case 0 : return Which.ANY_KIND;
              case 1 : return Which.STRUCT;
              case 2 : return Which.LIST;
              case 3 : return Which.CAPABILITY;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean isAnyKind() {
            return which() == Type.AnyPointer.Unconstrained.Which.ANY_KIND;
          }
          public final org.capnproto.Void getAnyKind() {
            assert which() == Type.AnyPointer.Unconstrained.Which.ANY_KIND:
                        "Must check which() before get()ing a union member.";
            return org.capnproto.Void.VOID;
          }
          public final void setAnyKind(org.capnproto.Void value) {
            _setShortField(5, (short)Type.AnyPointer.Unconstrained.Which.ANY_KIND.ordinal());
          }

          public final boolean isStruct() {
            return which() == Type.AnyPointer.Unconstrained.Which.STRUCT;
          }
          public final org.capnproto.Void getStruct() {
            assert which() == Type.AnyPointer.Unconstrained.Which.STRUCT:
                        "Must check which() before get()ing a union member.";
            return org.capnproto.Void.VOID;
          }
          public final void setStruct(org.capnproto.Void value) {
            _setShortField(5, (short)Type.AnyPointer.Unconstrained.Which.STRUCT.ordinal());
          }

          public final boolean isList() {
            return which() == Type.AnyPointer.Unconstrained.Which.LIST;
          }
          public final org.capnproto.Void getList() {
            assert which() == Type.AnyPointer.Unconstrained.Which.LIST:
                        "Must check which() before get()ing a union member.";
            return org.capnproto.Void.VOID;
          }
          public final void setList(org.capnproto.Void value) {
            _setShortField(5, (short)Type.AnyPointer.Unconstrained.Which.LIST.ordinal());
          }

          public final boolean isCapability() {
            return which() == Type.AnyPointer.Unconstrained.Which.CAPABILITY;
          }
          public final org.capnproto.Void getCapability() {
            assert which() == Type.AnyPointer.Unconstrained.Which.CAPABILITY:
                        "Must check which() before get()ing a union member.";
            return org.capnproto.Void.VOID;
          }
          public final void setCapability(org.capnproto.Void value) {
            _setShortField(5, (short)Type.AnyPointer.Unconstrained.Which.CAPABILITY.ordinal());
          }

        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public Which which() {
            switch(_getShortField(5)) {
              case 0 : return Which.ANY_KIND;
              case 1 : return Which.STRUCT;
              case 2 : return Which.LIST;
              case 3 : return Which.CAPABILITY;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final boolean isAnyKind() {
            return which() == Type.AnyPointer.Unconstrained.Which.ANY_KIND;
          }
          public final org.capnproto.Void getAnyKind() {
            assert which() == Type.AnyPointer.Unconstrained.Which.ANY_KIND:
                        "Must check which() before get()ing a union member.";
            return org.capnproto.Void.VOID;
          }

          public final boolean isStruct() {
            return which() == Type.AnyPointer.Unconstrained.Which.STRUCT;
          }
          public final org.capnproto.Void getStruct() {
            assert which() == Type.AnyPointer.Unconstrained.Which.STRUCT:
                        "Must check which() before get()ing a union member.";
            return org.capnproto.Void.VOID;
          }

          public final boolean isList() {
            return which() == Type.AnyPointer.Unconstrained.Which.LIST;
          }
          public final org.capnproto.Void getList() {
            assert which() == Type.AnyPointer.Unconstrained.Which.LIST:
                        "Must check which() before get()ing a union member.";
            return org.capnproto.Void.VOID;
          }

          public final boolean isCapability() {
            return which() == Type.AnyPointer.Unconstrained.Which.CAPABILITY;
          }
          public final org.capnproto.Void getCapability() {
            assert which() == Type.AnyPointer.Unconstrained.Which.CAPABILITY:
                        "Must check which() before get()ing a union member.";
            return org.capnproto.Void.VOID;
          }

        }

        public enum Which {
          ANY_KIND,
          STRUCT,
          LIST,
          CAPABILITY,
          _NOT_IN_SCHEMA,
        }
        public static class Pipeline extends org.capnproto.Pipeline<Reader> {
          public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
            super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
          }
        }
      }

      public static class Parameter {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)1);
        public static final class Factory
            extends org.capnproto.StructFactory<Builder, Reader>
            implements org.capnproto.PipelineFactory<Pipeline> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Type.AnyPointer.Parameter.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
          public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
            return new Pipeline(promise);
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final long getScopeId() {
            return _getLongField(2);
          }
          public final void setScopeId(long value) {
            _setLongField(2, value);
          }

          public final short getParameterIndex() {
            return _getShortField(5);
          }
          public final void setParameterIndex(short value) {
            _setShortField(5, value);
          }

        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public final long getScopeId() {
            return _getLongField(2);
          }

          public final short getParameterIndex() {
            return _getShortField(5);
          }

        }

        public static class Pipeline extends org.capnproto.Pipeline<Reader> {
          public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
            super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
          }
        }
      }

      public static class ImplicitMethodParameter {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)1);
        public static final class Factory
            extends org.capnproto.StructFactory<Builder, Reader>
            implements org.capnproto.PipelineFactory<Pipeline> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Type.AnyPointer.ImplicitMethodParameter.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
          public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
            return new Pipeline(promise);
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final short getParameterIndex() {
            return _getShortField(5);
          }
          public final void setParameterIndex(short value) {
            _setShortField(5, value);
          }

        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public final short getParameterIndex() {
            return _getShortField(5);
          }

        }

        public static class Pipeline extends org.capnproto.Pipeline<Reader> {
          public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
            super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
          }
        }
      }

      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class Pipeline extends org.capnproto.Pipeline<Reader> {
      public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
        super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
      }
    }
  }

  public static class Brand {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
    public static final class Factory
        extends org.capnproto.StructFactory<Builder, Reader>
        implements org.capnproto.PipelineFactory<Pipeline> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Brand.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
      public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
        return new Pipeline(promise);
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasScopes() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Brand.Scope.Builder> getScopes() {
        return _getPointerField(org.capnproto.Schema.Brand.Scope.listFactory, 0, null, 0);
      }
      public final void setScopes(org.capnproto.StructList.Reader<org.capnproto.Schema.Brand.Scope.Reader> value) {
        _setPointerField(org.capnproto.Schema.Brand.Scope.listFactory, 0, value);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Brand.Scope.Builder> initScopes(int size) {
        return _initPointerField(org.capnproto.Schema.Brand.Scope.listFactory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final boolean hasScopes() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.StructList.Reader<org.capnproto.Schema.Brand.Scope.Reader> getScopes() {
        return _getPointerField(org.capnproto.Schema.Brand.Scope.listFactory, 0, null, 0);
      }

    }

    public static class Scope {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)1);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Brand.Scope.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(4)) {
            case 0 : return Which.BIND;
            case 1 : return Which.INHERIT;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final long getScopeId() {
          return _getLongField(0);
        }
        public final void setScopeId(long value) {
          _setLongField(0, value);
        }

        public final boolean isBind() {
          return which() == Brand.Scope.Which.BIND;
        }
        public final boolean hasBind() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Builder<org.capnproto.Schema.Brand.Binding.Builder> getBind() {
          return _getPointerField(org.capnproto.Schema.Brand.Binding.listFactory, 0, null, 0);
        }
        public final void setBind(org.capnproto.StructList.Reader<org.capnproto.Schema.Brand.Binding.Reader> value) {
          _setShortField(4, (short)Brand.Scope.Which.BIND.ordinal());
          _setPointerField(org.capnproto.Schema.Brand.Binding.listFactory, 0, value);
        }
        public final org.capnproto.StructList.Builder<org.capnproto.Schema.Brand.Binding.Builder> initBind(int size) {
          _setShortField(4, (short)Brand.Scope.Which.BIND.ordinal());
          return _initPointerField(org.capnproto.Schema.Brand.Binding.listFactory, 0, size);
        }
        public final boolean isInherit() {
          return which() == Brand.Scope.Which.INHERIT;
        }
        public final org.capnproto.Void getInherit() {
          assert which() == Brand.Scope.Which.INHERIT:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }
        public final void setInherit(org.capnproto.Void value) {
          _setShortField(4, (short)Brand.Scope.Which.INHERIT.ordinal());
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(4)) {
            case 0 : return Which.BIND;
            case 1 : return Which.INHERIT;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final long getScopeId() {
          return _getLongField(0);
        }

        public final boolean isBind() {
          return which() == Brand.Scope.Which.BIND;
        }
        public final boolean hasBind() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Reader<org.capnproto.Schema.Brand.Binding.Reader> getBind() {
          return _getPointerField(org.capnproto.Schema.Brand.Binding.listFactory, 0, null, 0);
        }

        public final boolean isInherit() {
          return which() == Brand.Scope.Which.INHERIT;
        }
        public final org.capnproto.Void getInherit() {
          assert which() == Brand.Scope.Which.INHERIT:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }

      }

      public enum Which {
        BIND,
        INHERIT,
        _NOT_IN_SCHEMA,
      }
      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class Binding {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Brand.Binding.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(0)) {
            case 0 : return Which.UNBOUND;
            case 1 : return Which.TYPE;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean isUnbound() {
          return which() == Brand.Binding.Which.UNBOUND;
        }
        public final org.capnproto.Void getUnbound() {
          assert which() == Brand.Binding.Which.UNBOUND:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }
        public final void setUnbound(org.capnproto.Void value) {
          _setShortField(0, (short)Brand.Binding.Which.UNBOUND.ordinal());
        }

        public final boolean isType() {
          return which() == Brand.Binding.Which.TYPE;
        }
        public final org.capnproto.Schema.Type.Builder getType() {
          assert which() == Brand.Binding.Which.TYPE:
                      "Must check which() before get()ing a union member.";
          return _getPointerField(org.capnproto.Schema.Type.factory, 0, null, 0);
        }
        public final void setType(org.capnproto.Schema.Type.Reader value) {
          _setShortField(0, (short)Brand.Binding.Which.TYPE.ordinal());
          _setPointerField(org.capnproto.Schema.Type.factory,0, value);
        }
        public final org.capnproto.Schema.Type.Builder initType() {
          _setShortField(0, (short)Brand.Binding.Which.TYPE.ordinal());
          return _initPointerField(org.capnproto.Schema.Type.factory,0, 0);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(0)) {
            case 0 : return Which.UNBOUND;
            case 1 : return Which.TYPE;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final boolean isUnbound() {
          return which() == Brand.Binding.Which.UNBOUND;
        }
        public final org.capnproto.Void getUnbound() {
          assert which() == Brand.Binding.Which.UNBOUND:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }

        public final boolean isType() {
          return which() == Brand.Binding.Which.TYPE;
        }
        public boolean hasType() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Schema.Type.Reader getType() {
          assert which() == Brand.Binding.Which.TYPE:
                      "Must check which() before get()ing a union member.";
          return _getPointerField(org.capnproto.Schema.Type.factory,0,null, 0);
        }

      }

      public enum Which {
        UNBOUND,
        TYPE,
        _NOT_IN_SCHEMA,
      }
      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class Pipeline extends org.capnproto.Pipeline<Reader> {
      public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
        super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
      }
    }
  }

  public static class Value {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)1);
    public static final class Factory
        extends org.capnproto.StructFactory<Builder, Reader>
        implements org.capnproto.PipelineFactory<Pipeline> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Value.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
      public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
        return new Pipeline(promise);
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public Which which() {
        switch(_getShortField(0)) {
          case 0 : return Which.VOID;
          case 1 : return Which.BOOL;
          case 2 : return Which.INT8;
          case 3 : return Which.INT16;
          case 4 : return Which.INT32;
          case 5 : return Which.INT64;
          case 6 : return Which.UINT8;
          case 7 : return Which.UINT16;
          case 8 : return Which.UINT32;
          case 9 : return Which.UINT64;
          case 10 : return Which.FLOAT32;
          case 11 : return Which.FLOAT64;
          case 12 : return Which.TEXT;
          case 13 : return Which.DATA;
          case 14 : return Which.LIST;
          case 15 : return Which.ENUM;
          case 16 : return Which.STRUCT;
          case 17 : return Which.INTERFACE;
          case 18 : return Which.ANY_POINTER;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean isVoid() {
        return which() == Value.Which.VOID;
      }
      public final org.capnproto.Void getVoid() {
        assert which() == Value.Which.VOID:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setVoid(org.capnproto.Void value) {
        _setShortField(0, (short)Value.Which.VOID.ordinal());
      }

      public final boolean isBool() {
        return which() == Value.Which.BOOL;
      }
      public final boolean getBool() {
        assert which() == Value.Which.BOOL:
                    "Must check which() before get()ing a union member.";
        return _getBooleanField(16);
      }
      public final void setBool(boolean value) {
        _setShortField(0, (short)Value.Which.BOOL.ordinal());
        _setBooleanField(16, value);
      }

      public final boolean isInt8() {
        return which() == Value.Which.INT8;
      }
      public final byte getInt8() {
        assert which() == Value.Which.INT8:
                    "Must check which() before get()ing a union member.";
        return _getByteField(2);
      }
      public final void setInt8(byte value) {
        _setShortField(0, (short)Value.Which.INT8.ordinal());
        _setByteField(2, value);
      }

      public final boolean isInt16() {
        return which() == Value.Which.INT16;
      }
      public final short getInt16() {
        assert which() == Value.Which.INT16:
                    "Must check which() before get()ing a union member.";
        return _getShortField(1);
      }
      public final void setInt16(short value) {
        _setShortField(0, (short)Value.Which.INT16.ordinal());
        _setShortField(1, value);
      }

      public final boolean isInt32() {
        return which() == Value.Which.INT32;
      }
      public final int getInt32() {
        assert which() == Value.Which.INT32:
                    "Must check which() before get()ing a union member.";
        return _getIntField(1);
      }
      public final void setInt32(int value) {
        _setShortField(0, (short)Value.Which.INT32.ordinal());
        _setIntField(1, value);
      }

      public final boolean isInt64() {
        return which() == Value.Which.INT64;
      }
      public final long getInt64() {
        assert which() == Value.Which.INT64:
                    "Must check which() before get()ing a union member.";
        return _getLongField(1);
      }
      public final void setInt64(long value) {
        _setShortField(0, (short)Value.Which.INT64.ordinal());
        _setLongField(1, value);
      }

      public final boolean isUint8() {
        return which() == Value.Which.UINT8;
      }
      public final byte getUint8() {
        assert which() == Value.Which.UINT8:
                    "Must check which() before get()ing a union member.";
        return _getByteField(2);
      }
      public final void setUint8(byte value) {
        _setShortField(0, (short)Value.Which.UINT8.ordinal());
        _setByteField(2, value);
      }

      public final boolean isUint16() {
        return which() == Value.Which.UINT16;
      }
      public final short getUint16() {
        assert which() == Value.Which.UINT16:
                    "Must check which() before get()ing a union member.";
        return _getShortField(1);
      }
      public final void setUint16(short value) {
        _setShortField(0, (short)Value.Which.UINT16.ordinal());
        _setShortField(1, value);
      }

      public final boolean isUint32() {
        return which() == Value.Which.UINT32;
      }
      public final int getUint32() {
        assert which() == Value.Which.UINT32:
                    "Must check which() before get()ing a union member.";
        return _getIntField(1);
      }
      public final void setUint32(int value) {
        _setShortField(0, (short)Value.Which.UINT32.ordinal());
        _setIntField(1, value);
      }

      public final boolean isUint64() {
        return which() == Value.Which.UINT64;
      }
      public final long getUint64() {
        assert which() == Value.Which.UINT64:
                    "Must check which() before get()ing a union member.";
        return _getLongField(1);
      }
      public final void setUint64(long value) {
        _setShortField(0, (short)Value.Which.UINT64.ordinal());
        _setLongField(1, value);
      }

      public final boolean isFloat32() {
        return which() == Value.Which.FLOAT32;
      }
      public final float getFloat32() {
        assert which() == Value.Which.FLOAT32:
                    "Must check which() before get()ing a union member.";
        return _getFloatField(1);
      }
      public final void setFloat32(float value) {
        _setShortField(0, (short)Value.Which.FLOAT32.ordinal());
        _setFloatField(1, value);
      }

      public final boolean isFloat64() {
        return which() == Value.Which.FLOAT64;
      }
      public final double getFloat64() {
        assert which() == Value.Which.FLOAT64:
                    "Must check which() before get()ing a union member.";
        return _getDoubleField(1);
      }
      public final void setFloat64(double value) {
        _setShortField(0, (short)Value.Which.FLOAT64.ordinal());
        _setDoubleField(1, value);
      }

      public final boolean isText() {
        return which() == Value.Which.TEXT;
      }
      public final boolean hasText() {
        if (which() != Value.Which.TEXT) return false;
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getText() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setText(org.capnproto.Text.Reader value) {
        _setShortField(0, (short)Value.Which.TEXT.ordinal());
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setText(String value) {
        _setShortField(0, (short)Value.Which.TEXT.ordinal());
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initText(int size) {
        _setShortField(0, (short)Value.Which.TEXT.ordinal());
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final boolean isData() {
        return which() == Value.Which.DATA;
      }
      public final boolean hasData() {
        if (which() != Value.Which.DATA) return false;
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Data.Builder getData() {
        return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
      }
      public final void setData(org.capnproto.Data.Reader value) {
        _setShortField(0, (short)Value.Which.DATA.ordinal());
        _setPointerField(org.capnproto.Data.factory, 0, value);
      }
      public final void setData(byte [] value) {
        _setShortField(0, (short)Value.Which.DATA.ordinal());
        _setPointerField(org.capnproto.Data.factory, 0, new org.capnproto.Data.Reader(value));
      }
      public final org.capnproto.Data.Builder initData(int size) {
        _setShortField(0, (short)Value.Which.DATA.ordinal());
        return _initPointerField(org.capnproto.Data.factory, 0, size);
      }
      public final boolean isList() {
        return which() == Value.Which.LIST;
      }
      public final boolean hasList() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Builder getList() {
        assert which() == Value.Which.LIST:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public org.capnproto.AnyPointer.Builder initList() {
        _setShortField(0, (short)Value.Which.LIST.ordinal());
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, 0);
      }
      public org.capnproto.AnyPointer.Builder initList(int size) {
        _setShortField(0, (short)Value.Which.LIST.ordinal());
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, size);
      }

      public final boolean isEnum() {
        return which() == Value.Which.ENUM;
      }
      public final short getEnum() {
        assert which() == Value.Which.ENUM:
                    "Must check which() before get()ing a union member.";
        return _getShortField(1);
      }
      public final void setEnum(short value) {
        _setShortField(0, (short)Value.Which.ENUM.ordinal());
        _setShortField(1, value);
      }

      public final boolean isStruct() {
        return which() == Value.Which.STRUCT;
      }
      public final boolean hasStruct() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Builder getStruct() {
        assert which() == Value.Which.STRUCT:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public org.capnproto.AnyPointer.Builder initStruct() {
        _setShortField(0, (short)Value.Which.STRUCT.ordinal());
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, 0);
      }
      public org.capnproto.AnyPointer.Builder initStruct(int size) {
        _setShortField(0, (short)Value.Which.STRUCT.ordinal());
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, size);
      }

      public final boolean isInterface() {
        return which() == Value.Which.INTERFACE;
      }
      public final org.capnproto.Void getInterface() {
        assert which() == Value.Which.INTERFACE:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }
      public final void setInterface(org.capnproto.Void value) {
        _setShortField(0, (short)Value.Which.INTERFACE.ordinal());
      }

      public final boolean isAnyPointer() {
        return which() == Value.Which.ANY_POINTER;
      }
      public final boolean hasAnyPointer() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Builder getAnyPointer() {
        assert which() == Value.Which.ANY_POINTER:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public org.capnproto.AnyPointer.Builder initAnyPointer() {
        _setShortField(0, (short)Value.Which.ANY_POINTER.ordinal());
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, 0);
      }
      public org.capnproto.AnyPointer.Builder initAnyPointer(int size) {
        _setShortField(0, (short)Value.Which.ANY_POINTER.ordinal());
        return _initPointerField(org.capnproto.AnyPointer.factory, 0, size);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public Which which() {
        switch(_getShortField(0)) {
          case 0 : return Which.VOID;
          case 1 : return Which.BOOL;
          case 2 : return Which.INT8;
          case 3 : return Which.INT16;
          case 4 : return Which.INT32;
          case 5 : return Which.INT64;
          case 6 : return Which.UINT8;
          case 7 : return Which.UINT16;
          case 8 : return Which.UINT32;
          case 9 : return Which.UINT64;
          case 10 : return Which.FLOAT32;
          case 11 : return Which.FLOAT64;
          case 12 : return Which.TEXT;
          case 13 : return Which.DATA;
          case 14 : return Which.LIST;
          case 15 : return Which.ENUM;
          case 16 : return Which.STRUCT;
          case 17 : return Which.INTERFACE;
          case 18 : return Which.ANY_POINTER;
          default: return Which._NOT_IN_SCHEMA;
        }
      }
      public final boolean isVoid() {
        return which() == Value.Which.VOID;
      }
      public final org.capnproto.Void getVoid() {
        assert which() == Value.Which.VOID:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isBool() {
        return which() == Value.Which.BOOL;
      }
      public final boolean getBool() {
        assert which() == Value.Which.BOOL:
                    "Must check which() before get()ing a union member.";
        return _getBooleanField(16);
      }

      public final boolean isInt8() {
        return which() == Value.Which.INT8;
      }
      public final byte getInt8() {
        assert which() == Value.Which.INT8:
                    "Must check which() before get()ing a union member.";
        return _getByteField(2);
      }

      public final boolean isInt16() {
        return which() == Value.Which.INT16;
      }
      public final short getInt16() {
        assert which() == Value.Which.INT16:
                    "Must check which() before get()ing a union member.";
        return _getShortField(1);
      }

      public final boolean isInt32() {
        return which() == Value.Which.INT32;
      }
      public final int getInt32() {
        assert which() == Value.Which.INT32:
                    "Must check which() before get()ing a union member.";
        return _getIntField(1);
      }

      public final boolean isInt64() {
        return which() == Value.Which.INT64;
      }
      public final long getInt64() {
        assert which() == Value.Which.INT64:
                    "Must check which() before get()ing a union member.";
        return _getLongField(1);
      }

      public final boolean isUint8() {
        return which() == Value.Which.UINT8;
      }
      public final byte getUint8() {
        assert which() == Value.Which.UINT8:
                    "Must check which() before get()ing a union member.";
        return _getByteField(2);
      }

      public final boolean isUint16() {
        return which() == Value.Which.UINT16;
      }
      public final short getUint16() {
        assert which() == Value.Which.UINT16:
                    "Must check which() before get()ing a union member.";
        return _getShortField(1);
      }

      public final boolean isUint32() {
        return which() == Value.Which.UINT32;
      }
      public final int getUint32() {
        assert which() == Value.Which.UINT32:
                    "Must check which() before get()ing a union member.";
        return _getIntField(1);
      }

      public final boolean isUint64() {
        return which() == Value.Which.UINT64;
      }
      public final long getUint64() {
        assert which() == Value.Which.UINT64:
                    "Must check which() before get()ing a union member.";
        return _getLongField(1);
      }

      public final boolean isFloat32() {
        return which() == Value.Which.FLOAT32;
      }
      public final float getFloat32() {
        assert which() == Value.Which.FLOAT32:
                    "Must check which() before get()ing a union member.";
        return _getFloatField(1);
      }

      public final boolean isFloat64() {
        return which() == Value.Which.FLOAT64;
      }
      public final double getFloat64() {
        assert which() == Value.Which.FLOAT64:
                    "Must check which() before get()ing a union member.";
        return _getDoubleField(1);
      }

      public final boolean isText() {
        return which() == Value.Which.TEXT;
      }
      public boolean hasText() {
        if (which() != Value.Which.TEXT) return false;
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getText() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public final boolean isData() {
        return which() == Value.Which.DATA;
      }
      public boolean hasData() {
        if (which() != Value.Which.DATA) return false;
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Data.Reader getData() {
        return _getPointerField(org.capnproto.Data.factory, 0, null, 0, 0);
      }

      public final boolean isList() {
        return which() == Value.Which.LIST;
      }
      public boolean hasList() {
        if (which() != Value.Which.LIST) return false;
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Reader getList() {
        assert which() == Value.Which.LIST:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public final boolean isEnum() {
        return which() == Value.Which.ENUM;
      }
      public final short getEnum() {
        assert which() == Value.Which.ENUM:
                    "Must check which() before get()ing a union member.";
        return _getShortField(1);
      }

      public final boolean isStruct() {
        return which() == Value.Which.STRUCT;
      }
      public boolean hasStruct() {
        if (which() != Value.Which.STRUCT) return false;
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Reader getStruct() {
        assert which() == Value.Which.STRUCT:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
      public final boolean isInterface() {
        return which() == Value.Which.INTERFACE;
      }
      public final org.capnproto.Void getInterface() {
        assert which() == Value.Which.INTERFACE:
                    "Must check which() before get()ing a union member.";
        return org.capnproto.Void.VOID;
      }

      public final boolean isAnyPointer() {
        return which() == Value.Which.ANY_POINTER;
      }
      public boolean hasAnyPointer() {
        if (which() != Value.Which.ANY_POINTER) return false;
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.AnyPointer.Reader getAnyPointer() {
        assert which() == Value.Which.ANY_POINTER:
                    "Must check which() before get()ing a union member.";
        return _getPointerField(org.capnproto.AnyPointer.factory, 0);
      }
    }

    public enum Which {
      VOID,
      BOOL,
      INT8,
      INT16,
      INT32,
      INT64,
      UINT8,
      UINT16,
      UINT32,
      UINT64,
      FLOAT32,
      FLOAT64,
      TEXT,
      DATA,
      LIST,
      ENUM,
      STRUCT,
      INTERFACE,
      ANY_POINTER,
      _NOT_IN_SCHEMA,
    }
    public static class Pipeline extends org.capnproto.Pipeline<Reader> {
      public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
        super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
      }
    }
  }

  public static class Annotation {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
    public static final class Factory
        extends org.capnproto.StructFactory<Builder, Reader>
        implements org.capnproto.PipelineFactory<Pipeline> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Annotation.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
      public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
        return new Pipeline(promise);
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final long getId() {
        return _getLongField(0);
      }
      public final void setId(long value) {
        _setLongField(0, value);
      }

      public final org.capnproto.Schema.Value.Builder getValue() {
        return _getPointerField(org.capnproto.Schema.Value.factory, 0, null, 0);
      }
      public final void setValue(org.capnproto.Schema.Value.Reader value) {
        _setPointerField(org.capnproto.Schema.Value.factory,0, value);
      }
      public final org.capnproto.Schema.Value.Builder initValue() {
        return _initPointerField(org.capnproto.Schema.Value.factory,0, 0);
      }
      public final org.capnproto.Schema.Brand.Builder getBrand() {
        return _getPointerField(org.capnproto.Schema.Brand.factory, 1, null, 0);
      }
      public final void setBrand(org.capnproto.Schema.Brand.Reader value) {
        _setPointerField(org.capnproto.Schema.Brand.factory,1, value);
      }
      public final org.capnproto.Schema.Brand.Builder initBrand() {
        return _initPointerField(org.capnproto.Schema.Brand.factory,1, 0);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final long getId() {
        return _getLongField(0);
      }

      public boolean hasValue() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Schema.Value.Reader getValue() {
        return _getPointerField(org.capnproto.Schema.Value.factory,0,null, 0);
      }

      public boolean hasBrand() {
        return !_pointerFieldIsNull(1);
      }
      public org.capnproto.Schema.Brand.Reader getBrand() {
        return _getPointerField(org.capnproto.Schema.Brand.factory,1,null, 0);
      }

    }

    public static class Pipeline extends org.capnproto.Pipeline<Reader> {
      public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
        super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
      }
    }
  }

  public enum ElementSize {
    EMPTY,
    BIT,
    BYTE,
    TWO_BYTES,
    FOUR_BYTES,
    EIGHT_BYTES,
    POINTER,
    INLINE_COMPOSITE,
    _NOT_IN_SCHEMA,
  }

  public static class CapnpVersion {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
    public static final class Factory
        extends org.capnproto.StructFactory<Builder, Reader>
        implements org.capnproto.PipelineFactory<Pipeline> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return CapnpVersion.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
      public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
        return new Pipeline(promise);
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final short getMajor() {
        return _getShortField(0);
      }
      public final void setMajor(short value) {
        _setShortField(0, value);
      }

      public final byte getMinor() {
        return _getByteField(2);
      }
      public final void setMinor(byte value) {
        _setByteField(2, value);
      }

      public final byte getMicro() {
        return _getByteField(3);
      }
      public final void setMicro(byte value) {
        _setByteField(3, value);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final short getMajor() {
        return _getShortField(0);
      }

      public final byte getMinor() {
        return _getByteField(2);
      }

      public final byte getMicro() {
        return _getByteField(3);
      }

    }

    public static class Pipeline extends org.capnproto.Pipeline<Reader> {
      public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
        super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
      }
    }
  }

  public static class CodeGeneratorRequest {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)4);
    public static final class Factory
        extends org.capnproto.StructFactory<Builder, Reader>
        implements org.capnproto.PipelineFactory<Pipeline> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return CodeGeneratorRequest.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
      public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
        return new Pipeline(promise);
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasNodes() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Node.Builder> getNodes() {
        return _getPointerField(org.capnproto.Schema.Node.listFactory, 0, null, 0);
      }
      public final void setNodes(org.capnproto.StructList.Reader<org.capnproto.Schema.Node.Reader> value) {
        _setPointerField(org.capnproto.Schema.Node.listFactory, 0, value);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Node.Builder> initNodes(int size) {
        return _initPointerField(org.capnproto.Schema.Node.listFactory, 0, size);
      }
      public final boolean hasRequestedFiles() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.CodeGeneratorRequest.RequestedFile.Builder> getRequestedFiles() {
        return _getPointerField(org.capnproto.Schema.CodeGeneratorRequest.RequestedFile.listFactory, 1, null, 0);
      }
      public final void setRequestedFiles(org.capnproto.StructList.Reader<org.capnproto.Schema.CodeGeneratorRequest.RequestedFile.Reader> value) {
        _setPointerField(org.capnproto.Schema.CodeGeneratorRequest.RequestedFile.listFactory, 1, value);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.CodeGeneratorRequest.RequestedFile.Builder> initRequestedFiles(int size) {
        return _initPointerField(org.capnproto.Schema.CodeGeneratorRequest.RequestedFile.listFactory, 1, size);
      }
      public final org.capnproto.Schema.CapnpVersion.Builder getCapnpVersion() {
        return _getPointerField(org.capnproto.Schema.CapnpVersion.factory, 2, null, 0);
      }
      public final void setCapnpVersion(org.capnproto.Schema.CapnpVersion.Reader value) {
        _setPointerField(org.capnproto.Schema.CapnpVersion.factory,2, value);
      }
      public final org.capnproto.Schema.CapnpVersion.Builder initCapnpVersion() {
        return _initPointerField(org.capnproto.Schema.CapnpVersion.factory,2, 0);
      }
      public final boolean hasSourceInfo() {
        return !_pointerFieldIsNull(3);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Node.SourceInfo.Builder> getSourceInfo() {
        return _getPointerField(org.capnproto.Schema.Node.SourceInfo.listFactory, 3, null, 0);
      }
      public final void setSourceInfo(org.capnproto.StructList.Reader<org.capnproto.Schema.Node.SourceInfo.Reader> value) {
        _setPointerField(org.capnproto.Schema.Node.SourceInfo.listFactory, 3, value);
      }
      public final org.capnproto.StructList.Builder<org.capnproto.Schema.Node.SourceInfo.Builder> initSourceInfo(int size) {
        return _initPointerField(org.capnproto.Schema.Node.SourceInfo.listFactory, 3, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final boolean hasNodes() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.StructList.Reader<org.capnproto.Schema.Node.Reader> getNodes() {
        return _getPointerField(org.capnproto.Schema.Node.listFactory, 0, null, 0);
      }

      public final boolean hasRequestedFiles() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Reader<org.capnproto.Schema.CodeGeneratorRequest.RequestedFile.Reader> getRequestedFiles() {
        return _getPointerField(org.capnproto.Schema.CodeGeneratorRequest.RequestedFile.listFactory, 1, null, 0);
      }

      public boolean hasCapnpVersion() {
        return !_pointerFieldIsNull(2);
      }
      public org.capnproto.Schema.CapnpVersion.Reader getCapnpVersion() {
        return _getPointerField(org.capnproto.Schema.CapnpVersion.factory,2,null, 0);
      }

      public final boolean hasSourceInfo() {
        return !_pointerFieldIsNull(3);
      }
      public final org.capnproto.StructList.Reader<org.capnproto.Schema.Node.SourceInfo.Reader> getSourceInfo() {
        return _getPointerField(org.capnproto.Schema.Node.SourceInfo.listFactory, 3, null, 0);
      }

    }

    public static class RequestedFile {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
      public static final class Factory
          extends org.capnproto.StructFactory<Builder, Reader>
          implements org.capnproto.PipelineFactory<Pipeline> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return CodeGeneratorRequest.RequestedFile.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
        public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
          return new Pipeline(promise);
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final long getId() {
          return _getLongField(0);
        }
        public final void setId(long value) {
          _setLongField(0, value);
        }

        public final boolean hasFilename() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.Text.Builder getFilename() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }
        public final void setFilename(org.capnproto.Text.Reader value) {
          _setPointerField(org.capnproto.Text.factory, 0, value);
        }
        public final void setFilename(String value) {
          _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
        }
        public final org.capnproto.Text.Builder initFilename(int size) {
          return _initPointerField(org.capnproto.Text.factory, 0, size);
        }
        public final boolean hasImports() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Builder<org.capnproto.Schema.CodeGeneratorRequest.RequestedFile.Import.Builder> getImports() {
          return _getPointerField(org.capnproto.Schema.CodeGeneratorRequest.RequestedFile.Import.listFactory, 1, null, 0);
        }
        public final void setImports(org.capnproto.StructList.Reader<org.capnproto.Schema.CodeGeneratorRequest.RequestedFile.Import.Reader> value) {
          _setPointerField(org.capnproto.Schema.CodeGeneratorRequest.RequestedFile.Import.listFactory, 1, value);
        }
        public final org.capnproto.StructList.Builder<org.capnproto.Schema.CodeGeneratorRequest.RequestedFile.Import.Builder> initImports(int size) {
          return _initPointerField(org.capnproto.Schema.CodeGeneratorRequest.RequestedFile.Import.listFactory, 1, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final long getId() {
          return _getLongField(0);
        }

        public boolean hasFilename() {
          return !_pointerFieldIsNull(0);
        }
        public org.capnproto.Text.Reader getFilename() {
          return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
        }

        public final boolean hasImports() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Reader<org.capnproto.Schema.CodeGeneratorRequest.RequestedFile.Import.Reader> getImports() {
          return _getPointerField(org.capnproto.Schema.CodeGeneratorRequest.RequestedFile.Import.listFactory, 1, null, 0);
        }

      }

      public static class Import {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
        public static final class Factory
            extends org.capnproto.StructFactory<Builder, Reader>
            implements org.capnproto.PipelineFactory<Pipeline> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return CodeGeneratorRequest.RequestedFile.Import.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
          public Pipeline newPipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> promise) {
            return new Pipeline(promise);
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final long getId() {
            return _getLongField(0);
          }
          public final void setId(long value) {
            _setLongField(0, value);
          }

          public final boolean hasName() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getName() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setName(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setName(String value) {
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initName(int size) {
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public final long getId() {
            return _getLongField(0);
          }

          public boolean hasName() {
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getName() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

        }

        public static class Pipeline extends org.capnproto.Pipeline<Reader> {
          public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
            super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
          }
        }
      }

      public static class Pipeline extends org.capnproto.Pipeline<Reader> {
        public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
          super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
        }
      }
    }

    public static class Pipeline extends org.capnproto.Pipeline<Reader> {
      public Pipeline(org.capnproto.RemotePromise<org.capnproto.AnyPointer.Reader> remotePromise) {
        super(org.capnproto.RemotePromise.fromTypeless(factory, remotePromise));
      }
    }
  }


public static final class Schemas {
public static final org.capnproto.SegmentReader b_e682ab4cf923a417 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0017\u00a4\u0023\u00f9\u004c\u00ab\u0082\u00e6" +
   "\u0031\u0000\u0000\u0000\u0001\u0000\u0005\u0000" +
   "\u00d9\u0072\u004c\u0062\u0009\u00c5\u003f\u00a9" +
   "\u0006\u0000\u0007\u0000\u0000\u0000\u0006\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00b2\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0037\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0059\u0000\u0000\u0000\u0017\u0003\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u004e\u006f\u0064\u0065\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00b1\u00a3\u000f\u00f1\u00cc\u001b\u0052\u00b9" +
   "\u0011\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0042\u00c2\u000f\u00fa\u00bb\u0055\u00bf\u00de" +
   "\u0011\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u00ae\u0057\u0013\u0004\u00e3\u001d\u008e\u00f3" +
   "\u0011\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065" +
   "\u0072\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004e\u0065\u0073\u0074\u0065\u0064\u004e\u006f" +
   "\u0064\u0065\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0053\u006f\u0075\u0072\u0063\u0065\u0049\u006e" +
   "\u0066\u006f\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0038\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0079\u0001\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0080\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007d\u0001\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0088\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0085\u0001\u0000\u0000\u00c2\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0088\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0094\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0091\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0098\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0095\u0001\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0094\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b0\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ad\u0001\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ac\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c8\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0008\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c5\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c0\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00cc\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0009\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0035\u0044\u00fb\u0037\u009b\u00b1\u00a0\u009e" +
   "\u00c9\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\n\u0000\u00fd\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0098\u00f5\u0033\u0043\u0036\u00b3\u004a\u00b5" +
   "\u00b1\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000b\u0000\u00fc\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008f\u0021\u00c2\u00f0\u00cf\u0053\u0027\u00e8" +
   "\u0099\u0001\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u00fb\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0020\u0094\r\u007a\u00ac\u00a5\u008a\u00b1" +
   "\u0085\u0001\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u00fa\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0090\u0002\n\u0040\u00d4\u0019\u0016\u00ec" +
   "\u006d\u0001\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0020\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0059\u0001\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0058\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0020\u0001\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0021\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0001\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u007c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u004e" +
   "\u0061\u006d\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u004e" +
   "\u0061\u006d\u0065\u0050\u0072\u0065\u0066\u0069" +
   "\u0078\u004c\u0065\u006e\u0067\u0074\u0068\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0063\u006f\u0070\u0065\u0049\u0064\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u0065\u0073\u0074\u0065\u0064\u004e\u006f" +
   "\u0064\u0065\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0042\u00c2\u000f\u00fa\u00bb\u0055\u00bf\u00de" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069" +
   "\u006f\u006e\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0042\u0075\u0025\u00ab\r\u0095\u00c8\u00f1" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u006c\u0065\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0074\u0072\u0075\u0063\u0074\u0000\u0000" +
   "\u0065\u006e\u0075\u006d\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u006e\u0073\u0074\u0000\u0000\u0000" +
   "\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069" +
   "\u006f\u006e\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065" +
   "\u0072\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b1\u00a3\u000f\u00f1\u00cc\u001b\u0052\u00b9" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0073\u0047\u0065\u006e\u0065\u0072\u0069" +
   "\u0063\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b9521bccf10fa3b1 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b1\u00a3\u000f\u00f1\u00cc\u001b\u0052\u00b9" +
   "\u0036\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0017\u00a4\u0023\u00f9\u004c\u00ab\u0082\u00e6" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0002\u0002\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u004e\u006f\u0064\u0065\u002e\u0050\u0061" +
   "\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_debf55bbfa0fc242 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0042\u00c2\u000f\u00fa\u00bb\u0055\u00bf\u00de" +
   "\u0036\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0017\u00a4\u0023\u00f9\u004c\u00ab\u0082\u00e6" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\n\u0002\u0000\u0000" +
   "\u0035\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u004e\u006f\u0064\u0065\u002e\u004e\u0065" +
   "\u0073\u0074\u0065\u0064\u004e\u006f\u0064\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_f38e1de3041357ae =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00ae\u0057\u0013\u0004\u00e3\u001d\u008e\u00f3" +
   "\u0036\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0017\u00a4\u0023\u00f9\u004c\u00ab\u0082\u00e6" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\n\u0002\u0000\u0000" +
   "\u0035\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u004e\u006f\u0064\u0065\u002e\u0053\u006f" +
   "\u0075\u0072\u0063\u0065\u0049\u006e\u0066\u006f" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00a2\u001f\u008e\u0089\u0038\u0090\u00ba\u00c2" +
   "\u0001\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u004d\u0065\u006d\u0062\u0065\u0072\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0068\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u006f\u0063\u0043\u006f\u006d\u006d\u0065" +
   "\u006e\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u0065\u006d\u0062\u0065\u0072\u0073\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a2\u001f\u008e\u0089\u0038\u0090\u00ba\u00c2" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c2ba9038898e1fa2 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00a2\u001f\u008e\u0089\u0038\u0090\u00ba\u00c2" +
   "\u0041\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00ae\u0057\u0013\u0004\u00e3\u001d\u008e\u00f3" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0042\u0002\u0000\u0000" +
   "\u0035\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u004e\u006f\u0064\u0065\u002e\u0053\u006f" +
   "\u0075\u0072\u0063\u0065\u0049\u006e\u0066\u006f" +
   "\u002e\u004d\u0065\u006d\u0062\u0065\u0072\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0064\u006f\u0063\u0043\u006f\u006d\u006d\u0065" +
   "\u006e\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9ea0b19b37fb4435 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0035\u0044\u00fb\u0037\u009b\u00b1\u00a0\u009e" +
   "\u0036\u0000\u0000\u0000\u0001\u0000\u0005\u0000" +
   "\u0017\u00a4\u0023\u00f9\u004c\u00ab\u0082\u00e6" +
   "\u0006\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u008f\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u004e\u006f\u0064\u0065\u002e\u0073\u0074" +
   "\u0072\u0075\u0063\u0074\u0000\u0000\u0000\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b5\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u000c\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00bd\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00bc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\r\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0009\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c5\u0000\u0000\u0000\u00b2\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u00e0\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\n\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d1\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00cc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u000f\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000b\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d5\u0000\u0000\u0000\u0092\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00e4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000c\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e1\u0000\u0000\u0000\u009a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\r\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ed\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0004\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0064\u0061\u0074\u0061\u0057\u006f\u0072\u0064" +
   "\u0043\u006f\u0075\u006e\u0074\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u006f\u0069\u006e\u0074\u0065\u0072\u0043" +
   "\u006f\u0075\u006e\u0074\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0072\u0065\u0066\u0065\u0072\u0072\u0065" +
   "\u0064\u004c\u0069\u0073\u0074\u0045\u006e\u0063" +
   "\u006f\u0064\u0069\u006e\u0067\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0026\u0019\u0052\u00ba\u007d\u008f\u0095\u00d1" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0073\u0047\u0072\u006f\u0075\u0070\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0069\u0073\u0063\u0072\u0069\u006d\u0069" +
   "\u006e\u0061\u006e\u0074\u0043\u006f\u0075\u006e" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0069\u0073\u0063\u0072\u0069\u006d\u0069" +
   "\u006e\u0061\u006e\u0074\u004f\u0066\u0066\u0073" +
   "\u0065\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u0065\u006c\u0064\u0073\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u005f\u00f4\u004a\u001f\u00a4\u0050\u00ad\u009a" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b54ab3364333f598 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0098\u00f5\u0033\u0043\u0036\u00b3\u004a\u00b5" +
   "\u0036\u0000\u0000\u0000\u0001\u0000\u0005\u0000" +
   "\u0017\u00a4\u0023\u00f9\u004c\u00ab\u0082\u00e6" +
   "\u0006\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u004e\u006f\u0064\u0065\u002e\u0065\u006e" +
   "\u0075\u006d\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000e\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0028\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0065\u006e\u0075\u006d\u0065\u0072\u0061\u006e" +
   "\u0074\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u009a\u0054\u00dc\u00eb\u007c\u008a\u0097" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_e82753cff0c2218f =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u008f\u0021\u00c2\u00f0\u00cf\u0053\u0027\u00e8" +
   "\u0036\u0000\u0000\u0000\u0001\u0000\u0005\u0000" +
   "\u0017\u00a4\u0023\u00f9\u004c\u00ab\u0082\u00e6" +
   "\u0006\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0002\u0002\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u004e\u006f\u0064\u0065\u002e\u0069\u006e" +
   "\u0074\u0065\u0072\u0066\u0061\u0063\u0065\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0040\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u001f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003d\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006d\u0065\u0074\u0068\u006f\u0064\u0073\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0080\u004d\u0033\u003b\u00e2\u00cc\u0000\u0095" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0075\u0070\u0065\u0072\u0063\u006c\u0061" +
   "\u0073\u0073\u0065\u0073\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f8\u00d7\u00a4\u00d0\u009e\u002a\u0096\u00a9" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b18aa5ac7a0d9420 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0020\u0094\r\u007a\u00ac\u00a5\u008a\u00b1" +
   "\u0036\u0000\u0000\u0000\u0001\u0000\u0005\u0000" +
   "\u0017\u00a4\u0023\u00f9\u004c\u00ab\u0082\u00e6" +
   "\u0006\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e2\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u004e\u006f\u0064\u0065\u002e\u0063\u006f" +
   "\u006e\u0073\u0074\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0010\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0011\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0060\u00cc\u00f9\u00e1\u00ed\u0078\u0073\u00d0" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0076\u0061\u006c\u0075\u0065\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009b\u000c\u00b0\u00d7\u00d2\u00dc\u0023\u00ce" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ec1619d4400a0290 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0090\u0002\n\u0040\u00d4\u0019\u0016\u00ec" +
   "\u0036\u0000\u0000\u0000\u0001\u0000\u0005\u0000" +
   "\u0017\u00a4\u0023\u00f9\u004c\u00ab\u0082\u00e6" +
   "\u0006\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\n\u0002\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u00df\u0002\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u004e\u006f\u0064\u0065\u002e\u0061\u006e" +
   "\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0034\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u005d\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0058\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0064\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0070\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0013\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0001\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0060\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u006c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0071\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0014\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0001\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0068\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0015\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0001\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u007c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0073\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0016\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0079\u0001\u0000\u0000\u008a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0088\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0074\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0085\u0001\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0084\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0090\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u0000\u0000\u0075\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0018\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008d\u0001\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0098\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u0000\u0000\u0076\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0019\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0095\u0001\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0094\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a0\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009d\u0001\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a8\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0009\u0000\u0000\u0000\u0078\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u001b\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a5\u0001\u0000\u0000\u008a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a8\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b4\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\n\u0000\u0000\u0000\u0079\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u001c\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b1\u0001\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00bc\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000b\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u001d\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u0001\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b8\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c4\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u007b\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u001e\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c1\u0001\u0000\u0000\u0092\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c4\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d0\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0060\u00cc\u00f9\u00e1\u00ed\u0078\u0073\u00d0" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0072\u0067\u0065\u0074\u0073\u0046" +
   "\u0069\u006c\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0072\u0067\u0065\u0074\u0073\u0043" +
   "\u006f\u006e\u0073\u0074\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0072\u0067\u0065\u0074\u0073\u0045" +
   "\u006e\u0075\u006d\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0072\u0067\u0065\u0074\u0073\u0045" +
   "\u006e\u0075\u006d\u0065\u0072\u0061\u006e\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0072\u0067\u0065\u0074\u0073\u0053" +
   "\u0074\u0072\u0075\u0063\u0074\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0072\u0067\u0065\u0074\u0073\u0046" +
   "\u0069\u0065\u006c\u0064\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0072\u0067\u0065\u0074\u0073\u0055" +
   "\u006e\u0069\u006f\u006e\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0072\u0067\u0065\u0074\u0073\u0047" +
   "\u0072\u006f\u0075\u0070\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0072\u0067\u0065\u0074\u0073\u0049" +
   "\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0072\u0067\u0065\u0074\u0073\u004d" +
   "\u0065\u0074\u0068\u006f\u0064\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0072\u0067\u0065\u0074\u0073\u0050" +
   "\u0061\u0072\u0061\u006d\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0072\u0067\u0065\u0074\u0073\u0041" +
   "\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f" +
   "\u006e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9aad50a41f4af45f =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u005f\u00f4\u004a\u001f\u00a4\u0050\u00ad\u009a" +
   "\u0031\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u00d9\u0072\u004c\u0062\u0009\u00c5\u003f\u00a9" +
   "\u0004\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ba\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0039\u0000\u0000\u0000\u008f\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0046\u0069\u0065\u006c\u0064\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0012\u00c7\u00fe\u007c\u00be\u004c\u00b1\u0097" +
   "\u0001\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u006e\u006f\u0044\u0069\u0073\u0063\u0072\u0069" +
   "\u006d\u0069\u006e\u0061\u006e\u0074\u0000\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b5\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00bc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c1\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00dc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d9\u0000\u0000\u0000\u0092\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00dc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00e8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u0074\u00b4\u006b\u0047\u0005\u0023\u00c4" +
   "\u00e5\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u001d\u00db\u0068\u00db\u00cd\u00fc\u00ca" +
   "\u00cd\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e6\u000b\u0087\u0087\u00c2\u00d5\u0090\u00bb" +
   "\u00b5\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u0064\u0065\u004f\u0072\u0064\u0065" +
   "\u0072\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069" +
   "\u006f\u006e\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0042\u0075\u0025\u00ab\r\u0095\u00c8\u00f1" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0069\u0073\u0063\u0072\u0069\u006d\u0069" +
   "\u006e\u0061\u006e\u0074\u0056\u0061\u006c\u0075" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u006c\u006f\u0074\u0000\u0000\u0000\u0000" +
   "\u0067\u0072\u006f\u0075\u0070\u0000\u0000\u0000" +
   "\u006f\u0072\u0064\u0069\u006e\u0061\u006c\u0000" + "");
public static final org.capnproto.SegmentReader b_97b14cbe7cfec712 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0012\u00c7\u00fe\u007c\u00be\u004c\u00b1\u0097" +
   "\u0037\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
   "\u005f\u00f4\u004a\u001f\u00a4\u0050\u00ad\u009a" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0032\u0002\u0000\u0000" +
   "\u0035\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0030\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0046\u0069\u0065\u006c\u0064\u002e\u006e" +
   "\u006f\u0044\u0069\u0073\u0063\u0072\u0069\u006d" +
   "\u0069\u006e\u0061\u006e\u0074\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c42305476bb4746f =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u006f\u0074\u00b4\u006b\u0047\u0005\u0023\u00c4" +
   "\u0037\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u005f\u00f4\u004a\u001f\u00a4\u0050\u00ad\u009a" +
   "\u0004\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e2\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0046\u0069\u0065\u006c\u0064\u002e\u0073" +
   "\u006c\u006f\u0074\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\\\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0068\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0060\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u006c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0080\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\n\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\u009a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0080\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006f\u0066\u0066\u0073\u0065\u0074\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0060\u00cc\u00f9\u00e1\u00ed\u0078\u0073\u00d0" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0056" +
   "\u0061\u006c\u0075\u0065\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009b\u000c\u00b0\u00d7\u00d2\u00dc\u0023\u00ce" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0068\u0061\u0064\u0045\u0078\u0070\u006c\u0069" +
   "\u0063\u0069\u0074\u0044\u0065\u0066\u0061\u0075" +
   "\u006c\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_cafccddb68db1d11 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0011\u001d\u00db\u0068\u00db\u00cd\u00fc\u00ca" +
   "\u0037\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u005f\u00f4\u004a\u001f\u00a4\u0050\u00ad\u009a" +
   "\u0004\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0046\u0069\u0065\u006c\u0064\u002e\u0067" +
   "\u0072\u006f\u0075\u0070\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0049\u0064\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_bb90d5c287870be6 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00e6\u000b\u0087\u0087\u00c2\u00d5\u0090\u00bb" +
   "\u0037\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u005f\u00f4\u004a\u001f\u00a4\u0050\u00ad\u009a" +
   "\u0004\u0000\u0007\u0000\u0001\u0000\u0002\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00fa\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0046\u0069\u0065\u006c\u0064\u002e\u006f" +
   "\u0072\u0064\u0069\u006e\u0061\u006c\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0009\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0030\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u003c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u006d\u0070\u006c\u0069\u0063\u0069\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0078\u0070\u006c\u0069\u0063\u0069\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_978a7cebdc549a4d =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u004d\u009a\u0054\u00dc\u00eb\u007c\u008a\u0097" +
   "\u0031\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00d9\u0072\u004c\u0062\u0009\u00c5\u003f\u00a9" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0001\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0045\u006e\u0075\u006d\u0065\u0072\u0061" +
   "\u006e\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u006c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u0064\u0065\u004f\u0072\u0064\u0065" +
   "\u0072\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069" +
   "\u006f\u006e\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0042\u0075\u0025\u00ab\r\u0095\u00c8\u00f1" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a9962a9ed0a4d7f8 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00f8\u00d7\u00a4\u00d0\u009e\u002a\u0096\u00a9" +
   "\u0031\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00d9\u0072\u004c\u0062\u0009\u00c5\u003f\u00a9" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e2\u0001\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0053\u0075\u0070\u0065\u0072\u0063\u006c" +
   "\u0061\u0073\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0072\u0061\u006e\u0064\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002b\u0042\u0065\u0060\u00f0\u0055\u0034\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9500cce23b334d80 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0080\u004d\u0033\u003b\u00e2\u00cc\u0000\u0095" +
   "\u0031\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u00d9\u0072\u004c\u0062\u0009\u00c5\u003f\u00a9" +
   "\u0005\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00c2\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00c7\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u004d\u0065\u0074\u0068\u006f\u0064\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0020\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d1\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00cc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d5\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00e0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00dd\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00dc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00e8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e5\u0000\u0000\u0000\u008a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f1\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0001\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0001\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u001c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0001\u0000\u0000\u009a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u0064\u0065\u004f\u0072\u0064\u0065" +
   "\u0072\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0061\u0072\u0061\u006d\u0053\u0074\u0072" +
   "\u0075\u0063\u0074\u0054\u0079\u0070\u0065\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0073\u0075\u006c\u0074\u0053\u0074" +
   "\u0072\u0075\u0063\u0074\u0054\u0079\u0070\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069" +
   "\u006f\u006e\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0042\u0075\u0025\u00ab\r\u0095\u00c8\u00f1" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0061\u0072\u0061\u006d\u0042\u0072\u0061" +
   "\u006e\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002b\u0042\u0065\u0060\u00f0\u0055\u0034\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0073\u0075\u006c\u0074\u0042\u0072" +
   "\u0061\u006e\u0064\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002b\u0042\u0065\u0060\u00f0\u0055\u0034\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006d\u0070\u006c\u0069\u0063\u0069\u0074" +
   "\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065" +
   "\u0072\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b1\u00a3\u000f\u00f1\u00cc\u001b\u0052\u00b9" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d07378ede1f9cc60 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0060\u00cc\u00f9\u00e1\u00ed\u0078\u0073\u00d0" +
   "\u0031\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u00d9\u0072\u004c\u0062\u0009\u00c5\u003f\u00a9" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0013\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00b2\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002f\u0004\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0054\u0079\u0070\u0065\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0002\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0002\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fd\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0002\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00fc\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0002\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u00fb\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0002\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u001c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u00fa\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0002\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0014\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0020\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u00f9\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0002\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0018\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0024\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u00f8\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0028\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0008\u0000\u00f7\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0020\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u002c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0009\u0000\u00f6\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0009\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\n\u0000\u00f5\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\n\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0002\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000b\u0000\u00f4\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000b\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0002\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000c\u0000\u00f3\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000c\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0035\u0002\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0030\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u003c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\r\u0000\u00f2\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\r\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0039\u0002\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0034\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0040\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000e\u0000\u00f1\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0097\u00ea\u0060\n\u0025\u0039\u00e7\u0087" +
   "\u003d\u0002\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u00f0\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a9\u0087\u007f\u001a\u0071\u0078\u000e\u009e" +
   "\u0025\u0002\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u00ef\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d3\u00c6\u004c\u00ef\u0060\u006f\u003a\u00ac" +
   "\r\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u00ee\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00bf\u000c\u00fb\u00f7\u0069\u00ca\u008b\u00ed" +
   "\u00f5\u0001\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u00ed\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f1\u0049\u003e\u00a2\u00e8\u003f\u0057\u00c2" +
   "\u00e1\u0001\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0076\u006f\u0069\u0064\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u006f\u006f\u006c\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0038\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0031\u0036\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0033\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0036\u0034\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0069\u006e\u0074\u0038\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0069\u006e\u0074\u0031\u0036\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0069\u006e\u0074\u0033\u0032\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0069\u006e\u0074\u0036\u0034\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u006c\u006f\u0061\u0074\u0033\u0032\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u006c\u006f\u0061\u0074\u0036\u0034\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0078\u0074\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0061\u0074\u0061\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0069\u0073\u0074\u0000\u0000\u0000\u0000" +
   "\u0065\u006e\u0075\u006d\u0000\u0000\u0000\u0000" +
   "\u0073\u0074\u0072\u0075\u0063\u0074\u0000\u0000" +
   "\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u006e\u0079\u0050\u006f\u0069\u006e\u0074" +
   "\u0065\u0072\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_87e739250a60ea97 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0097\u00ea\u0060\n\u0025\u0039\u00e7\u0087" +
   "\u0036\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u0060\u00cc\u00f9\u00e1\u00ed\u0078\u0073\u00d0" +
   "\u0001\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0054\u0079\u0070\u0065\u002e\u006c\u0069" +
   "\u0073\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000e\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0054" +
   "\u0079\u0070\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0060\u00cc\u00f9\u00e1\u00ed\u0078\u0073\u00d0" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9e0e78711a7f87a9 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00a9\u0087\u007f\u001a\u0071\u0078\u000e\u009e" +
   "\u0036\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u0060\u00cc\u00f9\u00e1\u00ed\u0078\u0073\u00d0" +
   "\u0001\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0054\u0079\u0070\u0065\u002e\u0065\u006e" +
   "\u0075\u006d\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0015\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0049\u0064\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0072\u0061\u006e\u0064\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002b\u0042\u0065\u0060\u00f0\u0055\u0034\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ac3a6f60ef4cc6d3 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00d3\u00c6\u004c\u00ef\u0060\u006f\u003a\u00ac" +
   "\u0036\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u0060\u00cc\u00f9\u00e1\u00ed\u0078\u0073\u00d0" +
   "\u0001\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0054\u0079\u0070\u0065\u002e\u0073\u0074" +
   "\u0072\u0075\u0063\u0074\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0010\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0016\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0049\u0064\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0072\u0061\u006e\u0064\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002b\u0042\u0065\u0060\u00f0\u0055\u0034\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ed8bca69f7fb0cbf =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00bf\u000c\u00fb\u00f7\u0069\u00ca\u008b\u00ed" +
   "\u0036\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u0060\u00cc\u00f9\u00e1\u00ed\u0078\u0073\u00d0" +
   "\u0001\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0002\u0002\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0054\u0079\u0070\u0065\u002e\u0069\u006e" +
   "\u0074\u0065\u0072\u0066\u0061\u0063\u0065\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0011\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0049\u0064\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0072\u0061\u006e\u0064\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002b\u0042\u0065\u0060\u00f0\u0055\u0034\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c2573fe8a23e49f1 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00f1\u0049\u003e\u00a2\u00e8\u003f\u0057\u00c2" +
   "\u0036\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u0060\u00cc\u00f9\u00e1\u00ed\u0078\u0073\u00d0" +
   "\u0001\u0000\u0007\u0000\u0001\u0000\u0003\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\n\u0002\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0054\u0079\u0070\u0065\u002e\u0061\u006e" +
   "\u0079\u0050\u006f\u0069\u006e\u0074\u0065\u0072" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0056\u0036\u0059\u00fe\u0079\u005f\u003b\u008e" +
   "\u0045\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0085\u004a\u0061\u00f4\u0024\u00f7\u00d1\u009d" +
   "\u0031\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u00fd\u00ff\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u00e2\u0056\u000c\u0012\u00c9\u00ef\u00ba" +
   "\u001d\u0000\u0000\u0000\u00c2\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u006e\u0063\u006f\u006e\u0073\u0074\u0072" +
   "\u0061\u0069\u006e\u0065\u0064\u0000\u0000\u0000" +
   "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065" +
   "\u0072\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006d\u0070\u006c\u0069\u0063\u0069\u0074" +
   "\u004d\u0065\u0074\u0068\u006f\u0064\u0050\u0061" +
   "\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0000" + "");
public static final org.capnproto.SegmentReader b_8e3b5f79fe593656 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0056\u0036\u0059\u00fe\u0079\u005f\u003b\u008e" +
   "\u0041\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u00f1\u0049\u003e\u00a2\u00e8\u003f\u0057\u00c2" +
   "\u0001\u0000\u0007\u0000\u0001\u0000\u0004\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u007a\u0002\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0054\u0079\u0070\u0065\u002e\u0061\u006e" +
   "\u0079\u0050\u006f\u0069\u006e\u0074\u0065\u0072" +
   "\u002e\u0075\u006e\u0063\u006f\u006e\u0073\u0074" +
   "\u0072\u0061\u0069\u006e\u0065\u0064\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\\\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0068\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0019\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0060\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u006c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fd\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0070\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00fc\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u001b\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0078\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0061\u006e\u0079\u004b\u0069\u006e\u0064\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0074\u0072\u0075\u0063\u0074\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0069\u0073\u0074\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0061\u0070\u0061\u0062\u0069\u006c\u0069" +
   "\u0074\u0079\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9dd1f724f4614a85 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0085\u004a\u0061\u00f4\u0024\u00f7\u00d1\u009d" +
   "\u0041\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u00f1\u0049\u003e\u00a2\u00e8\u003f\u0057\u00c2" +
   "\u0001\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u005a\u0002\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0054\u0079\u0070\u0065\u002e\u0061\u006e" +
   "\u0079\u0050\u006f\u0069\u006e\u0074\u0065\u0072" +
   "\u002e\u0070\u0061\u0072\u0061\u006d\u0065\u0074" +
   "\u0065\u0072\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0013\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0014\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0063\u006f\u0070\u0065\u0049\u0064\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065" +
   "\u0072\u0049\u006e\u0064\u0065\u0078\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_baefc9120c56e274 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0074\u00e2\u0056\u000c\u0012\u00c9\u00ef\u00ba" +
   "\u0041\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u00f1\u0049\u003e\u00a2\u00e8\u003f\u0057\u00c2" +
   "\u0001\u0000\u0007\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ca\u0002\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0039\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0054\u0079\u0070\u0065\u002e\u0061\u006e" +
   "\u0079\u0050\u006f\u0069\u006e\u0074\u0065\u0072" +
   "\u002e\u0069\u006d\u0070\u006c\u0069\u0063\u0069" +
   "\u0074\u004d\u0065\u0074\u0068\u006f\u0064\u0050" +
   "\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0018\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065" +
   "\u0072\u0049\u006e\u0064\u0065\u0078\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_903455f06065422b =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u002b\u0042\u0065\u0060\u00f0\u0055\u0034\u0090" +
   "\u0031\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00d9\u0072\u004c\u0062\u0009\u00c5\u003f\u00a9" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ba\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0042\u0072\u0061\u006e\u0064\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00c9\u006b\u0063\u00a9\u0085\u0034\u00d7\u00ab" +
   "\u0009\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u00fc\u00e7\u009e\u0096\u0016\u00cd\u0063\u00c8" +
   "\u0005\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0053\u0063\u006f\u0070\u0065\u0000\u0000\u0000" +
   "\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0024\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0063\u006f\u0070\u0065\u0073\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c9\u006b\u0063\u00a9\u0085\u0034\u00d7\u00ab" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_abd73485a9636bc9 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00c9\u006b\u0063\u00a9\u0085\u0034\u00d7\u00ab" +
   "\u0037\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u002b\u0042\u0065\u0060\u00f0\u0055\u0034\u0090" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0001\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0042\u0072\u0061\u006e\u0064\u002e\u0053" +
   "\u0063\u006f\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0060\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u005d\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0058\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0064\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0063\u006f\u0070\u0065\u0049\u0064\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0069\u006e\u0064\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00fc\u00e7\u009e\u0096\u0016\u00cd\u0063\u00c8" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0068\u0065\u0072\u0069\u0074\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c863cd16969ee7fc =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00fc\u00e7\u009e\u0096\u0016\u00cd\u0063\u00c8" +
   "\u0037\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u002b\u0042\u0065\u0060\u00f0\u0055\u0034\u0090" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00fa\u0001\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0042\u0072\u0061\u006e\u0064\u002e\u0042" +
   "\u0069\u006e\u0064\u0069\u006e\u0067\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0075\u006e\u0062\u006f\u0075\u006e\u0064\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0060\u00cc\u00f9\u00e1\u00ed\u0078\u0073\u00d0" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ce23dcd2d7b00c9b =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u009b\u000c\u00b0\u00d7\u00d2\u00dc\u0023\u00ce" +
   "\u0031\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00d9\u0072\u004c\u0062\u0009\u00c5\u003f\u00a9" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0013\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ba\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002f\u0004\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0056\u0061\u006c\u0075\u0065\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0002\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0010\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0002\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fd\u00ff\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0002\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00fc\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0002\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u00fb\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0002\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u001c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u00fa\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0002\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0014\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0020\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u00f9\u00ff\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0002\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0018\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0024\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u00f8\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0028\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0008\u0000\u00f7\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0020\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u002c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0009\u0000\u00f6\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0009\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\n\u0000\u00f5\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\n\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0002\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000b\u0000\u00f4\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000b\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0002\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000c\u0000\u00f3\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000c\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0035\u0002\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0030\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u003c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\r\u0000\u00f2\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\r\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0039\u0002\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0034\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0040\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000e\u0000\u00f1\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000e\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003d\u0002\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0038\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0044\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000f\u0000\u00f0\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u0002\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003c\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0048\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0010\u0000\u00ef\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0010\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0002\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0011\u0000\u00ee\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0011\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0002\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0012\u0000\u00ed\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0012\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0002\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0076\u006f\u0069\u0064\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u006f\u006f\u006c\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0038\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0031\u0036\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0033\u0032\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0036\u0034\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0069\u006e\u0074\u0038\u0000\u0000\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0069\u006e\u0074\u0031\u0036\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0069\u006e\u0074\u0033\u0032\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0069\u006e\u0074\u0036\u0034\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u006c\u006f\u0061\u0074\u0033\u0032\u0000" +
   "\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u006c\u006f\u0061\u0074\u0036\u0034\u0000" +
   "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000b\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0078\u0074\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0061\u0074\u0061\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0069\u0073\u0074\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u006e\u0075\u006d\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0074\u0072\u0075\u0063\u0074\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u006e\u0079\u0050\u006f\u0069\u006e\u0074" +
   "\u0065\u0072\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0012\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_f1c8950dab257542 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0042\u0075\u0025\u00ab\r\u0095\u00c8\u00f1" +
   "\u0031\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00d9\u0072\u004c\u0062\u0009\u00c5\u003f\u00a9" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e2\u0001\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0041\u006e\u006e\u006f\u0074\u0061\u0074" +
   "\u0069\u006f\u006e\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0076\u0061\u006c\u0075\u0065\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009b\u000c\u00b0\u00d7\u00d2\u00dc\u0023\u00ce" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0072\u0061\u006e\u0064\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002b\u0042\u0065\u0060\u00f0\u0055\u0034\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d1958f7dba521926 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0026\u0019\u0052\u00ba\u007d\u008f\u0095\u00d1" +
   "\u0031\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u00d9\u0072\u004c\u0062\u0009\u00c5\u003f\u00a9" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0001\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u00c7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0045\u006c\u0065\u006d\u0065\u006e\u0074" +
   "\u0053\u0069\u007a\u0065\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0020\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0059\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003d\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0039\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0035\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u006d\u0070\u0074\u0079\u0000\u0000\u0000" +
   "\u0062\u0069\u0074\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0079\u0074\u0065\u0000\u0000\u0000\u0000" +
   "\u0074\u0077\u006f\u0042\u0079\u0074\u0065\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u006f\u0075\u0072\u0042\u0079\u0074\u0065" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0069\u0067\u0068\u0074\u0042\u0079\u0074" +
   "\u0065\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u006f\u0069\u006e\u0074\u0065\u0072\u0000" +
   "\u0069\u006e\u006c\u0069\u006e\u0065\u0043\u006f" +
   "\u006d\u0070\u006f\u0073\u0069\u0074\u0065\u0000" + "");
public static final org.capnproto.SegmentReader b_d85d305b7d839963 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0063\u0099\u0083\u007d\u005b\u0030\u005d\u00d8" +
   "\u0031\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00d9\u0072\u004c\u0062\u0009\u00c5\u003f\u00a9" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00f2\u0001\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0043\u0061\u0070\u006e\u0070\u0056\u0065" +
   "\u0072\u0073\u0069\u006f\u006e\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006d\u0061\u006a\u006f\u0072\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u0069\u006e\u006f\u0072\u0000\u0000\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u0069\u0063\u0072\u006f\u0000\u0000\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_bfc546f6210ad7ce =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00ce\u00d7\n\u0021\u00f6\u0046\u00c5\u00bf" +
   "\u0031\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00d9\u0072\u004c\u0062\u0009\u00c5\u003f\u00a9" +
   "\u0004\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0032\u0002\u0000\u0000" +
   "\u0035\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0043\u006f\u0064\u0065\u0047\u0065\u006e" +
   "\u0065\u0072\u0061\u0074\u006f\u0072\u0052\u0065" +
   "\u0071\u0075\u0065\u0073\u0074\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0062\u0000\u0081\u002e\u00b0\u000e\u00ea\u00cf" +
   "\u0001\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0052\u0065\u0071\u0075\u0065\u0073\u0074\u0065" +
   "\u0064\u0046\u0069\u006c\u0065\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\\\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0078\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0090\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008d\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0098\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0095\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0094\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u006f\u0064\u0065\u0073\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0017\u00a4\u0023\u00f9\u004c\u00ab\u0082\u00e6" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u0065" +
   "\u0064\u0046\u0069\u006c\u0065\u0073\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0000\u0081\u002e\u00b0\u000e\u00ea\u00cf" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0061\u0070\u006e\u0070\u0056\u0065\u0072" +
   "\u0073\u0069\u006f\u006e\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0099\u0083\u007d\u005b\u0030\u005d\u00d8" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0049\u006e" +
   "\u0066\u006f\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ae\u0057\u0013\u0004\u00e3\u001d\u008e\u00f3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_cfea0eb02e810062 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0062\u0000\u0081\u002e\u00b0\u000e\u00ea\u00cf" +
   "\u0046\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00ce\u00d7\n\u0021\u00f6\u0046\u00c5\u00bf" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00a2\u0002\u0000\u0000" +
   "\u003d\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0043\u006f\u0064\u0065\u0047\u0065\u006e" +
   "\u0065\u0072\u0061\u0074\u006f\u0072\u0052\u0065" +
   "\u0071\u0075\u0065\u0073\u0074\u002e\u0052\u0065" +
   "\u0071\u0075\u0065\u0073\u0074\u0065\u0064\u0046" +
   "\u0069\u006c\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00e5\u0057\u0023\u0012\u0093\u0041\u0050\u00ae" +
   "\u0001\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0049\u006d\u0070\u006f\u0072\u0074\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0068\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u006c\u0065\u006e\u0061\u006d\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006d\u0070\u006f\u0072\u0074\u0073\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e5\u0057\u0023\u0012\u0093\u0041\u0050\u00ae" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ae504193122357e5 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00e5\u0057\u0023\u0012\u0093\u0041\u0050\u00ae" +
   "\u0054\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0062\u0000\u0081\u002e\u00b0\u000e\u00ea\u00cf" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0002\u0000\u0000" +
   "\u0041\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0075\u006e\u0074\u0069\u006d\u0065\u002f" +
   "\u0073\u0072\u0063\u002f\u006d\u0061\u0069\u006e" +
   "\u002f\u006a\u0061\u0076\u0061\u002f\u006f\u0072" +
   "\u0067\u002f\u0063\u0061\u0070\u006e\u0070\u0072" +
   "\u006f\u0074\u006f\u002f\u0073\u0063\u0068\u0065" +
   "\u006d\u0061\u002e\u0063\u0061\u0070\u006e\u0070" +
   "\u003a\u0043\u006f\u0064\u0065\u0047\u0065\u006e" +
   "\u0065\u0072\u0061\u0074\u006f\u0072\u0052\u0065" +
   "\u0071\u0075\u0065\u0073\u0074\u002e\u0052\u0065" +
   "\u0071\u0075\u0065\u0073\u0074\u0065\u0064\u0046" +
   "\u0069\u006c\u0065\u002e\u0049\u006d\u0070\u006f" +
   "\u0072\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
}
}

